{"version":3,"file":"index.modern.js","sources":["../src/InputText.js","../src/Loading.js","../src/InputFile.js","../src/InputChoose.js","../src/InputDate.js","../src/InputNumber.js","../src/LoadingOverlay.js","../src/DataTableContainer.js","../src/DataTable.js","../src/Field.js","../src/InputDateTime.js","../src/InputTime.js","../src/InputTag.js","../src/InputSelect.js","../src/InputWorkflow.js","../src/InputYear.js","../src/LoadingPage.js","../src/InputColor.js","../src/InputSelectFetch.js","../src/Chart.jsx","../src/ChartLine.jsx","../src/ChartBar.jsx","../src/ChartArea.jsx","../src/ChartCandleStick.jsx","../src/ChartHeatMap.jsx","../src/ChartTreeMap.jsx","../src/ChartPie.jsx","../src/ChartDonut.jsx","../src/ChartRadar.jsx","../src/ChartRange.jsx","../src/ChartBubble.jsx","../src/ChartPolarArea.jsx","../src/ChartRadial.jsx","../src/ChartScatter.jsx","../src/ChartBoxPlot.jsx","../src/ChartHistogram.jsx"],"sourcesContent":["import React, { useState, useRef, createRef, useEffect } from 'react'\n\nimport Cleave from 'cleave.js/react'\n\nimport { isEmpty, isUndefined, isNull, isEqual } from 'lodash'\n\nimport PhoneInput from 'react-phone-number-input'\n\nimport JoditEditor from 'jodit-react'\n\nimport Mousetrap from 'mousetrap'\n\nimport './InputText.module.css'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport parse from 'html-react-parser'\n\nimport { Form, Modal } from 'react-bootstrap'\n\nimport * as MathType from '@wiris/mathtype-generic'\n\nimport ContentEditable from 'react-contenteditable'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nclass WirisEquationEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    // this.toolbarRef = props.toolbarRef;\n    this.equationEditorRef = React.createRef()\n    this.toolbarRef = React.createRef()\n  }\n\n  componentDidMount() {\n    let { toolbarRef } = this.props\n\n    try {\n      let genericIntegrationProperties = {}\n\n      genericIntegrationProperties.target = this.equationEditorRef.current\n\n      genericIntegrationProperties.toolbar = this.toolbarRef.current\n\n      let genericIntegrationInstance =\n        new window.WirisPlugin.GenericIntegration(genericIntegrationProperties)\n\n      genericIntegrationInstance.init()\n\n      genericIntegrationInstance.listeners.fire('onTargetReady', {})\n    } catch (e) {}\n  }\n\n  handleEquationChange = (event) => {\n    let { onEquationInput } = this.props\n    let mathFormat = window.WirisPlugin.Parser.endParse(event.target.value)\n    let equationImage = event.target.value\n    onEquationInput(equationImage, mathFormat)\n  }\n\n  render() {\n    let { value } = this.props || {}\n    return (\n      <div>\n        <div ref={this.toolbarRef} />\n        <ContentEditable\n          suppressContentEditableWarning={true}\n          className='form-control'\n          innerRef={this.equationEditorRef}\n          onChange={this.handleEquationChange}\n          html={value || ''}\n        />\n      </div>\n    )\n  }\n}\n\nfunction InputText(props) {\n  const dispatch = useDispatch()\n\n  const propsName = !isUndefined(props?.name)\n    ? slug(String(props?.name), '_')\n    : ''\n\n  const [placeholder, setPlaceholder] = useState(props?.placeholder || '')\n\n  const type = !isUndefined(props?.type) ? String(props?.type) : ''\n\n  const [open, setOpen] = useState(false)\n\n  const [optionsCleave, setOptionsCleave] = useState({})\n\n  const [config, setConfig] = useState({\n    readonly: false,\n    placeholder: ' ',\n    toolbarButtonSize: 'small'\n  })\n\n  const input = useSelector((state) => state.core?.input) || {}\n\n  const toolbarRef = useRef()\n\n  const editorRef = useRef()\n\n  // const toolbarRef = React.createRef()\n\n  // const editorRef = React.createRef()\n\n  let defaultType = type === 'text' || isUndefined(type) ? 'search' : type\n\n  let value = findArrayName(propsName, input) || ''\n\n  useEffect(() => {\n    let default_placeholder = props?.placeholder || ''\n\n    let options_cleave = {}\n\n    if (type.toLowerCase() == 'nik') {\n      options_cleave = {\n        delimiter: ' ',\n        blocks: [2, 2, 2, 6, 4],\n        numericOnly: true\n      }\n      default_placeholder = props?.placeholder || 'Nomor Induk Kependudukan'\n    } else if (type.toLowerCase() == 'kip') {\n      options_cleave = {\n        delimiter: ' ',\n        blocks: [4, 4, 4, 4]\n      }\n      default_placeholder = props?.placeholder || 'Kartu Indonesia Pintar'\n    } else if (type.toLowerCase() == 'npwp') {\n      options_cleave = {\n        delimiters: ['.', '.', '.', '-', '.'],\n        blocks: [2, 3, 3, 1, 3, 3],\n        numericOnly: true\n      }\n      default_placeholder = props?.placeholder || 'Nomor Pokok Wajib Pajak'\n    } else if (type.toLowerCase() == 'postcode') {\n      options_cleave = {\n        blocks: [5],\n        delimiter: ' ',\n        numericOnly: true\n      }\n      default_placeholder = props?.placeholder || 'Kode Pos'\n    } else if (type.toLowerCase() == 'phone') {\n      default_placeholder = props?.placeholder || 'Telepon'\n    }\n    setPlaceholder(default_placeholder)\n    setOptionsCleave(options_cleave)\n  }, [type])\n\n  useEffect(() => {\n    if (!isUndefined(props?.value)) {\n      onChange(props?.value)\n    }\n  }, [props?.value])\n\n  useEffect(() => {\n    if (props?.disableCopy || props?.disablePaste || props?.disableSelectAll) {\n      let comb = []\n\n      if (props?.disableCopy) {\n        comb.push('command+c')\n        comb.push('ctrl+c')\n      }\n\n      if (props?.disablePaste) {\n        comb.push('command+v')\n        comb.push('ctrl+v')\n      }\n\n      if (props?.disableSelectAll) {\n        comb.push('command+a')\n        comb.push('ctrl+a')\n      }\n\n      if (comb.length > 0) {\n        Mousetrap.bind(comb, function () {\n          return false\n        })\n      }\n    }\n  }, [])\n\n  function setInput(key, val) {\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n  }\n\n  function handleInputChange(event) {\n    event.preventDefault()\n\n    let data = event.target.value ? String(event.target.value) : ''\n\n    if (\n      type == 'nik' ||\n      type == 'kip' ||\n      type == 'npwp' ||\n      type == 'postcode'\n    ) {\n      data = data.replace(/\\D/g, '')\n    }\n\n    if (props?.maxlength) {\n      data = data.substring(0, props?.maxlength)\n    }\n\n    onChange(data)\n  }\n\n  function openModal() {\n    setOpen(true)\n  }\n\n  function closeModal() {\n    setOpen(false)\n  }\n\n  function onChange(data) {\n    setInput(propsName, data)\n  }\n\n  if (!propsName) return 'Name is Required'\n\n  if (props?.disabled || props?.isReadonly) {\n    return !isEmpty(value) && parse(String(value))\n  } else if (\n    type == 'nik' ||\n    type == 'kip' ||\n    type == 'npwp' ||\n    type == 'postcode'\n  ) {\n    return (\n      <Cleave\n        placeholder={placeholder}\n        id={props?.id}\n        name={propsName}\n        value={value}\n        onChange={handleInputChange}\n        options={optionsCleave}\n        className='form-control'\n      />\n    )\n  } else if (type == 'textarea') {\n    return (\n      <textarea\n        id={props?.id}\n        rows={props?.rows || 3}\n        className='form-control no-resize mousetrap'\n        onChange={handleInputChange}\n        name={propsName}\n        value={value}\n        placeholder={placeholder}\n      ></textarea>\n    )\n  } else if (type == 'phone') {\n    return (\n      <PhoneInput\n        international\n        defaultCountry='ID'\n        value={value ? String(value) : ''}\n        onChange={onChange}\n      />\n    )\n  } else if (type == 'texteditor') {\n    return (\n      <React.Fragment>\n        <div\n          className='form-control'\n          style={{ minHeight: 32 }}\n          onClick={openModal}\n        >\n          {!isEmpty(value) ? parse(String(value)) : ''}\n        </div>\n        <Modal size='lg' show={open} onHide={closeModal}>\n          <Modal.Header onHide={closeModal} closeButton>\n            <Modal.Title>{placeholder || 'Text Editor'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <JoditEditor\n              key={props?.name + '_editor'}\n              id={props?.id}\n              ref={editorRef}\n              value={!isEmpty(value) ? String(value) : ''}\n              config={config}\n              tabIndex={1}\n              onChange={onChange}\n            />\n          </Modal.Body>\n        </Modal>\n      </React.Fragment>\n    )\n  } else if (type == 'equation') {\n    return (\n      <React.Fragment>\n        <div\n          className='form-control'\n          style={{ minHeight: 32 }}\n          onClick={openModal}\n        >\n          {!isEmpty(value) ? parse(String(value)) : ''}\n        </div>\n        <Modal size='lg' show={open} onHide={closeModal}>\n          <Modal.Header onHide={closeModal} closeButton>\n            <Modal.Title>{placeholder || 'Equation Editor'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div id={props?.id}>\n              <WirisEquationEditor\n                id={props?.id}\n                onEquationInput={onChange}\n                toolbarRef={toolbarRef}\n                value={value}\n              />\n            </div>\n          </Modal.Body>\n        </Modal>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <Form.Control\n      id={props?.id}\n      type={defaultType}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleInputChange}\n      name={propsName}\n      className='form-control mousetrap'\n    />\n  )\n}\n\nexport default InputText\n","import React from 'react'\n\nimport PuffLoader from 'react-spinners/PuffLoader'\n\nfunction Loading() {\n  return <PuffLoader color={'#000'} size={25} />\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport DropzoneComponent from 'react-dropzone-component'\n\nimport { Player } from 'video-react'\n\nimport * as momentImported from 'moment'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { findArrayName, slug, setAuthHeader, secureData } from 'tcomponent'\n\nimport {\n  isNull,\n  isUndefined,\n  isEqual,\n  isEmpty,\n  filter,\n  isArray,\n  isString\n} from 'lodash'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  faTimes,\n  faSearch,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Loading from './Loading'\n\nimport { Form, Button, Modal, ButtonGroup } from 'react-bootstrap'\n\nlet moment = momentImported\n\nfunction Preview(props) {\n  try {\n    if (isEqual(props.type.type.substring(0, 5), 'image')) {\n      return (\n        <img\n          key={props.file}\n          className='img-responsive'\n          style={{ maxWidth: '100%' }}\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        />\n      )\n    } else if (isEqual(props.type.type.substring(0, 5), 'video')) {\n      return (\n        <Player\n          key={props.file}\n          autoPlay={false}\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        />\n      )\n    } else if (isEqual(props.type.type, 'application/pdf')) {\n      return (\n        <iframe\n          key={props.file}\n          width='100%'\n          height='480'\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        ></iframe>\n      )\n    }\n  } catch (e) {}\n\n  return null\n}\n\nfunction InputFile(props) {\n  let acceptedFiles = props.accept\n    ? props.accept\n    : 'image/*, video/*, audio/*, .docx, .xlsx, .pptx, .csv, .pdf'\n\n  let input = useSelector((state) => state.core.input)\n\n  let parameter = useSelector((state) => state.core.parameter)\n\n  let [type, setType] = useState({})\n\n  let [value, setValue] = useState([])\n\n  let [loading, setLoading] = useState(false)\n\n  let auth = useSelector((state) => state.auth)\n\n  let dispatch = useDispatch()\n\n  function onDelete(val) {\n    let url = process.env.REACT_APP_API_URL + '/file/delete'\n\n    let data = secureData({\n      token_file: val,\n      token: auth.token\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n\n    setLoading(true)\n\n    axios(options)\n      .then((response) => {\n        if (!isEmpty(response.data.message)) {\n          dispatch({\n            type: 'SET_MESSAGE',\n            payload: response.data.message\n          })\n        }\n\n        let isi = filter(value, (o) => {\n          return !isEqual(o, val)\n        })\n\n        setValue(isi)\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: isi }\n        })\n\n        setLoading(false)\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'SET_MESSAGE',\n          payload: 'Gagal menghapus lampiran'\n        })\n\n        let isi = filter(value, (o) => {\n          return !isEqual(o, val)\n        })\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: isi }\n        })\n\n        setValue(isi)\n\n        setLoading(false)\n      })\n  }\n\n  function fetchInfo(token) {\n    if (\n      isString(token) &&\n      !isEmpty(token) &&\n      token != 'null' &&\n      isEmpty(type[token])\n    ) {\n      let url = process.env.REACT_APP_API_URL + '/file/info'\n\n      let data = secureData({\n        token_file: token\n      })\n\n      let options = {\n        method: 'POST',\n        headers: setAuthHeader(auth),\n        url,\n        data\n      }\n\n      setLoading(true)\n\n      axios(options)\n        .then((response) => {\n          if (response.data.success) {\n            type[token] = response.data.data\n            setType(type)\n\n            open[token] = false\n            setOpen(open)\n          }\n          setLoading(false)\n        })\n        .catch((error) => {\n          type[token] = ''\n          setType(type)\n\n          open[token] = false\n          setOpen(open)\n        })\n    }\n  }\n\n  function reloadType(t) {\n    try {\n      if (isArray(t) && t.length > 0) {\n        for (let i = 0; i < t.length; i++) {\n          let kondisi = cekValidFile(t[i])\n\n          if (kondisi) {\n            fetchInfo(t[i])\n          }\n        }\n      } else {\n        let kondisi = cekValidFile(t)\n\n        if (kondisi) {\n          fetchInfo(t)\n        }\n      }\n    } catch (e) {}\n  }\n\n  function cekValidFile(h) {\n    return (\n      isString(h) && !isEmpty(h) && h != 'null'\n      //!isNull(h) && !isUndefined(h) && !isEmpty(h)\n      //&& isEqual(String(h).substring(0, 3), 'AT-')\n    )\n  }\n\n  function setValid(u) {\n    return filter(u, cekValidFile) || []\n  }\n\n  function setIsinya(d) {\n    let i = String(d).split('|')\n\n    return setValid(i)\n  }\n\n  useEffect(() => {\n    let x = props.value ? props.value : findArrayName(props.name, input)\n\n    if (x) {\n      let cek = setIsinya(x)\n\n      setValue(cek)\n    }\n  }, [])\n\n  useEffect(() => {\n    let cek = setIsinya(findArrayName(props.name, input))\n    if (!isEqual(cek, value)) {\n      setValue(cek)\n    }\n  }, [findArrayName(props.name, input)])\n\n  useEffect(() => {\n    reloadType(value)\n  }, [value])\n\n  useEffect(() => {\n    openFile(loading)\n  }, [loading])\n\n  function toggle(val) {\n    setOpen({ ...open, [val]: !open[val] })\n  }\n\n  function fileUpload(file, base64) {\n    let url = props.url || process.env.REACT_APP_API_URL + '/file/upload'\n\n    let _data = new FormData()\n\n    let _name = file.name\n\n    let _type = file.type\n\n    _data.append('type', _type)\n    _data.append('name', _name)\n    _data.append('file', file)\n    _data.append(\n      'lastModifiedDate',\n      moment(file.lastModifiedDate).format('YYYY-MM-DD HH:mm:ss')\n    )\n    _data.append('size', file.size)\n\n    setLoading(true)\n\n    axios\n      .post(url, _data, {\n        headers: setAuthHeader(\n          auth,\n          `multipart/form-data; boundary=${_data._boundary}`\n        )\n      })\n      .then((response) => {\n        if (!isEmpty(response.data.message)) {\n          dispatch({\n            type: 'SET_MESSAGE',\n            payload: response.data.message\n          })\n        }\n\n        if (response.data.success) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: props.name, value: response.data.data.token }\n          })\n\n          setValue([response.data.data.token])\n        } else {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: props.name, value: '' }\n          })\n        }\n\n        setLoading(false)\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: '' }\n        })\n\n        dispatch({\n          type: 'SET_MESSAGE',\n          payload: 'Gagal mengunggah lampiran'\n        })\n\n        setLoading(false)\n      })\n  }\n\n  function createfile(file) {\n    let reader = new FileReader()\n\n    reader.onload = (e) => {\n      fileUpload(file, e.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  function onChangeMultiple(file) {\n    let isi = JSON.parse(file.xhr.response)\n\n    let current = value || []\n\n    current.push(isi.data.token)\n\n    let t =\n      filter(current, function (o) {\n        return !isEmpty(o)\n      }) || []\n\n    dispatch({\n      type: 'SET_INPUT',\n      payload: { key: props.name, value: t.join('|') }\n    })\n\n    setValue(t)\n  }\n\n  function onDeleteMultiple(data) {}\n\n  function onInput(e) {\n    openFile(false)\n  }\n\n  function openFile(val) {\n    if (val != parameter.openFile) {\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: { key: 'openFile', value: val }\n      })\n    }\n  }\n\n  function onClick(e) {\n    openFile(true)\n\n    setTimeout(() => {\n      openFile(false)\n    }, 60000)\n  }\n\n  function onChange(e) {\n    let files = e.target.files || e.dataTransfer.files\n\n    if (!files.length) return\n\n    createfile(files[0])\n  }\n\n  function onDrop() {}\n\n  let [open, setOpen] = useState({})\n\n  let terisi = setValid(value)\n\n  if (!process.env.REACT_APP_API_URL) {\n    return <span>REACT_APP_API_URL is required for .env</span>\n  }\n\n  return (\n    <div>\n      {!loading && !props.isReadonly && (\n        <div>\n          {!props.isMultiple && (\n            <div style={{ display: 'inline-block' }}>\n              <Form.Control\n                className={props.className}\n                accept={acceptedFiles}\n                label={props.name}\n                type='file'\n                onChange={onChange}\n                onInput={onInput}\n                onClick={onClick}\n              />\n            </div>\n          )}\n\n          {!loading && props.isMultiple && (\n            <DropzoneComponent\n              config={{\n                showFiletypeIcon: true,\n                postUrl:\n                  process.env.REACT_APP_API_URL + '/file/upload_multiple',\n                uploadMultiple: true,\n                maxFiles: 5\n              }}\n              eventHandlers={{\n                drop: onDrop,\n                complete: onChangeMultiple,\n                removedfile: onDeleteMultiple\n              }}\n              djsConfig={{\n                acceptedFiles,\n                params: {\n                  token: auth.user.token\n                },\n                addRemoveLinks: true,\n                autoProcessQueue: true,\n                maxFiles: 5\n              }}\n            />\n          )}\n        </div>\n      )}\n\n      {!loading &&\n        terisi.length > 0 &&\n        terisi.map((val, index) => {\n          return (\n            <div style={{ display: 'inline-block' }} key={val}>\n              {props.preview && (\n                <React.Fragment>\n                  <Preview key={val} type={type[val]} file={val} />\n                  <br />\n                </React.Fragment>\n              )}\n              <ButtonGroup>\n                <Button variant='primary' size='sm' onClick={() => toggle(val)}>\n                  <FontAwesomeIcon icon={faSearch} /> Lihat\n                </Button>\n                <Button\n                  vendor='success'\n                  onClick={() =>\n                    (window.location.href =\n                      process.env.REACT_APP_API_URL + '/file/download/' + val)\n                  }\n                  size='sm'\n                >\n                  <FontAwesomeIcon icon={faDownload} /> Unduh\n                </Button>\n\n                {!props.isReadonly && (\n                  <Button\n                    variant='danger'\n                    onClick={() => onDelete(val)}\n                    size='sm'\n                  >\n                    <FontAwesomeIcon icon={faTimes} /> Hapus\n                  </Button>\n                )}\n              </ButtonGroup>\n              <Modal\n                size='lg'\n                id={'modal_' + val}\n                show={open[val]}\n                onHide={() => toggle(val)}\n              >\n                <Modal.Header closeButton onHide={() => toggle(val)}>\n                  <Modal.Title>Lampiran {val}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Preview key={val} type={type[val]} file={val} />\n                </Modal.Body>\n              </Modal>\n            </div>\n          )\n        })}\n\n      {loading && <Loading />}\n    </div>\n  )\n}\n\nexport default InputFile\n","import React from 'react'\n\nimport {\n  debounce,\n  isEmpty,\n  find,\n  isUndefined,\n  isNull,\n  isArray,\n  isEqual,\n  includes\n} from 'lodash'\n\nimport { Form } from 'react-bootstrap'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport InputFile from './InputFile'\n\nimport { connect } from 'react-redux'\n\nimport parse from 'html-react-parser'\n\nclass InputChoose extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultValue: null,\n      type: this.props.type || 'inline'\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    // console.log('onRefresh')\n\n    let val = null\n\n    let defaultValue = null\n\n    if (this.props.value) {\n      val = this.props.value\n    } else {\n      val = findArrayName(this.props.name, this.props.input) || null\n    }\n\n    if (!isNull(val)) {\n      if (this.props.isMultiple) {\n        defaultValue = []\n\n        for (let i = 0; i < this.props.options.length; i++) {\n          for (let y = 0; y < val.length; y++) {\n            let opt = this.props.options[i]\n\n            let cur = val[y]\n\n            if (String(opt[this.props.optionValue]) == String(cur)) {\n              defaultValue.push(opt[this.props.optionValue])\n            }\n          }\n        }\n      } else {\n        defaultValue = find(\n          this.props.options,\n          function (o) {\n            return String(o[this.props.optionValue]) == String(val)\n          }.bind(this)\n        )\n        // console.log(this.props.options, val, defaultValue)\n      }\n    }\n\n    defaultValue =\n      !isUndefined(defaultValue) && !isNull(defaultValue) ? defaultValue : null\n\n    this.setState({\n      defaultValue\n    })\n  }\n\n  labelGenerate = (option) => {\n    let label = []\n    if (isArray(this.props.optionLabel)) {\n      let separator = this.props.separator ? this.props.separator : ' | '\n\n      for (let i = 0; i <= this.props.optionLabel.length - 1; i++) {\n        let isi = option[this.props.optionLabel[i]]\n\n        label.push(isi)\n      }\n    } else {\n      label.push(option[this.props.optionLabel])\n    }\n\n    return label\n  }\n\n  onChange = (selectedOption) => {\n    // console.log('onChange', selectedOption)\n\n    if (!this.props.isReadonly && this.props.name) {\n      try {\n        if (this.props.isMultiple) {\n          let current_val = this.state.defaultValue || []\n\n          let removed = false\n\n          let new_val = []\n\n          for (let i = 0; i < current_val.length; i++) {\n            let isi = current_val[i]\n\n            if (isi == selectedOption[this.props.optionValue]) {\n              removed = true\n            } else {\n              new_val.push(isi)\n            }\n          }\n\n          if (!removed) {\n            new_val.push(selectedOption[this.props.optionValue])\n          }\n\n          this.props.setInput(this.props.name, new_val)\n        } else {\n          let val = findArrayName(this.props.name, this.props.input) || null\n\n          if (this.props.value) {\n            val = this.props.value\n          }\n\n          let new_val = null\n\n          if (val != selectedOption[this.props.optionValue]) {\n            new_val = selectedOption[this.props.optionValue]\n          }\n          this.props.setInput(this.props.name, new_val)\n          // console.log('NEW_VAL_SINGLE', new_val)\n        }\n      } catch (e) {\n        // console.log(e)\n        this.props.setInput(this.props.name, null)\n      }\n    }\n\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(\n        findArrayName(this.props.name, prevProps.input),\n        findArrayName(this.props.name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.defaultValue,\n        findArrayName(this.props.name, this.props.input)\n      )\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  render() {\n    let options = []\n\n    try {\n      options = this.props.options.length > 0 ? this.props.options : []\n    } catch (e) {}\n\n    return (\n      <div className='custom-controls-stacked'>\n        {options.map((value) => {\n          let isChecked = false\n\n          // console.log(value, this.state.defaultValue, this.props.optionValue)\n\n          try {\n            if (this.props.isMultiple) {\n              isChecked = includes(\n                this.state.defaultValue,\n                value[this.props.optionValue]\n              )\n            } else {\n              isChecked = isEqual(\n                value[this.props.optionValue],\n                this.state.defaultValue[this.props.optionValue]\n              )\n            }\n          } catch (e) {\n            // console.log(e)\n          }\n          // console.log(this.props.name, isChecked)\n          /*\n          if (this.props.disabled || this.props.isReadonly) {\n            if (isChecked) {\n              return this.labelGenerate(value).map((val, i) => {\n                if (isEqual(String(val).substring(0, 3), 'AT-')) {\n                  return (\n                    <InputFile value={val} isReadonly={true} preview={true} />\n                  )\n                } else {\n                  return this.props.isHtml ? parse(String(val)) : val\n                }\n              })\n            } else {\n              return null\n            }\n          } else {\n            */\n\n          return (\n            <React.Fragment>\n              <Form.Check\n                inline={this.state.type == 'inline'}\n                disabled={this.props.disabled || this.props.isReadonly}\n                type={this.props.isMultiple ? 'checkbox' : 'radio'}\n                // className='custom-control-input'\n                name={this.props.name}\n                onChange={this.onChange.bind(this, value)}\n                value={value}\n                checked={isChecked}\n                label={this.labelGenerate(value).map((val, i) => {\n                  if (isEqual(String(val).substring(0, 3), 'AT-')) {\n                    return (\n                      <InputFile value={val} isReadonly={true} preview={true} />\n                    )\n                  } else {\n                    return this.props.isHtml ? parse(String(val)) : val\n                  }\n                })}\n              />\n            </React.Fragment>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nlet mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key)),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputChoose)\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport './InputDate.module.css'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nlet formatDefault = 'YYYY-MM-DD'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n    </InputGroup>\n  )\n}\n\nclass InputDate extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault).toDate()\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    let x = moment(date).format('d')\n\n    return x == 0 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    let dateFormat = this.props.dateFormat\n      ? this.props.dateFormat\n      : this.props.yearOnly\n      ? 'yyyy'\n      : 'yyyy-MM-dd'\n\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          (moment(this.state.start_selected, formatDefault).isValid()\n            ? moment(this.state.start_selected, formatDefault).format(\n                'DD-MM-YYYY'\n              )\n            : '') +\n          ' - ' +\n          (moment(this.state.end_selected, formatDefault).isValid()\n            ? moment(this.state.end_selected, formatDefault).format(\n                'DD-MM-YYYY'\n              )\n            : '')\n        )\n      } else {\n        return (\n          <div className='input-daterange input-group'>\n            <DatePicker\n              minDate={\n                moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tanggal'\n              }\n              selected={this.state.start_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              customInput={\n                <CustomInput\n                  value={this.state.start_selected}\n                  name={'start_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeStart}\n              selectsStart={!this.props.yearOnly}\n              peekNextMonth={!this.props.yearOnly}\n              withPortal\n              showMonthDropdown={!this.props.yearOnly}\n              showYearDropdown={!this.props.yearOnly}\n              showYearPicker={this.props.yearOnly}\n              name={'start_' + this.props.name}\n              todayButton={this.props.yearOnly ? null : 'Hari ini'}\n              dayClassName={this.checkTglMerah}\n              dropdownMode='select'\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              shouldCloseOnSelect={false}\n            />\n            <span className='input-group-addon' style={{ background: 'none' }}>\n              &nbsp; - &nbsp;\n            </span>\n            <DatePicker\n              minDate={\n                moment(this.state.start_selected, formatDefault).isValid()\n                  ? moment(this.state.start_selected, formatDefault).toDate()\n                  : moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tanggal'\n              }\n              selected={this.state.end_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              name={'end_' + this.props.name}\n              selectsEnd\n              customInput={\n                <CustomInput\n                  value={this.state.end_selected}\n                  name={'end_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeEnd}\n              selectsStart={!this.props.yearOnly}\n              peekNextMonth={!this.props.yearOnly}\n              withPortal\n              showMonthDropdown={!this.props.yearOnly}\n              showYearDropdown={!this.props.yearOnly}\n              showYearPicker={this.props.yearOnly}\n              dayClassName={this.checkTglMerah}\n              todayButton={this.props.yearOnly ? null : 'Hari ini'}\n              dropdownMode='select'\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              shouldCloseOnSelect={false}\n            />\n          </div>\n        )\n      }\n    }\n\n    /*\n    if (this.props.yearOnly) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return moment(this.state.selected).format('YYYY')\n      } else {\n        return (\n          <DatePicker\n            dateFormat={dateFormat}\n            placeholder={\n              this.props.placeholder ? this.props.placeholder : 'Tahun'\n            }\n            selected={this.state.selected}\n            id={this.props.name}\n            showYearPicker\n            customInput={\n              <CustomInput value={this.state.selected} name={this.props.name} />\n            }\n            disabled={this.props.disabled || this.props.isReadonly}\n            readOnly={this.props.disabled || this.props.isReadonly}\n            onChange={this.handleInputChange}\n            shouldCloseOnSelect={false}\n          />\n        )\n      }\n    }\n    */\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return moment(this.props.input[this.props.name], formatDefault).isValid()\n        ? moment(this.props.input[this.props.name], formatDefault).format(\n            this.props.yearOnly ? 'YYYY' : 'DD-MM-YYYY'\n          )\n        : ''\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          moment(this.props.minDate, formatDefault).isValid()\n            ? moment(this.props.minDate, formatDefault).toDate()\n            : null\n        }\n        maxDate={\n          moment(this.props.maxDate, formatDefault).isValid()\n            ? moment(this.props.maxDate, formatDefault).toDate()\n            : null\n        }\n        dateFormat={dateFormat}\n        placeholder={\n          this.props.placeholder ? this.props.placeholder : 'Tanggal'\n        }\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        selected={this.state.selected}\n        isClearable={!this.props.disabled && !this.props.isReadonly}\n        id={this.props.name}\n        className='form-control'\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        selectsStart={!this.props.yearOnly}\n        peekNextMonth={!this.props.yearOnly}\n        withPortal\n        showMonthDropdown={!this.props.yearOnly}\n        showYearDropdown={!this.props.yearOnly}\n        showYearPicker={this.props.yearOnly}\n        todayButton={this.props.yearOnly ? null : 'Hari ini'}\n        dropdownMode='select'\n        disabled={this.props.disabled || this.props.isReadonly}\n        readOnly={this.props.disabled || this.props.isReadonly}\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputDate)\n","import React from 'react'\n\nimport Cleave from 'cleave.js/react'\n\nimport { isEmpty, debounce, isEqual, isUndefined, isNull } from 'lodash'\n\nimport InputRange from 'react-input-range'\n\nimport { findArrayName, slug, numberFormat } from 'tcomponent'\n\nimport { connect } from 'react-redux'\n\nclass InputNumber extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let options = this.props.enableNegative\n      ? {\n          numeral: true\n        }\n      : {\n          numeral: true,\n          numeralPositiveOnly: true\n        }\n\n    this.state = {\n      defaultValue: null,\n      options: {\n        numeral: true\n      },\n      event: null,\n      value: null,\n      props_name: slug(this.props.name, '_')\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  validate_min_max(val, min = 0, max = 100) {\n    if (this.props.enableNegative && val < 0) {\n      min = -max\n    }\n\n    if (isNaN(val)) {\n      val = min\n    }\n\n    val = parseFloat(val)\n\n    if (val >= max) {\n      val = max\n    } else if (val <= min) {\n      val = min\n    }\n\n    return val ? Number(val) : null\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!isEqual(this.props.type, prevProps.type)) {\n      this.checkType()\n    }\n    if (\n      !isEqual(\n        findArrayName(this.state.props_name, prevProps.input),\n        findArrayName(this.state.props_name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.value,\n        findArrayName(this.state.props_name, this.props.input)\n      )\n    ) {\n      this.setState({\n        rawValue:\n          findArrayName(this.state.props_name, this.props.input) || null,\n        value: findArrayName(this.state.props_name, this.props.input) || null\n      })\n      this.onRefresh()\n    }\n\n    if (\n      this.props.value &&\n      prevProps.value != this.props.value &&\n      this.props.value != this.state.value\n    ) {\n      let value = this.props.value || null\n\n      this.setState({\n        rawValue: value,\n        value: value\n      })\n\n      this.onRefresh()\n    }\n  }\n\n  handleInputChange = (event) => {\n    let val = null\n\n    if (this.props.type == 'decimal') {\n      val = Number(event.target.value.replace(/[^0-9.-]+/g, ''))\n    } else if (this.props.type == 'percent') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        0,\n        100\n      )\n    } else if (this.props.type == 'range_three') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        1,\n        3\n      )\n    } else if (this.props.type == 'range_hundred') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        1,\n        100\n      )\n    } else if (this.props.type == 'range_depend') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        0,\n        100\n      )\n    } else {\n      val = event.target.value.replace(/[^0-9.-]+/g, '')\n    }\n\n    let min = this.props.minValue ? Number(this.props.minValue) : null\n\n    let max = this.props.maxValue ? Number(this.props.maxValue) : null\n\n    if (max && min) {\n      val = this.validate_min_max(val, min, max)\n    } else if (!max && min) {\n      val = this.validate_min_max(val, min, 999999999999)\n    } else if (max && !min) {\n      val = this.validate_min_max(val, 0, max)\n    }\n\n    val = val ? val : 0\n\n    if (this.state.props_name) {\n      this.props.setInput(this.state.props_name, val)\n    }\n\n    let rawValue = event.target.rawValue || null\n\n    if (\n      !isNaN(parseFloat(rawValue)) &&\n      !isNaN(parseFloat(val)) &&\n      parseFloat(rawValue) !== parseFloat(val)\n    ) {\n      this.state.event.setRawValue(val)\n    }\n  }\n\n  onChange = (val) => {\n    this.setState({\n      value: val\n    })\n\n    if (this.state.props_name) {\n      this.props.setInput(this.state.props_name, val)\n    }\n  }\n\n  onRefresh = () => {\n    let val = ''\n\n    try {\n      let input_name = findArrayName(this.state.props_name, this.props.input)\n      val = this.props.value ? this.props.value : input_name\n    } catch (e) {}\n\n    let min = this.props.minValue ? Number(this.props.minValue) : null\n\n    let max = this.props.maxValue ? Number(this.props.maxValue) : null\n\n    let value = val ? parseInt(val) : min\n\n    if (this.props.type == 'decimal') {\n      value = val ? parseFloat(val) : min\n    } else if (\n      this.props.type == 'percent' ||\n      this.props.type == 'range_three' ||\n      max ||\n      min\n    ) {\n      value = val ? parseFloat(val) : min\n    }\n\n    if (isNaN(value)) {\n      value = min\n    }\n\n    this.setState({ value })\n\n    try {\n      let rawValue = this.state.event.lastInputValue || null\n\n      if (parseFloat(rawValue) !== parseFloat(value)) {\n        this.state.event.setRawValue(value)\n      }\n    } catch (e) {}\n  }\n\n  componentDidMount() {\n    this.checkType()\n  }\n\n  checkType = () => {\n    let options = {\n      numeral: true,\n      numeralPositiveOnly: true\n    }\n\n    if (\n      this.props.type == 'decimal' ||\n      this.props.type == 'percent' ||\n      this.props.type == 'range_three'\n    ) {\n    } else {\n      options.numeralThousandsGroupStyle = 'thousand'\n    }\n\n    this.setState({\n      options,\n      rawValue: findArrayName(this.state.props_name, this.props.input),\n      value: findArrayName(this.state.props_name, this.props.input)\n    })\n\n    this.onRefresh()\n  }\n\n  onInit(cleave) {\n    this.setState({ event: cleave })\n  }\n\n  render() {\n    if (this.props.disabled || this.props.isReadonly) {\n      return !isNull(this.state.value) && !isUndefined(this.state.value)\n        ? numberFormat(this.state.value, '')\n        : null\n    }\n\n    if (this.props.type == 'range') {\n      return (\n        <InputRange\n          maxValue={this.props.maxValue}\n          minValue={this.props.minValue}\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n      )\n    }\n    return (\n      <Cleave\n        placeholder={this.props.placeholder ? this.props.placeholder : ''}\n        id={this.state.props_name}\n        name={this.state.props_name}\n        onInit={this.onInit.bind(this)}\n        value={this.state.value}\n        onChange={this.handleInputChange}\n        options={this.state.options}\n        className='form-control'\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) => {\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputNumber)\n","import React from 'react'\n\nimport LoadingOverlay from 'react-loading-overlay'\n\nimport styled from 'styled-components'\n\nimport Loading from './Loading'\n\nconst StyledLoader = styled(LoadingOverlay)`\n  overflow: hidden;\n\n  ._loading_overlay_overlay {\n    background: rgba(255, 255, 255, 0.5);\n  }\n  &._loading_overlay_wrapper--active {\n    overflow: hidden;\n  }\n`\n\nfunction MyLoadingOvelay(props) {\n  return (\n    <StyledLoader\n      fadeSpeed={250}\n      active={props.isLoading}\n      spinner={<Loading />}\n    >\n      {props.children}\n    </StyledLoader>\n  )\n}\n\nexport default MyLoadingOvelay\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector, connect } from 'react-redux'\n\nimport { findArrayName, slug, useDebounce, numberFormat } from 'tcomponent'\n\nimport './DataTableContainer.module.css'\n\nimport Loading from './Loading'\n\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination\n} from 'react-table'\n\nimport { isEmpty, isNull, isUndefined } from 'lodash'\n\nimport { Form, InputGroup, Button, Table } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  faBars,\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faAngleRight,\n  faAngleLeft\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { faFile } from '@fortawesome/free-regular-svg-icons'\n\nexport const Filter = ({ column }) => {\n  return null\n  // return (\n  //   <div style={{ margin: '4px 0' }}>\n  //     {column.canFilter && column.render('Filter')}\n  //   </div>\n  // )\n}\n\nexport const DefaultColumnFilter = (props) => {\n  let filterValue = props.column.filterValue\n\n  let id = props.column.id\n\n  let name = props.name\n\n  let dispatch = useDispatch()\n\n  let [data, setData] = React.useState(filterValue)\n\n  let key = slug('search_' + name + '_' + id, '_')\n\n  let filter = useSelector((state) => state.core.filter)\n\n  useEffect(() => {\n    setData(filter[key])\n  }, [])\n\n  function onChange(e) {\n    e.preventDefault()\n\n    setData(e.target.value)\n\n    dispatch({\n      type: 'SET_MULTI_FILTER',\n      payload: {\n        [key]: e.target.value,\n        [slug('loaded_' + name, '_')]: false\n      }\n    })\n  }\n\n  return (\n    <Form.Control\n      key={key}\n      id={key}\n      name={key}\n      value={data}\n      style={{ zIndex: 0 }}\n      onChange={onChange}\n      placeholder={`Pencarian`}\n    />\n  )\n}\n\n/*\nexport let SelectColumnFilter = ({\n  column: { filterValue, setFilter, preFilteredRows, id }\n}) => {\n  let options = React.useMemo(() => {\n    let options = new Set()\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id])\n    })\n    return [...options.values()]\n  }, [id, preFilteredRows])\n\n  return (\n    <CustomInput\n      id='custom-select'\n      type='select'\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=''>All</option>\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </CustomInput>\n  )\n}\n*/\n\nfunction DataTableContainer({\n  columns,\n  data,\n  renderRowSubComponent,\n  customPageIndex,\n  customPageSize,\n  customPageCount,\n  loading,\n  isColumnsSearchable,\n  primaryKey,\n  name,\n  customPageTotal\n}) {\n  // console.log(customPageIndex)\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let sortBy = []\n\n  for (let i = 0; i < columns.length; i++) {\n    try {\n      let k = slug('sort_' + name + '_' + columns[i][primaryKey], '_')\n\n      let urut = filter[k]\n\n      if (!isEmpty(urut) && !isNull(urut) && !isUndefined(urut)) {\n        sortBy.push({\n          id: columns[i][primaryKey],\n          desc: urut == 'desc'\n        })\n      }\n    } catch (e) {}\n  }\n\n  let {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    visibleColumns,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize }\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: {\n        Filter: (props) => <DefaultColumnFilter {...props} name={name} />\n      },\n      initialState: {\n        pageIndex: customPageIndex,\n        pageSize: customPageSize,\n        sortBy\n      },\n      manualPagination: true,\n      pageCount: customPageCount,\n      manualSortBy: true,\n      defaultCanSort: true,\n      isMultiSortEvent: () => {}\n    },\n\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination\n  )\n\n  let headers = headerGroups[0].headers || []\n\n  useDebounce(\n    () => {\n      let sort = {}\n\n      for (let i = 0; i < headers.length; i++) {\n        let x = headers[i]\n\n        if (x) {\n          let mykey = slug('sort_' + name + '_' + x[primaryKey], '_')\n\n          let mysort = x.isSorted ? (x.isSortedDesc ? 'desc' : 'asc') : null\n\n          if (mysort != filter[mykey]) {\n            sort[mykey] = mysort\n          }\n        }\n      }\n\n      if (!isEmpty(sort)) {\n        dispatch({\n          type: 'SET_MULTI_FILTER',\n          payload: { ...sort, [slug('loaded_' + name, '_')]: false }\n        })\n      }\n    },\n    500,\n    [headers]\n  )\n\n  let [localLoading, setLocalLoading] = useState(loading)\n\n  let [curpage, setCurPage] = useState(pageIndex)\n\n  let dispatch = useDispatch()\n\n  let generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? ' ↓' : ' ↑') : ''\n  }\n\n  let onChangeInSelect = (event) => {\n    setPageSize(Number(event.target.value))\n\n    dispatch({\n      type: 'SET_MULTI_FILTER',\n      payload: {\n        [slug('load_' + name, '_')]: Number(event.target.value),\n        [slug('page_' + name, '_')]: curpage\n      }\n    })\n  }\n\n  let onChangeInInput = (event) => {\n    let page = event.target.value ? Number(event.target.value) : 0\n\n    customgotoPage(page)\n  }\n\n  let customcanNextPage = customPageIndex < customPageCount\n\n  let customcanPreviousPage = customPageIndex >= 2\n\n  let customnextPage = () => {\n    if (curpage < customPageCount) {\n      customgotoPage(curpage + 1)\n    }\n  }\n\n  let custompreviousPage = () => {\n    if (curpage >= 2) {\n      customgotoPage(curpage - 1)\n    }\n  }\n\n  let customgotoPage = (isi) => {\n    setCurPage(isi)\n  }\n\n  useDebounce(\n    () => {\n      gotoPage(curpage)\n      dispatch({\n        type: 'SET_MULTI_FILTER',\n        payload: {\n          [slug('load_' + name, '_')]: pageSize,\n          [slug('page_' + name, '_')]: curpage\n        }\n      })\n    },\n    500,\n    [curpage]\n  )\n\n  useEffect(() => {\n    if (setLocalLoading && !loading) {\n      setTimeout(() => setLocalLoading(loading), 500)\n    } else {\n      setLocalLoading(loading)\n    }\n  }, [loading])\n\n  if (isEmpty(name)) {\n    return <p>Props name is Required</p>\n  }\n\n  return (\n    <div>\n      <div className='custom-scroll' style={{ overflow: 'auto' }}>\n        <InputGroup>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(1)}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleLeft} />\n          </Button>\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={custompreviousPage}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleLeft} />\n          </Button>\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faFile} /> &nbsp; Hal :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            type='number'\n            min={1}\n            max={customPageCount}\n            value={curpage}\n            onChange={onChangeInInput}\n          />\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faBars} /> &nbsp; Lihat :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            type='number'\n            min={1}\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            max={50}\n            value={pageSize}\n            onChange={onChangeInSelect}\n          />\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={customnextPage}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleRight} />\n          </Button>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(customPageCount)}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </Button>\n        </InputGroup>\n      </div>\n\n      <div className='text-center mt-2 mb-2'>\n        <strong>{numberFormat(customPageIndex, '')}</strong> dari{' '}\n        <strong>{numberFormat(customPageCount, '')}</strong> hal. Total{' : '}\n        <strong>{numberFormat(customPageTotal, '')}</strong> baris\n      </div>\n\n      <Table\n        style={{ margin: 0, zIndex: 0 }}\n        responsive\n        bordered\n        hover\n        striped\n        vcenter\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  style={{\n                    padding: '4px 8px',\n                    borderTop: '1px solid #dee2e6'\n                  }}\n                  {...column.getHeaderProps()}\n                >\n                  <div {...column.getSortByToggleProps()}>\n                    <span\n                      style={{\n                        display: 'inline-block'\n                      }}\n                    >\n                      {column.render('Header')}\n                    </span>\n                    <span\n                      style={{\n                        display: 'inline-block',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      {generateSortingIndicator(column)}\n                    </span>\n                  </div>\n                  {isColumnsSearchable && <Filter column={column} />}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {page.length > 0 &&\n          !localLoading &&\n          parseInt(customPageIndex) === parseInt(curpage)\n            ? page.map((row) => {\n                prepareRow(row)\n                return (\n                  <React.Fragment key={row.getRowProps().key}>\n                    <tr>\n                      {row.cells.map((cell, index) => {\n                        return (\n                          <td\n                            style={{\n                              padding: '4px 8px',\n                              width: index == 0 ? '10px' : 'auto'\n                            }}\n                            {...cell.getCellProps()}\n                          >\n                            {cell.render('Cell')}\n                          </td>\n                        )\n                      })}\n                    </tr>\n                    {row.isExpanded && (\n                      <tr>\n                        <td\n                          style={{\n                            padding: '4px 8px'\n                          }}\n                          colSpan={visibleColumns.length}\n                        >\n                          {renderRowSubComponent(row)}\n                        </td>\n                      </tr>\n                    )}\n                  </React.Fragment>\n                )\n              })\n            : headerGroups.map((headerGroup) => (\n                <tr>\n                  <td\n                    style={{\n                      padding: '12px 0',\n                      textAlign: 'center'\n                    }}\n                    colSpan={headerGroup.headers.length}\n                  >\n                    {localLoading ||\n                    parseInt(customPageIndex) !== parseInt(curpage)\n                      ? 'Memproses'\n                      : 'Tidak ada data'}\n                  </td>\n                </tr>\n              ))}\n        </tbody>\n      </Table>\n\n      <div className='text-center mt-2 mb-2'>\n        <strong>{numberFormat(customPageIndex, '')}</strong> dari{' '}\n        <strong>{numberFormat(customPageCount, '')}</strong> hal. Total{' : '}\n        <strong>{numberFormat(customPageTotal, '')}</strong> baris\n      </div>\n      <div className='custom-scroll' style={{ overflow: 'auto' }}>\n        <InputGroup>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(1)}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleLeft} />\n          </Button>\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={custompreviousPage}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleLeft} />\n          </Button>\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faFile} /> &nbsp; Hal :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            type='number'\n            min={1}\n            max={customPageCount}\n            value={curpage}\n            onChange={onChangeInInput}\n          />\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faBars} /> &nbsp; Lihat :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            type='number'\n            min={1}\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            max={50}\n            value={pageSize}\n            onChange={onChangeInSelect}\n          />\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={customnextPage}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleRight} />\n          </Button>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(customPageCount)}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </Button>\n        </InputGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default DataTableContainer\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector, connect } from 'react-redux'\n\nimport { findArrayName, slug, useDebounce } from 'tcomponent'\n\nimport './DataTable.module.css'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport DataTableContainer from './DataTableContainer'\n\nimport { useIsVisible } from 'react-is-visible'\n\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination\n} from 'react-table'\n\nimport {\n  filter as _filter,\n  isArray,\n  uniq,\n  findIndex,\n  find,\n  isEmpty,\n  uniqBy,\n  isEqual,\n  isUndefined,\n  isBoolean\n} from 'lodash'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faSync, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faArrowAltCircleDown,\n  faArrowAltCircleUp\n} from '@fortawesome/free-regular-svg-icons'\n\nimport './DataTable.module.css'\n\nimport {\n  Row,\n  InputGroup,\n  Col,\n  Form,\n  Button,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n  Tooltip\n} from 'react-bootstrap'\n\nfunction DataTable(props) {\n  let [visible, setVisible] = useState(false)\n\n  let [link, setLink] = useState('')\n\n  let [data, setData] = useState([])\n\n  let [temp, setTemp] = useState([])\n\n  let [meta, setMeta] = useState({})\n\n  let [tooltipOpenEx, setTooltipOpenEx] = useState(false)\n\n  let [tooltipOpenIm, setTooltipOpenIm] = useState(false)\n\n  let toggleImport = () => setTooltipOpenIm(!tooltipOpenIm)\n\n  let toggleExport = () => setTooltipOpenEx(!tooltipOpenEx)\n\n  let dispatch = useDispatch()\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let user = useSelector((state) => state.auth.user) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let key_select = slug('selected_' + props.name, '_')\n\n  let primaryKey = props.primaryKey ? props.primaryKey : 'id'\n\n  function onChecked(rowInfo, input, exist = false) {\n    let value = rowInfo.row.original || {}\n\n    if (props.selectable == 'single') {\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value\n        }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: value[primaryKey]\n        }\n      })\n    } else {\n      let new_input = []\n\n      if (exist) {\n        new_input =\n          _filter(findArrayName(key_select, input), (o) => {\n            return o && value && parseInt(o) != parseInt(value[primaryKey])\n          }) || []\n      } else {\n        new_input = findArrayName(key_select, input) || []\n\n        if (!isArray(new_input)) {\n          new_input = []\n        }\n\n        new_input.push(value[primaryKey])\n      }\n\n      new_input = uniq(new_input)\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: new_input\n        }\n      })\n    }\n  }\n\n  let checkComponent = {\n    Header: '#',\n    id: 'select',\n    width: '10px',\n    Cell: (row) => {\n      let local_input = useSelector((state) => state.core.input)\n\n      let checked = false\n\n      try {\n        if (props.selectable == 'single') {\n          checked =\n            findArrayName(key_select, local_input) ==\n            row.row.original[primaryKey]\n        } else {\n          checked =\n            findIndex(findArrayName(key_select, local_input), function (o) {\n              return o == row.row.original[primaryKey]\n            }) > -1\n        }\n      } catch (e) {}\n\n      return (\n        <Form.Check\n          inline\n          id={slug(props.name + '_check_' + row.row.original[primaryKey], '_')}\n          name={slug(\n            props.name + '_check_' + row.row.original[primaryKey],\n            '_'\n          )}\n          type={props.selectable == 'single' ? 'radio' : 'checkbox'}\n          value={1}\n          checked={checked}\n          disabled={props.isReadonly}\n          onChange={() => onChecked(row, local_input, checked)}\n        />\n      )\n    }\n  }\n\n  let nodeRef = useRef()\n\n  let isVisible = useIsVisible(nodeRef)\n\n  let col = !isEmpty(props.selectable)\n    ? [checkComponent, ...props.columns]\n    : [...props.columns]\n\n  if (props.action) {\n    let actionComponent = {\n      Header: 'Aksi',\n      id: 'aksi_' + props.name,\n      sortable: false,\n      Cell: (row) => {\n        let param = useSelector((state) => state.core.parameter)\n\n        let isi = row.row.original[primaryKey]\n\n        function openToggle(data) {\n          let current = isEqual(param.dropdown, data) ? null : data\n\n          dispatch({\n            type: 'SET_PARAMETER',\n            payload: {\n              key: 'dropdown',\n              value: current\n            }\n          })\n        }\n\n        return (\n          <DropdownButton\n            key={'dropdown_' + props.name + '_' + isi}\n            size='sm'\n            id={'dropdown_' + props.name + '_' + isi}\n            // className='custom-scroll'\n            isOpen={isEqual(param.dropdown, isi)}\n            toggle={() => openToggle(isi)}\n            drop={'end'}\n            variant='primary'\n            title={''}\n          >\n            {_filter(props.action, function (o) {\n              return isUndefined(o.show) || o.show\n            }).map((value, index) => {\n              let disabled = isBoolean(value.disabled) ? value.disabled : false\n\n              return (\n                <Dropdown.Item\n                  key={'dropdownitem_' + props.name + '_' + isi + '_' + index}\n                  onClick={() => value.onClick(row.row.original)}\n                  disabled={disabled}\n                >\n                  {value.label}\n                </Dropdown.Item>\n              )\n            })}\n          </DropdownButton>\n        )\n      }\n    }\n\n    col = !isEmpty(props.selectable)\n      ? [actionComponent, checkComponent, ...props.columns]\n      : [actionComponent, ...props.columns]\n  }\n\n  useEffect(() => {\n    if (isVisible != visible) {\n      setVisible(isVisible)\n    }\n  })\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('loaded_' + props.name, '_'),\n        value: false\n      }\n    })\n  }, [])\n\n  function onReload() {\n    if (visible) {\n      setLink(window.location.href)\n\n      props.onReload()\n\n      if (!findArrayName(slug('loaded_' + props.name, '_'), filter)) {\n        dispatch({\n          type: 'SET_FILTER',\n          payload: {\n            key: slug('loaded_' + props.name, '_'),\n            value: true\n          }\n        })\n      }\n    }\n  }\n\n  useDebounce(\n    () => {\n      if (visible && (!isEqual(window.location.href, link) || isEmpty(link))) {\n        onReload()\n      }\n    },\n    500,\n    [visible, window.location.href]\n  )\n\n  useDebounce(onReload, 500, [\n    findArrayName(slug('keyword_' + props.name, '_'), filter),\n    findArrayName(slug('page_' + props.name, '_'), filter),\n    findArrayName(slug('load_' + props.name, '_'), filter),\n    findArrayName(slug('loaded_' + props.name, '_'), filter)\n  ])\n\n  function syncParameter() {\n    let new_parameter = null\n\n    let new_input = null\n\n    if (props.selectable == 'single') {\n      new_parameter = new_parameter =\n        find(temp, (o) => {\n          return o && parseInt(o[primaryKey]) == new_input\n        }) || {}\n\n      new_input = findArrayName(key_select, input) || null\n    } else {\n      new_parameter = []\n\n      new_input = findArrayName(key_select, input) || []\n\n      for (let i = 0; i < new_input.length; i++) {\n        let find_data =\n          find(temp, (o) => {\n            return o && parseInt(o[primaryKey]) == new_input[i]\n          }) || {}\n\n        if (!isEmpty(find_data)) {\n          new_parameter.push(find_data)\n        }\n      }\n    }\n\n    dispatch({\n      type: 'SET_PARAMETER',\n      payload: {\n        key: key_select,\n        value: new_parameter\n      }\n    })\n  }\n\n  useDebounce(\n    () => {\n      setTemp((val) => uniqBy([...val, ...data], primaryKey))\n      if (findArrayName(key_select, input)) {\n        syncParameter()\n      }\n    },\n    500,\n    [findArrayName(key_select, input), filter]\n  )\n\n  useDebounce(\n    () => {\n      try {\n        setData(props.data.data || [])\n      } catch (e) {}\n\n      setTemp((val) => uniqBy([...val, ...data], primaryKey))\n\n      try {\n        setMeta(props.data.meta || {})\n      } catch (e) {}\n    },\n    500,\n    [props.data]\n  )\n\n  let columns = React.useMemo(() => col, [])\n\n  let hapus = false\n\n  try {\n    hapus = user.role == 'admin'\n  } catch (e) {}\n\n  return (\n    <LoadingOverlay isLoading={props.isLoading}>\n      <div style={{ padding: '8px 12px' }} ref={nodeRef}>\n        <div\n          style={{ marginBottom: '12px' }}\n          //  className=\"card-header\"\n        >\n          <Row>\n            <Col xs='12' sm='12' md='8' lg='8'>\n              <div\n              // className={props.export || props.import ? \"col-7\" : \"col-9\"}\n              >\n                {props.renderFilter ? props.renderFilter : null}\n              </div>\n            </Col>\n          </Row>\n\n          <Row style={{ justifyContent: 'flex-end' }}>\n            {/* <Col xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\">\n  <div >\n  {(props.export || props.import) && (\n  <div className=\"col-2\">\n  <InputGroup>\n  {props.export && (\n  <InputGroupAddon>\n  <Button\n  style={{ zIndex: 0 }}\n  className=\"mr-1 btn btn-primary\"\n  onClick={props.exportReload}\n  type=\"button\"\n  disabled={props.disabledButton}\n  >\n  Export\n  </Button>\n  </InputGroupAddon>\n)}\n{props.import && (\n<InputGroupAddon>\n<Button\nstyle={{ zIndex: 0 }}\nclassName=\"mr-1 btn btn-primary\"\nonClick={props.importReload}\ntype=\"button\"\ndisabled={props.disabledButton}\n>\nImport\n</Button>\n</InputGroupAddon>\n)}\n</InputGroup>\n</div>\n)}\n</div>\n</Col> */}\n\n            <Col xs='12' sm='12' md='4' lg='4'>\n              <div>\n                {props.isSearchable && (\n                  <div>\n                    <InputGroup>\n                      <InputGroup.Text style={{ background: 'none' }}>\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n\n                      <Form.Control\n                        id={slug('keyword_' + props.name, '_')}\n                        key={slug('keyword_' + props.name, '_')}\n                        style={{ borderLeft: 'none' }}\n                        className='form-control'\n                        value={findArrayName(\n                          slug('keyword_' + props.name, '_'),\n                          filter\n                        )}\n                        onChange={(e) => {\n                          dispatch({\n                            type: 'SET_MULTI_FILTER',\n                            payload: {\n                              [slug('keyword_' + props.name, '_')]:\n                                e.target.value,\n                              [slug('page_' + props.name, '_')]: 1,\n                              loaded: false\n                            }\n                          })\n                        }}\n                        type='text'\n                        id={slug('keyword_' + key_select)}\n                        name={slug('keyword_' + props.name, '_')}\n                        placeholder='Pencarian'\n                      />\n\n                      <Button\n                        style={{ zIndex: 0 }}\n                        variant='primary'\n                        onClick={onReload}\n                        type='button'\n                        disabled={props.isLoading}\n                      >\n                        <FontAwesomeIcon icon={faSync} spin={props.isLoading} />\n                      </Button>\n\n                      {(props.export || props.import) && (\n                        <React.Fragment>\n                          {props.export && (\n                            <Button\n                              id='exportFile'\n                              style={{ zIndex: 0 }}\n                              variant='primary'\n                              className='mr-1'\n                              onClick={props.exportReload}\n                              type='button'\n                              disabled={props.disabledButton}\n                            >\n                              <FontAwesomeIcon icon={faArrowAltCircleDown} />\n\n                              <Tooltip\n                                placement='top'\n                                isOpen={tooltipOpenEx}\n                                autohide={false}\n                                target='exportFile'\n                                toggle={toggleExport}\n                              >\n                                Export\n                              </Tooltip>\n                            </Button>\n                          )}\n                          {props.import && (\n                            <Button\n                              id='importFile'\n                              style={{ zIndex: 0 }}\n                              variant='primary'\n                              className='mr-1'\n                              onClick={props.importReload}\n                              type='button'\n                              disabled={props.disabledButton}\n                            >\n                              <FontAwesomeIcon icon={faArrowAltCircleUp} />\n                              <Tooltip\n                                placement='top'\n                                isOpen={tooltipOpenIm}\n                                autohide={false}\n                                target='importFile'\n                                toggle={toggleImport}\n                              >\n                                Import\n                              </Tooltip>\n                            </Button>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </InputGroup>\n                  </div>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <DataTableContainer\n          name={slug(props.name, '_')}\n          columns={columns}\n          data={data}\n          primaryKey={primaryKey}\n          isColumnsSearchable={props.isColumnsSearchable}\n          fetchData={onReload}\n          loading={props.isLoading}\n          customPageTotal={meta && !isEmpty(meta) ? meta.total : 0}\n          customPageCount={meta && !isEmpty(meta) ? meta.last_page : 1}\n          customPageSize={\n            meta && !isEmpty(meta)\n              ? meta.per_page\n              : findArrayName(slug('load_' + props.name, '_'), filter)\n              ? findArrayName(slug('load_' + props.name, '_'), filter)\n              : 10\n          }\n          customPageIndex={\n            meta && !isEmpty(meta)\n              ? meta.current_page\n              : findArrayName(slug('page_' + props.name, '_'), filter)\n              ? findArrayName(slug('page_' + props.name, '_'), filter)\n              : 1\n          }\n        />\n      </div>\n    </LoadingOverlay>\n  )\n}\n\nexport default DataTable\n","import React from 'react'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport { isArray } from 'lodash'\n\nfunction Field(props) {\n  let message = []\n\n  if (isArray(props.errorMessage)) {\n    for (let i = 0; i < props.errorMessage.length; i++) {\n      let isi = props.errorMessage[i]\n\n      if (isArray(isi)) {\n        for (let y = 0; y < isi.length; y++) {\n          message.push(isi[y])\n        }\n      } else {\n        message.push(isi)\n      }\n    }\n  } else {\n    message.push(props.errorMessage)\n  }\n\n  return (\n    <Form.Group as={Row}>\n      <Form.Label column md={props.labelSize ? props.labelSize : 3}>\n        {props.label ? props.label : 'Label'}\n        {props.isRequired && <span className='text-danger'>&nbsp;*</span>}\n        {props.hint && (\n          <small className='form-text text-muted'>{props.hint}</small>\n        )}\n      </Form.Label>\n      <Col md={props.inputSize ? props.inputSize : 9}>\n        {props.children}\n        <Form.Text className='text-danger'>\n          {message.length > 0 && message.join(', ')}\n        </Form.Text>\n      </Col>\n    </Form.Group>\n  )\n}\n\nexport default Field\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar, faClock } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nlet formatDefault = 'YYYY-MM-DD HH:mm:ss'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          borderRight: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faClock} />\n      </InputGroup.Text>\n    </InputGroup>\n  )\n}\n\nclass InputDateTime extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = _.debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault).toDate()\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    const x = moment(date).format('d')\n\n    return x == 5 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          <div className='input-daterange input-group'>\n            {moment(this.state.start_selected, formatDefault).isValid()\n              ? moment(this.state.start_selected, formatDefault).format(\n                  'DD-MM-YYYY HH:mm:ss'\n                )\n              : null}\n\n            <span style={{ background: 'none' }}>&nbsp; s/d &nbsp;</span>\n            {moment(this.state.end_selected, formatDefault).isValid()\n              ? moment(this.state.end_selected, formatDefault).format(\n                  'DD-MM-YYYY HH:mm:ss'\n                )\n              : null}\n          </div>\n        )\n      }\n\n      return (\n        <div\n          className='input-daterange input-group'\n          style={{ background: 'none' }}\n        >\n          <DatePicker\n            minDate={\n              moment(this.props.minDate, formatDefault).isValid()\n                ? moment(this.props.minDate, formatDefault).toDate()\n                : null\n            }\n            maxDate={\n              moment(this.props.maxDate, formatDefault).isValid()\n                ? moment(this.props.maxDate, formatDefault).toDate()\n                : null\n            }\n            dateFormat={\n              this.props.dateFormat\n                ? this.props.dateFormat\n                : 'yyyy-MM-dd HH:mm:ss'\n            }\n            placeholder={\n              this.props.placeholder\n                ? this.props.placeholder\n                : 'Tanggal & Waktu'\n            }\n            selected={this.state.start_selected}\n            isClearable={true}\n            customInput={\n              <CustomInput\n                value={this.state.start_selected}\n                name={'start_' + this.props.name}\n              />\n            }\n            onChange={this.handleInputChangeStart}\n            timeInputLabel='Waktu : '\n            showTimeInput\n            selectsStart\n            peekNextMonth\n            withPortal\n            showMonthDropdown\n            showYearDropdown\n            name={'start_' + this.props.name}\n            todayButton={'Hari ini'}\n            dayClassName={this.checkTglMerah}\n            dropdownMode='select'\n            startDate={this.state.start_selected}\n            endDate={this.state.end_selected}\n            shouldCloseOnSelect={false}\n          />\n          <span className='input-group-addon' style={{ background: 'none' }}>\n            &nbsp; - &nbsp;\n          </span>\n          <DatePicker\n            minDate={\n              moment(this.state.start_selected, formatDefault).isValid()\n                ? moment(this.state.start_selected, formatDefault).toDate()\n                : moment(this.props.minDate, formatDefault).isValid()\n                ? moment(this.props.minDate, formatDefault).toDate()\n                : null\n            }\n            maxDate={\n              moment(this.props.maxDate, formatDefault).isValid()\n                ? moment(this.props.maxDate, formatDefault).toDate()\n                : null\n            }\n            dateFormat={\n              this.props.dateFormat\n                ? this.props.dateFormat\n                : 'yyyy-MM-dd HH:mm:ss'\n            }\n            placeholder={\n              this.props.placeholder\n                ? this.props.placeholder\n                : 'Tanggal & Waktu'\n            }\n            selected={this.state.end_selected}\n            isClearable={true}\n            name={'end_' + this.props.name}\n            selectsEnd\n            timeInputLabel='Waktu : '\n            showTimeInput\n            customInput={\n              <CustomInput\n                value={this.state.end_selected}\n                name={'end_' + this.props.name}\n              />\n            }\n            onChange={this.handleInputChangeEnd}\n            peekNextMonth\n            withPortal\n            showMonthDropdown\n            showYearDropdown\n            dayClassName={this.checkTglMerah}\n            todayButton={'Hari ini'}\n            dropdownMode='select'\n            startDate={this.state.start_selected}\n            endDate={this.state.end_selected}\n            shouldCloseOnSelect={false}\n          />\n        </div>\n      )\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return (\n        <div className='input-daterange input-group'>\n          {moment(this.state.selected, formatDefault).isValid()\n            ? moment(this.state.selected, formatDefault).format(\n                'DD-MM-YYYY HH:mm:ss'\n              )\n            : null}\n        </div>\n      )\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          moment(this.props.minDate, formatDefault).isValid()\n            ? moment(this.props.minDate, formatDefault).toDate()\n            : null\n        }\n        maxDate={\n          moment(this.props.maxDate, formatDefault).isValid()\n            ? moment(this.props.maxDate, formatDefault).toDate()\n            : null\n        }\n        dateFormat={\n          this.props.dateFormat ? this.props.dateFormat : 'yyyy-MM-dd HH:mm:ss'\n        }\n        placeholder={\n          this.props.placeholder ? this.props.placeholder : 'Tanggal & Waktu'\n        }\n        selected={this.state.selected}\n        isClearable={true}\n        id={this.props.name}\n        className='form-control'\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        peekNextMonth\n        timeInputLabel='Waktu : '\n        showTimeInput\n        withPortal\n        showMonthDropdown\n        showYearDropdown\n        todayButton={'Hari ini'}\n        dropdownMode='select'\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputDateTime)\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport TimePicker from 'rc-time-picker'\n\nimport { connect } from 'react-redux'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport './InputTime.module.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faClock } from '@fortawesome/free-regular-svg-icons'\n\nlet formatDefault = 'HH:mm:ss'\n\nlet now = moment()\n\nfunction IconClock() {\n  return (\n    <FontAwesomeIcon\n      style={{ position: 'absolute', left: 6, top: 6 }}\n      icon={faClock}\n      size='sm'\n    />\n  )\n}\n\nclass InputTime extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = moment()\n\n      let end_selected = moment()\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault)\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            )\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault)\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            )\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = moment()\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault)\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            )\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  render() {\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          <div className='input-daterange input-group'>\n            {moment(this.state.start_selected, formatDefault).isValid()\n              ? moment(this.state.start_selected, formatDefault).format(\n                  formatDefault\n                )\n              : ''}\n\n            <span style={{ background: 'none' }}>&nbsp; s/d &nbsp;</span>\n            {moment(this.state.end_selected, formatDefault).isValid()\n              ? moment(this.state.end_selected, formatDefault).format(\n                  formatDefault\n                )\n              : ''}\n          </div>\n        )\n      }\n\n      return (\n        <div className='input-daterange input-group'>\n          <TimePicker\n            value={this.state.start_selected}\n            disabled={this.props.disabled || this.props.isReadonly}\n            // showSecond={false}\n            inputIcon={<IconClock />}\n            format={formatDefault}\n            onChange={this.handleInputChangeStart}\n          />\n          <span className='input-group-addon' style={{ background: 'none' }}>\n            &nbsp; - &nbsp;\n          </span>\n          <TimePicker\n            value={this.state.end_selected}\n            disabled={this.props.disabled || this.props.isReadonly}\n            inputIcon={<IconClock />}\n            // showSecond={false}\n            format={formatDefault}\n            onChange={this.handleInputChangeEnd}\n          />\n        </div>\n      )\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return (\n        <div className='input-daterange input-group'>\n          {moment(this.state.selected, formatDefault).isValid()\n            ? moment(this.state.selected, formatDefault).format(formatDefault)\n            : ''}\n        </div>\n      )\n    }\n\n    return (\n      <TimePicker\n        value={this.state.selected}\n        disabled={this.props.disabled || this.props.isReadonly}\n        // showSecond={false}\n        inputIcon={<IconClock />}\n        format={formatDefault}\n        onChange={this.handleInputChange}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTime)\n","import React from 'react'\n\nimport { map, uniqBy, findIndex, isEmpty } from 'lodash'\n\nimport './InputTag.module.css'\n\nimport ReactTags from 'react-tag-autocomplete'\n\nimport { connect } from 'react-redux'\n\nimport { slug } from 'tcomponent'\n\nclass InputTag extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tags: [],\n      suggestions: [],\n      separator: '|'\n    }\n\n    this.reactTags = React.createRef()\n  }\n\n  onDelete(i) {\n    let tags = this.state.tags.slice(0)\n\n    tags.splice(i, 1)\n\n    this.setState({ tags })\n\n    if (this.props.name) {\n      this.props.setInput(\n        this.props.name,\n        _.map(tags, 'name').join(this.state.separator)\n      )\n    }\n  }\n\n  onAddition(tag) {\n    let tags = [].concat(this.state.tags, tag)\n\n    this.setState({ tags: _.uniqBy(tags, 'name') })\n\n    if (this.props.name) {\n      this.props.setInput(\n        this.props.name,\n        _.map(tags, 'name').join(this.state.separator)\n      )\n    }\n  }\n\n  onFocus(tag) {}\n\n  onValidate(tag) {\n    return _.findIndex(this.state.tags, ['name', tag.name]) < 0\n  }\n\n  componentDidMount() {\n    let suggestions = []\n\n    let tags = []\n\n    for (let i = 0; i < this.props.options.length; i++) {\n      let isi = this.props.options[i]\n\n      if (!_.isEmpty(isi[this.props.optionValue])) {\n        suggestions.push({ name: isi[this.props.optionValue] })\n      }\n    }\n\n    let value = ''\n\n    try {\n      value = this.props.value\n        ? this.props.value\n        : this.props.input[this.props.name]\n        ? this.props.input[this.props.name]\n        : ''\n    } catch (e) {}\n\n    let v = value ? String(value).split(this.state.separator) : []\n\n    for (let i = 0; i < v.length; i++) {\n      let isi = v[i]\n\n      if (!_.isEmpty(isi)) {\n        tags.push({ name: isi })\n      }\n    }\n\n    this.setState({ suggestions, tags })\n  }\n\n  render() {\n    return (\n      <ReactTags\n        minQueryLength={1}\n        noSuggestionsText={'Tidak ada usulan'}\n        ref={this.reactTags}\n        tags={this.state.tags}\n        id={this.props.name}\n        removeButtonText='Klik untuk menghapus'\n        delimiters={['Enter', 'Tab']}\n        placeholderText={\n          this.props.placeholder\n            ? this.props.placeholder\n            : 'Dipisah dengan spasi / enter'\n        }\n        allowNew={this.props.isCreateable}\n        suggestions={this.state.suggestions}\n        onDelete={this.onDelete.bind(this)}\n        onValidate={this.onValidate.bind(this)}\n        onFocus={this.onFocus.bind(this)}\n        onAddition={this.onAddition.bind(this)}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTag)\n","import React from 'react'\n\nimport {\n  debounce,\n  isEmpty,\n  isArray,\n  isUndefined,\n  isNull,\n  find,\n  isEqual,\n  map\n} from 'lodash'\n\nimport './InputSelect.module.css'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport Select from 'react-select'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport { connect } from 'react-redux'\n\nimport parse from 'html-react-parser'\n\nclass InputSelect extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultValue: null,\n      options: [],\n      show: false\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  labelGenerate = (option) => {\n    if (!isEmpty(option)) {\n      if (isArray(this.props.optionLabel)) {\n        let label = []\n\n        let separator = this.props.separator ? this.props.separator : ' | '\n\n        for (let i = 0; i <= this.props.optionLabel.length - 1; i++) {\n          label.push(option[this.props.optionLabel[i]])\n        }\n\n        return label.join(separator)\n      } else {\n        return option[this.props.optionLabel]\n      }\n    }\n\n    return null\n  }\n\n  onRefresh() {\n    let val = null\n\n    let defaultValue = null\n\n    if (this.props.value) {\n      val = this.props.value\n    } else {\n      val = findArrayName(this.props.name, this.props.input) || []\n\n      if (this.props.isMultiple) {\n        defaultValue = []\n\n        for (let i = 0; i < this.props.options.length; i++) {\n          for (let y = 0; y < val.length; y++) {\n            let opt = this.props.options[i]\n\n            let cur = val[y]\n\n            if (String(opt[this.props.optionValue]) == String(cur)) {\n              defaultValue.push(opt)\n            }\n          }\n        }\n      } else {\n        defaultValue = find(\n          this.props.options,\n          function (o) {\n            return String(o[this.props.optionValue]) == val\n          }.bind(this)\n        )\n      }\n    }\n\n    defaultValue =\n      !isUndefined(defaultValue) && !isNull(defaultValue) ? defaultValue : null\n\n    this.setState({\n      defaultValue\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(\n        findArrayName(this.props.name, prevProps.input),\n        findArrayName(this.props.name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.defaultValue,\n        findArrayName(this.props.name, this.props.input)\n      )\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  onChange = (selectedOption) => {\n    if (this.props.name) {\n      try {\n        if (this.props.isMultiple) {\n          this.props.setInput(\n            this.props.name,\n            map(selectedOption, this.props.optionValue)\n          )\n        } else {\n          this.props.setInput(\n            this.props.name,\n            selectedOption[this.props.optionValue]\n          )\n        }\n      } catch (e) {\n        this.props.setInput(this.props.name, null)\n      }\n    }\n    this.onRefresh()\n  }\n\n  openModal = () => {\n    this.setState({ show: !this.state.show })\n  }\n\n  render() {\n    let options = []\n    try {\n      for (let i = 0; i < this.props.options.length; i++) {\n        let y = this.props.options[i]\n\n        if (this.props.isHtml) {\n          y[this.props.name] = parse(String(y[this.props.name]))\n        }\n        options.push(y)\n      }\n    } catch (e) {}\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return this.labelGenerate(this.state.defaultValue)\n    }\n\n    if (this.props.withModal)\n      return (\n        <React.Fragment>\n          <Row>\n            {!this.props.isReadonly && (\n              <Col lg='1' md='1' sm='3' xs='1'>\n                <Button\n                  type='button'\n                  className='btn btn-icon btn-primary btn-sm'\n                  onClick={this.openModal}\n                >\n                  <FontAwesomeIcon size='sm' icon={faSearch} /> Pilih\n                </Button>\n              </Col>\n            )}\n\n            <Col lg='11' md='11' sm='9' xs='11'>\n              {this.state.defaultValue &&\n              !isUndefined(this.state.defaultValue) &&\n              !isEmpty(this.state.defaultValue)\n                ? this.labelGenerate(this.state.defaultValue)\n                : ''}\n            </Col>\n          </Row>\n          <Modal size='lg' show={this.state.show} onHide={this.openModal}>\n            <ModalHeader closeButton toggle={this.openModal}>\n              <Modal.Title>{this.props.placeholder || 'Pilih'}</Modal.Title>\n            </ModalHeader>\n            <ModalBody>\n              <Select\n                isClearable\n                id={this.props.id ? this.props.id : this.props.name}\n                isSearchable\n                isHtml={this.props.isHtml}\n                isMulti={this.props.isMultiple}\n                placeholder={\n                  this.props.placeholder ? this.props.placeholder : 'Pilih'\n                }\n                getOptionLabel={this.labelGenerate}\n                getOptionValue={(option) => option[this.props.optionValue]}\n                noOptionsMessage={() => 'Data tidak ditemukan'}\n                value={this.state.defaultValue}\n                onChange={this.onChange}\n                options={options}\n                isDisabled={this.props.disabled}\n              />\n            </ModalBody>\n          </Modal>\n        </React.Fragment>\n      )\n\n    return (\n      <Select\n        menuPortalTarget={document.body}\n        menuPosition='fixed'\n        styles={{\n          menuPortal: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit',\n            zIndex: 9999\n          }),\n          menu: (provided) => ({\n            ...provided,\n            fontFamily: 'inherit',\n            fontSize: 'inherit',\n            zIndex: '9999 !important'\n          }),\n          multiValueRemove: (base) => ({\n            ...base,\n            color: '#db2828',\n\n            cursor: 'pointer'\n          }),\n          placeholder: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          multiValue: (base) => ({\n            ...base,\n            background: 'none'\n          }),\n          multiValueLabel: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          option: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          clearIndicator: (base, state) => ({\n            ...base,\n            cursor: 'pointer',\n            color: state.isFocused ? '#db2828' : '#db2828'\n          })\n        }}\n        className='tcomponent-select'\n        // menuPlacement='top'\n        isClearable\n        id={this.props.id ? this.props.id : this.props.name}\n        isSearchable\n        isHtml={this.props.isHtml}\n        isMulti={this.props.isMultiple}\n        placeholder={this.props.placeholder ? this.props.placeholder : 'Pilih'}\n        getOptionLabel={this.labelGenerate}\n        getOptionValue={(option) => option[this.props.optionValue]}\n        noOptionsMessage={() => 'Data tidak ditemukan'}\n        value={this.state.defaultValue}\n        onChange={this.onChange}\n        options={options}\n        isDisabled={this.props.disabled}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSelect)\n","import React, { useState, useEffect } from 'react'\n\nimport { isEmpty, isEqual, filter as _filter } from 'lodash'\n\nimport { connect, useDispatch, useSelector } from 'react-redux'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport axios from 'axios'\n\nimport moment from 'moment'\n\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\n\nimport InputSelect from './InputSelect'\n\nimport InputText from './InputText'\n\nimport Loading from './Loading'\n\nimport {\n  slug,\n  setAuthHeader,\n  defaultFilterData,\n  secureData,\n  fetchErrorDispatch\n} from 'tcomponent'\n\nimport DataTable from './DataTable'\n\nimport InputFile from './InputFile'\n\nfunction InputWorkflow(props) {\n  let [isDelay, setIsDelay] = useState(false)\n\n  let [listLoading, setListLoading] = useState(false)\n\n  let [submitLoading, setSubmitLoading] = useState(false)\n\n  let [responseLoading, setResponseLoading] = useState(false)\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let validation = useSelector((state) => state.core.validation) || []\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let dispatch = useDispatch()\n\n  let [list, setList] = useState({})\n\n  let [activity, setActivity] = useState({\n    activity: {},\n    role: '',\n    response: []\n  })\n\n  let {\n    doAfterSubmit,\n    isLoading,\n    doSubmit,\n    doCancel,\n    isReadonly,\n    relation,\n    id,\n    isDelete\n  } = props\n\n  let [readonly, setReadonly] = useState(isReadonly)\n\n  useEffect(() => {\n    setReadonly(isReadonly)\n  }, [isReadonly])\n\n  function submit(event) {\n    if (!input.response_activity || isEmpty(input.response_activity)) {\n      dispatch({\n        type: 'SET_MESSAGE',\n        payload: 'Respon wajib diisi'\n      })\n    } /* else if(!input.response_comment || isEmpty(input.response_comment)){\n\n      dispatch({\n      type: 'SET_MESSAGE',\n      payload: 'Komentar wajib diisi'\n    });\n\n  } */ else {\n      setSubmitLoading(true)\n\n      setIsDelay(true)\n\n      setTimeout(() => setIsDelay(false), 1000)\n\n      doSubmit && doSubmit()\n    }\n  }\n\n  useEffect(() => {\n    reload_response()\n  }, [])\n\n  useEffect(() => {\n    let allowed_role = []\n\n    try {\n      allowed_role = activity.role.split(',')\n    } catch (e) {}\n\n    let user_role = []\n\n    try {\n      user_role = auth.user.role.split(',')\n    } catch (e) {}\n\n    let is_allowed = false\n\n    let is_admin = false\n\n    for (let i = 0; i < user_role.length; i++) {\n      if (\n        !is_admin &&\n        user_role[i] &&\n        isEqual(String(user_role[i]).trim().toLowerCase(), 'admin')\n      ) {\n        is_admin = true\n\n        is_allowed = true\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: {\n            key: 'response_role',\n            value: String(user_role[i]).trim().toLowerCase()\n          }\n        })\n      }\n    }\n\n    if (!is_admin) {\n      for (let i = 0; i < allowed_role.length; i++) {\n        for (let y = 0; y < user_role.length; y++) {\n          if (\n            allowed_role[i] &&\n            user_role[y] &&\n            String(allowed_role[i]).trim().toLowerCase() ==\n              String(user_role[y]).trim().toLowerCase() &&\n            !is_allowed\n          ) {\n            is_allowed = true\n\n            dispatch({\n              type: 'SET_INPUT',\n              payload: {\n                key: 'response_role',\n                value: String(user_role[y]).trim().toLowerCase()\n              }\n            })\n          }\n        }\n      }\n    }\n\n    let allowed =\n      !isEmpty(activity.activity) && activity.response.length > 0 && is_allowed\n\n    if (allowed && readonly && !isReadonly) {\n      setReadonly(false)\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: 'activity', value: activity.activity.code }\n      })\n    } else {\n      setReadonly(true)\n    }\n  }, [activity])\n\n  useEffect(() => {\n    if (submitLoading && !isEmpty(validation)) {\n      setSubmitLoading(false)\n    }\n  }, [validation])\n\n  useEffect(() => {\n    if (submitLoading && !isLoading && !isDelay) {\n      setSubmitLoading(false)\n\n      if (isEmpty(validation)) {\n        doAfterSubmit && doAfterSubmit()\n      }\n    }\n  }, [isDelay, validation, isLoading])\n\n  function cancel(event) {\n    doCancel && doCancel()\n  }\n\n  function reload_response() {\n    let url = process.env.REACT_APP_API_URL + '/komentar_respon?'\n\n    let options = {\n      data: secureData({\n        relation,\n        id\n      }),\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url\n    }\n\n    setResponseLoading(true)\n\n    axios(options)\n      .then((response) => {\n        let newactivity = response.data.data || {}\n\n        if (isDelete) {\n          newactivity.response = _filter(newactivity.response, function (o) {\n            return o.code == 'HAPUS'\n          })\n        }\n\n        setActivity(newactivity)\n\n        setResponseLoading(false)\n      })\n      .catch((error) => {\n        fetchErrorDispatch(error, dispatch)\n\n        setResponseLoading(false)\n      })\n  }\n\n  function reload() {\n    let url = process.env.REACT_APP_API_URL + '/komentar?'\n\n    let columns = [\n      'user',\n      'role',\n      'activity',\n      'comment',\n      'due_datetime',\n      'start_datetime',\n      'end_datetime'\n    ]\n\n    let f = {}\n\n    try {\n      f = defaultFilterData(filter, columns, slug(props.relation, '_'))\n    } catch (e) {}\n\n    let isi = {\n      relation,\n      id,\n      ...f\n    }\n\n    let options = {\n      data: secureData(isi),\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url\n    }\n\n    setListLoading(true)\n\n    axios(options)\n      .then((response) => {\n        setList(response.data.data)\n\n        setListLoading(false)\n      })\n      .catch((error) => {\n        fetchErrorDispatch(error, dispatch)\n\n        setListLoading(false)\n      })\n  }\n\n  if (responseLoading) return <Loading />\n\n  return (\n    <LoadingOverlay isLoading={isLoading || submitLoading}>\n      <Card>\n        <Card.Body>\n          <Card.Title tag='h5'>\n            {activity.activity.name || 'Alur tidak ditemukan'}\n          </Card.Title>\n          <Card.Text>\n            {!readonly && (\n              <Row>\n                <Col lg='6'>\n                  <Form.Group as={Row}>\n                    <Col lg='3'>\n                      <Form.Label>\n                        Respon <span className='text-danger'>*</span>\n                      </Form.Label>\n                    </Col>\n                    <Col lg='9'>\n                      <InputSelect\n                        name='response_activity'\n                        options={activity.response}\n                        separator=' | '\n                        optionLabel={['name']}\n                        optionValue='code'\n                      />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Col lg='3'>\n                      <Form.Label>Lampiran</Form.Label>\n                    </Col>\n\n                    <Col lg='5'>\n                      <InputFile\n                        value={input.attachment}\n                        name='response_attachment'\n                        id='response_attachment'\n                      />\n                    </Col>\n                  </Form.Group>\n                </Col>\n\n                <Col lg='6'>\n                  <Form.Group as={Row}>\n                    <Col lg='3' style={{ marginBottom: 35 }}>\n                      <Form.Label>Komentar</Form.Label>\n                    </Col>\n\n                    <Col lg='9'>\n                      <InputText\n                        type='textarea'\n                        required\n                        name='response_comment'\n                        id='response_comment'\n                        rows='3'\n                      />\n                    </Col>\n                  </Form.Group>\n                </Col>\n              </Row>\n            )}\n\n            <DataTable\n              data={list}\n              isLoading={listLoading}\n              name={slug(props.relation, '_')}\n              primaryKey='id'\n              isSearchable={true}\n              isColumnsSearchable={true}\n              onReload={reload}\n              columns={[\n                {\n                  Header: 'Nama',\n                  id: 'user',\n                  accessor: (d) => d.user\n                },\n                {\n                  Header: 'Jabatan',\n                  id: 'role',\n                  accessor: (d) => d.role\n                },\n                {\n                  Header: 'Aktifitas',\n                  id: 'activity',\n                  accessor: (d) => d.activity\n                },\n                {\n                  Header: 'Respon',\n                  id: 'response',\n                  accessor: (d) => d.response\n                },\n                {\n                  Header: 'Komentar',\n                  id: 'comment',\n                  accessor: (d) => d.comment\n                },\n                {\n                  Header: 'Tenggat',\n                  id: 'due_datetime',\n                  accessor: (d) =>\n                    d.due_datetime &&\n                    moment(d.due_datetime).format('DD-MM-YYYY HH:mm')\n                },\n                {\n                  Header: 'Mulai',\n                  id: 'start_datetime',\n                  accessor: (d) =>\n                    d.start_datetime &&\n                    moment(d.start_datetime).format('DD-MM-YYYY HH:mm')\n                },\n\n                {\n                  Header: 'Selesai',\n                  id: 'end_datetime',\n                  accessor: (d) =>\n                    d.end_datetime &&\n                    moment(d.end_datetime).format('DD-MM-YYYY HH:mm')\n                },\n                {\n                  Header: 'Lampiran',\n                  id: 'attachment',\n                  accessor: (d) => <InputFile value={d.attachment} isReadonly />\n                }\n              ]}\n            />\n          </Card.Text>\n          <Row className='mt-2'>\n            <Col>\n              <Button\n                type='button'\n                className='btn btn-icon btn-primary btn-sm float-left'\n                onClick={cancel}\n              >\n                Kembali\n              </Button>\n              {!readonly && (\n                <Button\n                  type='button'\n                  className='btn btn-icon btn-primary btn-sm float-right'\n                  onClick={submit}\n                >\n                  Proses\n                </Button>\n              )}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </LoadingOverlay>\n  )\n}\n\nexport default InputWorkflow\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nlet formatDefault = 'YYYY'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n    </InputGroup>\n  )\n}\n\nclass InputYear extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault).toDate()\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    let x = moment(date).format('d')\n\n    return x == 0 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    let dateFormat = this.props.dateFormat ? this.props.dateFormat : 'yyyy'\n\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          (moment(this.state.start_selected, formatDefault).isValid()\n            ? moment(this.state.start_selected, formatDefault).format('YYYY')\n            : '') +\n          ' - ' +\n          (moment(this.state.end_selected, formatDefault).isValid()\n            ? moment(this.state.end_selected, formatDefault).format('YYYY')\n            : '')\n        )\n      } else {\n        return (\n          <div className='input-daterange input-group'>\n            <DatePicker\n              minDate={\n                moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tahun'\n              }\n              selected={this.state.start_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              customInput={\n                <CustomInput\n                  value={this.state.start_selected}\n                  name={'start_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeStart}\n              withPortal\n              showYearPicker={true}\n              name={'start_' + this.props.name}\n              todayButton={null}\n              dayClassName={this.checkTglMerah}\n              dropdownMode='select'\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              shouldCloseOnSelect={false}\n            />\n            <span className='input-group-addon' style={{ background: 'none' }}>\n              &nbsp; - &nbsp;\n            </span>\n            <DatePicker\n              minDate={\n                moment(this.state.start_selected, formatDefault).isValid()\n                  ? moment(this.state.start_selected, formatDefault).toDate()\n                  : moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tahun'\n              }\n              selected={this.state.end_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              name={'end_' + this.props.name}\n              selectsEnd\n              customInput={\n                <CustomInput\n                  value={this.state.end_selected}\n                  name={'end_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeEnd}\n              withPortal\n              showYearPicker={true}\n              dayClassName={this.checkTglMerah}\n              todayButton={null}\n              dropdownMode='select'\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              shouldCloseOnSelect={false}\n            />\n          </div>\n        )\n      }\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return moment(this.props.input[this.props.name], formatDefault).isValid()\n        ? moment(this.props.input[this.props.name], formatDefault).format(\n            'YYYY'\n          )\n        : ''\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          moment(this.props.minDate, formatDefault).isValid()\n            ? moment(this.props.minDate, formatDefault).toDate()\n            : null\n        }\n        maxDate={\n          moment(this.props.maxDate, formatDefault).isValid()\n            ? moment(this.props.maxDate, formatDefault).toDate()\n            : null\n        }\n        dateFormat={dateFormat}\n        placeholder={this.props.placeholder ? this.props.placeholder : 'Tahun'}\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        selected={this.state.selected}\n        isClearable={!this.props.disabled && !this.props.isReadonly}\n        id={this.props.name}\n        className='form-control'\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        withPortal\n        showYearPicker={true}\n        todayButton={null}\n        dropdownMode='select'\n        disabled={this.props.disabled || this.props.isReadonly}\n        readOnly={this.props.disabled || this.props.isReadonly}\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputYear)\n","import React from \"react\";\n\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\nimport {css} from \"@emotion/react\";\n\nconst override = css`\n   position: absolute;\n   top: 50%;\n   left: 50%;\n   margin-top: -25px;\n   margin-left: -50px;\n`;\n\n\nfunction Loading() {\n   return <PuffLoader color={\"#000\"} css={override} size={50} />;\n}\n\nexport default Loading;\n","import React from 'react'\n\nimport { SketchPicker } from 'react-color'\n\nimport { Button } from 'react-bootstrap'\n\nimport { connect } from 'react-redux'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport { debounce } from 'lodash'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  handleInputChange = (data) => {\n    this.props.setInput(this.props.name, data.hex)\n\n    this.props.setParameter('selected_' + this.props.name, data)\n  }\n\n  componentDidMount() {\n    try {\n      this.props.setInput(\n        this.props.name,\n        this.props.parameter['selected_' + this.props.name].hex\n      )\n    } catch (e) {}\n  }\n\n  toggle = () => {\n    this.setState({ open: !this.state.open })\n  }\n\n  render() {\n    let val = ''\n\n    try {\n      val = findArrayName(this.props.name, this.props.input) || ''\n    } catch (e) {}\n\n    const isReadonly = this.props.disabled || this.props.isReadonly\n\n    return (\n      <React.Fragment>\n        {this.state.open ? (\n          <div\n            style={{\n              position: 'fixed',\n              top: '0px',\n              right: '0px',\n              bottom: '0px',\n              left: '0px',\n              zIndex:999\n            }}\n          >\n            <SketchPicker\n              color={val}\n              onChangeComplete={this.handleInputChange}\n            />\n            <Button\n              style={{ marginTop:10, backgroundColor: val, border: 0 }}\n              className='btn btn-primary'\n              onClick={this.toggle}\n              type='button'\n            >\n              Pilih\n            </Button>\n          </div>\n        ) : (\n          <Button\n            style={{ zIndex: 0, backgroundColor: val, border: 0 }}\n            className='btn btn-primary'\n            onClick={this.toggle}\n            type='button'\n          >\n            Pilih\n          </Button>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {},\n  parameter: state.core.parameter || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    }),\n  setParameter: (key, val) =>\n    dispatch({\n      type: 'SET_PARAMETER',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport {\n  findIndex,\n  filter as _filter,\n  isNull,\n  isUndefined,\n  isEqual,\n  map,\n  isObject,\n  uniq,\n  isArray,\n  isEmpty\n} from 'lodash'\n\nimport {\n  slug,\n  findArrayName,\n  secureData,\n  setAuthHeader,\n  useDebounce,\n  defaultFilterData\n} from 'tcomponent'\n\nimport Loading from './Loading'\n\nimport axios from 'axios'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport { useIsVisible } from 'react-is-visible'\n\nimport { Button, Col, Row, Modal, Form, InputGroup } from 'react-bootstrap'\n\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faTimes, faSync, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport DataTableContainer from './DataTableContainer'\n\nfunction ShowData(props) {\n  let [val, setVal] = useState({})\n\n  let [loading, setLoading] = useState(false)\n\n  let {\n    isMultiple,\n    defaultValue,\n    optionLabel,\n    separator,\n    primaryKey,\n    id,\n    param\n  } = props\n\n  let props_name = slug(props.name, '_')\n\n  let key_select = slug('selected_' + props_name, '_')\n\n  let dispatch = useDispatch()\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  function labelGenerate(option) {\n    if (isArray(optionLabel)) {\n      let label = []\n\n      separator = separator || ' | '\n\n      for (let i = 0; i <= optionLabel.length - 1; i++) {\n        if (option[optionLabel[i]] && !isUndefined(option[optionLabel[i]])) {\n          label.push(option[optionLabel[i]])\n        }\n      }\n\n      return label.join(separator)\n    } else {\n      return option[optionLabel] ? option[optionLabel] : ''\n    }\n  }\n\n  useEffect(() => {\n    let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n    let { keyword } = defaultFilterData(filter, [], props_name)\n\n    let data = secureData({\n      pkey: primaryKey,\n      selected: [id],\n      keyword,\n      load: 1,\n      page: 1,\n      ...param\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n    setLoading(true)\n\n    axios(options)\n      .then((resp) => {\n        setVal(resp.data.data.data[0])\n        setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(false)\n      })\n  }, [id])\n\n  function deleteData(d) {\n    setVal(null)\n\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let val = props.optionValue[key]\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: val, value: null }\n        })\n      })\n    }\n\n    if (isMultiple) {\n      let new_input = _filter(findArrayName(props_name, input), function (o) {\n        return o != d\n      })\n\n      let new_input_key = _filter(\n        findArrayName(key_select, input),\n        function (o) {\n          return o != d\n        }\n      )\n\n      let new_parameter = _filter(\n        findArrayName(key_select, parameter),\n        function (o) {\n          return o[primaryKey] != d\n        }\n      )\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: props_name, value: new_input }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: key_select, value: new_input_key }\n      })\n\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value: new_parameter\n        }\n      })\n    } else {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: props_name, value: null }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: key_select, value: null }\n      })\n\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value: {}\n        }\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {val && !isUndefined(val) && !isEmpty(val) ? (\n        [\n          labelGenerate(val),\n          !props.isReadonly && (\n            <Button\n              variant='link'\n              size='sm'\n              onClick={deleteData.bind(null, val[primaryKey])}\n              style={{ borderRadius: 100, zIndex: 0 }}\n            >\n              <FontAwesomeIcon size='sm' color='#db2828' icon={faTimes} />\n            </Button>\n          )\n        ]\n      ) : loading ? (\n        <Loading />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  )\n}\n\nfunction InputSelectFetch(props) {\n  let { isMultiple, defaultValue, optionLabel, separator } = props\n\n  let dispatch = useDispatch()\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let [visible, setVisible] = useState(false)\n\n  let [show, setShow] = useState(false)\n\n  let [loading, setLoading] = useState(false)\n\n  let [listLoading, setListLoading] = useState(false)\n\n  // let [localValue, setLocalValue] = useState(null)\n\n  let [localParameter, setLocalParameter] = useState({})\n\n  let [value, setValue] = useState(isMultiple ? [] : {})\n\n  let [last, setLast] = useState(0)\n\n  let [open, setOpen] = useState(false)\n\n  let [currentPage, setCurrentPage] = useState(1)\n\n  let props_name = slug(props.name, '_')\n\n  let key_select = slug('selected_' + props_name, '_')\n\n  let [label, setLabel] = useState(\n    props.label ? props.label : findArrayName(props_name, input)\n  )\n\n  let nodeRef = useRef()\n\n  let isVisible = useIsVisible(nodeRef)\n\n  let [data, setData] = useState([])\n\n  let [meta, setMeta] = useState({})\n\n  let primaryKey = props.primaryKey ? props.primaryKey : 'id'\n\n  function labelGenerate(option) {\n    let label = []\n\n    separator = separator || ' | '\n\n    if (isArray(optionLabel)) {\n      for (let i = 0; i <= optionLabel.length - 1; i++) {\n        if (option[optionLabel[i]] && !isUndefined(option[optionLabel[i]])) {\n          label.push(option[optionLabel[i]])\n        }\n      }\n\n      return label.join(separator)\n    } else {\n      return option[optionLabel] ? option[optionLabel] : ''\n    }\n  }\n\n  function onChecked(rowInfo, local_input, exist = false) {\n    let _value = rowInfo.row.original || {}\n\n    if (!isMultiple) {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: _value[primaryKey]\n        }\n      })\n    } else {\n      let new_input = []\n\n      let _local_input = findArrayName(key_select, local_input)\n\n      if (exist) {\n        new_input =\n          _filter(_local_input, (o) => {\n            return o && _value && String(o) != String(_value[primaryKey])\n          }) || []\n      } else {\n        new_input = _local_input || []\n\n        if (!isArray(new_input)) {\n          new_input = []\n        }\n\n        if (_value[primaryKey]) {\n          new_input.push(_value[primaryKey])\n        }\n      }\n\n      new_input = uniq(new_input)\n\n      new_input =\n        _filter(new_input, (o) => {\n          return !isNull(o) && !isUndefined(o)\n        }) || []\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: new_input\n        }\n      })\n    }\n  }\n\n  let checkComponent = {\n    Header: '#',\n    id: props_name + '_check',\n    Cell: (row) => {\n      let local_input = useSelector((state) => state.core.input)\n\n      let checked = false\n\n      let val = findArrayName(key_select, local_input)\n\n      try {\n        if (!isMultiple) {\n          checked = val === row.row.original[primaryKey]\n        } else {\n          checked =\n            findIndex(val, function (o) {\n              return o === row.row.original[primaryKey]\n            }) > -1\n        }\n      } catch (e) {}\n\n      if (!row.row.original[primaryKey]) {\n        return null\n      }\n\n      return (\n        <Form.Check\n          inline\n          id={slug(props_name + '_check_' + row.row.original[primaryKey], '_')}\n          name={slug(\n            props_name + '_check_' + row.row.original[primaryKey],\n            '_'\n          )}\n          style={{ zIndex: 100 }}\n          type={!isMultiple ? 'radio' : 'checkbox'}\n          value={1}\n          checked={checked}\n          disabled={props.isReadonly}\n          onChange={() => onChecked(row, local_input, checked)}\n        />\n      )\n    }\n  }\n\n  let _columns = [\n    {\n      Header: 'Keterangan',\n      id: 'label',\n      accessor: (d) => labelGenerate(d)\n    }\n  ]\n\n  let col = [checkComponent, ..._columns]\n\n  function onReload() {\n    if (open) {\n      loadOptions()\n    }\n  }\n\n  useDebounce(syncParameter, 500, [findArrayName(key_select, input)])\n\n  useDebounce(onReload, 500, [\n    findArrayName('keyword_' + props_name, filter),\n    findArrayName('page_' + props_name, filter),\n    findArrayName('load_' + props_name, filter)\n  ])\n\n  function syncParameter() {\n    if (!isMultiple) {\n      let new_input = findArrayName(key_select, input) || null\n\n      if (new_input) {\n        let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n        let { page, load, keyword } = defaultFilterData(filter, [], props_name)\n\n        let data = secureData({\n          pkey: primaryKey,\n          selected: [new_input],\n          keyword,\n          load: 1,\n          page: 1,\n          ...props.parameter\n        })\n\n        let options = {\n          method: 'POST',\n          headers: setAuthHeader(auth),\n          url,\n          data\n        }\n\n        setLoading(true)\n\n        axios(options)\n          .then((resp) => {\n            let new_parameter = resp.data.data.data[0] || {}\n\n            dispatch({\n              type: 'SET_PARAMETER',\n              payload: {\n                key: key_select,\n                value: new_parameter\n              }\n            })\n\n            handleInputChange(new_parameter)\n\n            setLoading(false)\n          })\n          .catch((error) => {\n            setLoading(false)\n          })\n      } else {\n        dispatch({\n          type: 'SET_PARAMETER',\n          payload: {\n            key: key_select,\n            value: null\n          }\n        })\n      }\n    } else {\n      let new_input =\n        _filter(findArrayName(key_select, input), function (o) {\n          return !isNull(o) && !isUndefined(o)\n        }) || []\n\n      if (new_input.length > 0) {\n        let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n        let { keyword } = defaultFilterData(filter, [], props_name)\n\n        let data = secureData({\n          pkey: primaryKey,\n          selected: new_input,\n          keyword,\n          load: new_input.length,\n          page: 1,\n          ...props.parameter\n        })\n\n        let options = {\n          method: 'POST',\n          headers: setAuthHeader(auth),\n          url,\n          data\n        }\n\n        setLoading(true)\n\n        axios(options)\n          .then((resp) => {\n            dispatch({\n              type: 'SET_PARAMETER',\n              payload: {\n                key: key_select,\n                value: resp.data.data.data\n              }\n            })\n\n            handleInputChange(resp.data.data.data)\n\n            setLoading(false)\n          })\n          .catch((error) => {\n            setLoading(false)\n          })\n      } else {\n        dispatch({\n          type: 'SET_PARAMETER',\n          payload: {\n            key: key_select,\n            value: null\n          }\n        })\n      }\n    }\n  }\n\n  let columns = React.useMemo(() => col, [])\n\n  useEffect(() => {\n    if (!isEqual(props.parameter, localParameter)) {\n      setLocalParameter(props.parameter)\n\n      onReload()\n    }\n\n    if (isVisible != visible) {\n      setVisible(isVisible)\n    }\n  })\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('show_' + props_name, '_'),\n        value: open\n      }\n    })\n  }, [open])\n\n  function openModal() {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('page_' + props_name, '_'),\n        value: 1\n      }\n    })\n\n    setOpen((data) => !data)\n\n    loadOptions()\n  }\n\n  function closeModal() {\n    setOpen(false)\n  }\n\n  function reloader() {\n    if (visible) {\n      // setLocalValue(defaultValue)\n\n      let val = null\n\n      try {\n        if (isMultiple) {\n          val = map(defaultValue, 'value')\n\n          val =\n            _filter(val, (o) => {\n              return o\n            }) || []\n        } else {\n          val = defaultValue.value || null\n        }\n      } catch (e) {}\n\n      let _input = findArrayName(key_select, input) || null\n\n      // console.log('reloader',defaultValue,props_name, val, _input)\n\n      if (!isEqual(val, _input)) {\n        if (isNull(val) && !isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: _input\n            }\n          })\n          // console.log(props_name,'COND 1')\n        } else if (!isNull(val) && isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: val\n            }\n          })\n          // console.log(props_name,'COND 2')\n        } else if (!isNull(val) && !isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: val\n            }\n          })\n          // console.log(props_name,'COND 3')\n        } else {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: null\n            }\n          })\n          // console.log(props_name,'COND 4')\n        }\n      }\n    }\n  }\n\n  useEffect(reloader, [visible])\n\n  useEffect(() => {\n    let val = null\n\n    try {\n      if (isMultiple) {\n        val =\n          _filter(map(defaultValue, 'value'), (o) => {\n            return o\n          }) || null\n      } else {\n        val = defaultValue.value || null\n      }\n    } catch (e) {}\n\n    if (val) {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: val\n        }\n      })\n    }\n  }, [])\n\n  function loadOptions() {\n    let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n    let { page, load, keyword, sorted, search } = defaultFilterData(\n      filter,\n      [],\n      props_name\n    )\n\n    let data = secureData({\n      pkey: primaryKey,\n      page,\n      load,\n      keyword,\n      sorted,\n      search,\n      ...props.parameter\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n\n    setListLoading(true)\n\n    return axios(options)\n      .then((resp) => {\n        let responseJSON = resp.data || {}\n\n        if (typeof responseJSON.data.data !== 'undefined') {\n          setLast(responseJSON.data.meta.last_page)\n\n          try {\n            setData(responseJSON.data.data || [])\n          } catch (e) {}\n\n          try {\n            setMeta(responseJSON.data.meta || {})\n          } catch (e) {}\n        } else if (typeof responseJSON.data !== 'undefined') {\n          setLast(responseJSON.meta.last_page)\n\n          try {\n            setData(responseJSON.data || [])\n          } catch (e) {}\n\n          try {\n            setMeta(responseJSON.meta || {})\n          } catch (e) {}\n        }\n\n        setListLoading(false)\n      })\n      .catch((error) => {\n        setListLoading(false)\n      })\n  }\n\n  function generateInputMultiple(event) {\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let k = props.optionValue[key]\n\n        let v = null\n\n        if (event) {\n          try {\n            v = uniq(map(event, key))\n          } catch (e) {}\n        }\n\n        if (!isEqual(findArrayName(k, input), v)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: k, value: v }\n          })\n        }\n      })\n    } else {\n      let k = props_name\n\n      let v = null\n\n      if (event) {\n        v = uniq(map(event, primaryKey))\n      }\n\n      if (!isEqual(findArrayName(k, input), v)) {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: k, value: v }\n        })\n      }\n    }\n  }\n\n  function generateInput(event) {\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let k = props.optionValue[key]\n\n        let v = null\n\n        if (event) {\n          try {\n            v = event[key]\n          } catch (e) {}\n        }\n\n        if (!isEqual(findArrayName(k, input), v)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: k, value: v }\n          })\n        }\n      })\n    } else {\n      let k = props_name\n\n      let v = null\n\n      if (event) {\n        v = event[primaryKey]\n      }\n\n      if (!isEqual(findArrayName(k, input), v)) {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: k, value: v }\n        })\n      }\n    }\n  }\n\n  function handleInputChange(event) {\n    if (isMultiple) {\n      generateInputMultiple(event)\n    } else {\n      generateInput(event)\n    }\n  }\n\n  let isi = []\n\n  let _input = findArrayName(key_select, input)\n\n  try {\n    if (isMultiple) {\n      isi = isArray(_input) ? _input : []\n    } else {\n      isi = _input ? [_input] : []\n    }\n  } catch (e) {}\n\n  let _parameter = findArrayName(key_select, parameter)\n\n  let isi_param = null\n\n  try {\n    if (isMultiple) {\n      isi_param = isArray(_parameter) ? _parameter : []\n    } else {\n      isi_param = isObject(_parameter) ? _parameter : {}\n    }\n  } catch (e) {}\n\n  return (\n    <div ref={nodeRef}>\n      <Row>\n        {!props.isReadonly && (\n          <Col lg='2' md='2' sm='4' xs='12'>\n            <Button\n              style={{ zIndex: 0 }}\n              size='sm'\n              variant='primary'\n              type='button'\n              className='btn-icon'\n              onClick={openModal}\n            >\n              <FontAwesomeIcon icon={faSearch} />\n            </Button>\n          </Col>\n        )}\n\n        <Col lg='10' md='10' sm='8' xs='12'>\n          {loading ? (\n            <Loading />\n          ) : (\n            isi.map((val, index) => {\n              return (\n                <React.Fragment>\n                  <ShowData\n                    isReadonly={props.isReadonly}\n                    name={props_name}\n                    optionLabel={optionLabel}\n                    separator={separator}\n                    param={props.parameter}\n                    url={props.url}\n                    primaryKey={primaryKey}\n                    isMultiple={isMultiple}\n                    id={val}\n                  />\n                  {props.isReadonly\n                    ? isi.length - 1 == index\n                      ? null\n                      : ', '\n                    : null}\n                </React.Fragment>\n              )\n            })\n          )}\n        </Col>\n      </Row>\n      <Modal size='lg' show={open} onHide={closeModal}>\n        <Modal.Header onHide={closeModal} closeButton>\n          <Modal.Title>{props.placeholder || 'Pilih'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <LoadingOverlay isLoading={listLoading}>\n            <div>\n              <InputGroup style={{ marginBottom: 12 }}>\n                <InputGroup.Text style={{ background: 'none' }}>\n                  <FontAwesomeIcon icon={faSearch} />\n                </InputGroup.Text>\n                <Form.Control\n                  style={{ borderLeft: 'none', zIndex: 0 }}\n                  className='form-control'\n                  value={findArrayName('keyword_' + props_name, filter)}\n                  onChange={(e) => {\n                    dispatch({\n                      type: 'SET_MULTI_FILTER',\n                      payload: {\n                        ['keyword_' + props_name]: e.target.value,\n                        ['page_' + props_name]: 1\n                      }\n                    })\n                  }}\n                  type='text'\n                  id={'search_' + key_select}\n                  name={'search_' + props_name}\n                  placeholder='Pencarian'\n                />\n\n                <Button\n                  style={{ zIndex: 0 }}\n                  variant='primary'\n                  onClick={onReload}\n                  type='button'\n                  disabled={props.isLoading}\n                >\n                  <FontAwesomeIcon icon={faSync} spin={props.isLoading} />\n                </Button>\n              </InputGroup>\n\n              <DataTableContainer\n                name={props_name}\n                columns={columns}\n                data={data}\n                primaryKey={primaryKey}\n                isColumnsSearchable={true}\n                fetchData={onReload}\n                loading={listLoading}\n                customPageTotal={meta && !isEmpty(meta) ? meta.total : 0}\n                customPageCount={meta && !isEmpty(meta) ? meta.last_page : 1}\n                customPageSize={\n                  meta && !isEmpty(meta)\n                    ? meta.per_page\n                    : filter['load_' + props_name]\n                    ? filter['load_' + props_name]\n                    : 5\n                }\n                customPageIndex={\n                  meta && !isEmpty(meta)\n                    ? meta.current_page\n                    : filter['page_' + props_name]\n                    ? filter['page_' + props_name]\n                    : 1\n                }\n              />\n            </div>\n          </LoadingOverlay>\n\n          {!listLoading && (\n            <div style={{ marginTop: 12 }}>\n              <p>Dipilih : </p>\n              {loading && <Loading />}\n              <ul>\n                {isMultiple\n                  ? isi_param &&\n                    isi_param.map((val, index) => {\n                      return (\n                        <li>\n                          {!isUndefined(val) && !isEmpty(val)\n                            ? labelGenerate(val)\n                            : ''}\n                        </li>\n                      )\n                    })\n                  : isi_param && (\n                      <li>\n                        {!isUndefined(isi_param) && !isEmpty(isi_param)\n                          ? labelGenerate(isi_param)\n                          : ''}\n                      </li>\n                    )}\n              </ul>\n            </div>\n          )}\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\n\nexport default InputSelectFetch\n","import React, { useState, useEffect } from 'react'\nimport ApexCharts from 'react-apexcharts'\n\nimport { slug } from 'tcomponent'\n\nimport {\n  isUndefined,\n  isArray,\n  isPlainObject,\n  isString,\n  isNumber,\n  isBoolean,\n  isNull,\n  isEmpty\n} from 'lodash'\n\nfunction Chart(props) {\n  let options = { chart: { width: 'auto' } }\n\n  let series = props.series || []\n\n  if (\n    (isUndefined(props.series) ||\n      isNull(props.series) ||\n      !isArray(props.series)) &&\n    isArray(props.options) &&\n    !isUndefined(props.optionValue) &&\n    !isNull(props.optionValue)\n  ) {\n    for (var i = 0; i < props.options.length; i++) {\n      if (isString(props.optionValue)) {\n        series.push(props.options[i][props.optionValue])\n      } else if (isPlainObject(props.optionValue)) {\n        let isi = {}\n        Object.keys(props.optionValue).map((key, index) => {\n          isi[props.optionValue[key]] = props.options[i][key]\n        })\n        series.push(isi)\n      } else if (isArray(props.optionValue)) {\n        let isi = []\n        for (var i2 = 0; i2 < props.optionValue.length; i2++) {\n          isi.push(props.options[i][props.optionValue[i2]])\n        }\n        series.push(isi)\n      }\n    }\n  }\n\n  if (\n    !isUndefined(props.dataLabels) &&\n    !isNull(props.dataLabels) &&\n    isPlainObject(props.dataLabels)\n  ) {\n    options.dataLabels = props.dataLabels\n  }\n\n  let separator = ' '\n\n  if (\n    !isUndefined(props.separator) &&\n    !isNull(props.separator) &&\n    isPlainObject(props.separator)\n  ) {\n    separator = props.separator\n  }\n\n  if (\n    !isUndefined(props.labels) &&\n    !isNull(props.labels) &&\n    isArray(props.labels)\n  ) {\n    options.labels = props.labels\n  } else if (\n    isArray(props.options) &&\n    !isUndefined(props.optionLabel) &&\n    !isNull(props.optionLabel)\n  ) {\n    options.labels = []\n\n    for (var i = 0; i < props.options.length; i++) {\n      if (isString(props.optionLabel)) {\n        options.labels.push(props.options[i][props.optionLabel])\n      } else if (isArray(props.optionLabel)) {\n        let isi = []\n        for (var i2 = 0; i2 < props.optionLabel.length; i2++) {\n          isi.push(props.options[i][props.optionLabel[i2]])\n        }\n        options.labels.push(isi.join(separator))\n      }\n    }\n  }\n\n  if (\n    !isUndefined(props.colors) &&\n    !isNull(props.colors) &&\n    isArray(props.colors)\n  ) {\n    options.colors = props.colors\n  } else if (\n    isArray(props.options) &&\n    !isUndefined(props.optionColor) &&\n    !isNull(props.optionColor) &&\n    isString(props.optionColor)\n  ) {\n    options.colors = []\n\n    for (var i = 0; i < props.options.length; i++) {\n      options.colors.push(props.options[i][props.optionColor])\n    }\n  }\n\n  if (\n    !isUndefined(props.locales) &&\n    !isNull(props.locales) &&\n    isArray(props.locales)\n  ) {\n    options.chart.locales = props.locales\n  }\n\n  if (!isUndefined(props.type) && !isNull(props.type) && isString(props.type)) {\n    options.chart.type = props.type\n  }\n\n  if (\n    !isUndefined(props.animations) &&\n    !isNull(props.animations) &&\n    isPlainObject(props.animations)\n  ) {\n    options.chart.animations = props.animations\n  }\n\n  if (\n    !isUndefined(props.background) &&\n    !isNull(props.background) &&\n    isString(props.background)\n  ) {\n    options.chart.background = props.background\n  }\n\n  if (\n    !isUndefined(props.brush) &&\n    !isNull(props.brush) &&\n    isPlainObject(props.brush)\n  ) {\n    options.chart.brush = props.brush\n  }\n\n  if (\n    !isUndefined(props.defaultLocale) &&\n    !isNull(props.defaultLocale) &&\n    isString(props.defaultLocale)\n  ) {\n    options.chart.defaultLocale = props.defaultLocale\n  }\n\n  if (\n    !isUndefined(props.dropShadow) &&\n    !isNull(props.dropShadow) &&\n    isPlainObject(props.defaultLocale)\n  ) {\n    options.chart.dropShadow = props.dropShadow\n  }\n\n  if (\n    !isUndefined(props.fontFamily) &&\n    !isNull(props.fontFamily) &&\n    isString(props.fontFamily)\n  ) {\n    options.chart.fontFamily = props.fontFamily\n  }\n\n  if (\n    !isUndefined(props.foreColor) &&\n    !isNull(props.foreColor) &&\n    isString(props.foreColor)\n  ) {\n    options.chart.foreColor = props.foreColor\n  }\n\n  if (\n    !isUndefined(props.group) &&\n    !isNull(props.group) &&\n    isString(props.group)\n  ) {\n    options.chart.group = props.group\n  }\n\n  if (\n    !isUndefined(props.events) &&\n    !isNull(props.events) &&\n    isPlainObject(props.events)\n  ) {\n    options.chart.events = props.events\n  }\n\n  if (\n    !isUndefined(props.height) &&\n    !isNull(props.height) &&\n    (isString(props.height) || isNumber(props.height))\n  ) {\n    options.chart.height = props.height\n  }\n\n  if (!isUndefined(props.id) && !isNull(props.id) && isString(props.id)) {\n    options.chart.id = slug(props.id)\n  }\n\n  if (!isUndefined(props.name) && !isNull(props.name) && isString(props.name)) {\n    options.chart.id = slug(props.name)\n  }\n\n  if (\n    !isUndefined(props.offsetX) &&\n    !isNull(props.offsetX) &&\n    isNumber(props.offsetX)\n  ) {\n    options.chart.offsetX = props.offsetX\n  }\n\n  if (\n    !isUndefined(props.offsetY) &&\n    !isNull(props.offsetY) &&\n    isNumber(props.offsetY)\n  ) {\n    options.chart.offsetY = props.offsetY\n  }\n\n  if (\n    !isUndefined(props.parentHeightOffset) &&\n    !isNull(props.parentHeightOffset) &&\n    isNumber(props.parentHeightOffset)\n  ) {\n    options.chart.parentHeightOffset = props.parentHeightOffset\n  }\n\n  if (\n    !isUndefined(props.redrawOnParentResize) &&\n    !isNull(props.redrawOnParentResize) &&\n    isBoolean(props.redrawOnParentResize)\n  ) {\n    options.chart.redrawOnParentResize = props.redrawOnParentResize\n  }\n\n  if (\n    !isUndefined(props.redrawOnWindowResize) &&\n    !isNull(props.redrawOnWindowResize) &&\n    isBoolean(props.redrawOnWindowResize)\n  ) {\n    options.chart.redrawOnWindowResize = props.redrawOnWindowResize\n  }\n\n  if (\n    !isUndefined(props.selection) &&\n    !isNull(props.selection) &&\n    isPlainObject(props.selection)\n  ) {\n    options.chart.selection = props.selection\n  }\n\n  if (\n    !isUndefined(props.sparkline) &&\n    !isNull(props.sparkline) &&\n    isBoolean(props.sparkline)\n  ) {\n    options.chart.sparkline = props.sparkline\n  }\n\n  if (\n    !isUndefined(props.stacked) &&\n    !isNull(props.stacked) &&\n    isBoolean(props.stacked)\n  ) {\n    options.chart.stacked = props.stacked\n  }\n\n  if (\n    !isUndefined(props.stackType) &&\n    !isNull(props.stackType) &&\n    isString(props.stackType)\n  ) {\n    options.chart.stackType = props.stackType\n  }\n\n  if (\n    !isUndefined(props.toolbar) &&\n    !isNull(props.toolbar) &&\n    isPlainObject(props.toolbar)\n  ) {\n    options.chart.toolbar = props.toolbar\n  }\n\n  if (\n    !isUndefined(props.width) &&\n    !isNull(props.width) &&\n    (isString(props.width) || isNumber(props.width))\n  ) {\n    options.chart.width = props.width\n  }\n\n  if (\n    !isUndefined(props.zoom) &&\n    !isNull(props.zoom) &&\n    isPlainObject(props.zoom)\n  ) {\n    options.chart.zoom = props.zoom\n  }\n\n  if (\n    !isUndefined(props.fill) &&\n    !isNull(props.fill) &&\n    isPlainObject(props.fill)\n  ) {\n    options.fill = props.fill\n  }\n\n  if (\n    !isUndefined(props.forecastDataPoints) &&\n    !isNull(props.forecastDataPoints) &&\n    isPlainObject(props.forecastDataPoints)\n  ) {\n    options.forecastDataPoints = props.forecastDataPoints\n  }\n\n  if (\n    !isUndefined(props.grid) &&\n    !isNull(props.grid) &&\n    isPlainObject(props.grid)\n  ) {\n    options.grid = props.grid\n  }\n\n  if (\n    !isUndefined(props.legend) &&\n    !isNull(props.legend) &&\n    isPlainObject(props.legend)\n  ) {\n    options.legend = props.legend\n  }\n\n  if (\n    !isUndefined(props.markers) &&\n    !isNull(props.markers) &&\n    isPlainObject(props.markers)\n  ) {\n    options.markers = props.markers\n  }\n\n  if (\n    !isUndefined(props.noData) &&\n    !isNull(props.noData) &&\n    isPlainObject(props.noData)\n  ) {\n    options.noData = props.noData\n  }\n\n  if (\n    !isUndefined(props.states) &&\n    !isNull(props.states) &&\n    isPlainObject(props.states)\n  ) {\n    options.states = props.states\n  }\n\n  if (\n    !isUndefined(props.stroke) &&\n    !isNull(props.stroke) &&\n    isPlainObject(props.stroke)\n  ) {\n    options.stroke = props.stroke\n  }\n\n  if (\n    !isUndefined(props.subtitle) &&\n    !isNull(props.subtitle) &&\n    isPlainObject(props.subtitle)\n  ) {\n    options.subtitle = props.subtitle\n  }\n\n  if (\n    !isUndefined(props.theme) &&\n    !isNull(props.theme) &&\n    isPlainObject(props.theme)\n  ) {\n    options.theme = props.theme\n  }\n\n  if (\n    !isUndefined(props.title) &&\n    !isNull(props.title) &&\n    isPlainObject(props.title)\n  ) {\n    options.title = props.title\n  }\n\n  if (\n    !isUndefined(props.tooltip) &&\n    !isNull(props.tooltip) &&\n    isPlainObject(props.tooltip)\n  ) {\n    options.tooltip = props.tooltip\n  }\n\n  if (\n    !isUndefined(props.xaxis) &&\n    !isNull(props.xaxis) &&\n    isPlainObject(props.xaxis)\n  ) {\n    options.xaxis = props.xaxis\n  }\n\n  if (\n    !isUndefined(props.yaxis) &&\n    !isNull(props.yaxis) &&\n    isPlainObject(props.yaxis)\n  ) {\n    options.yaxis = props.yaxis\n  }\n\n  if (\n    !isUndefined(props.plotOptions) &&\n    !isNull(props.plotOptions) &&\n    isPlainObject(props.plotOptions)\n  ) {\n    options.plotOptions = { [options.chart.type]: props.plotOptions }\n  }\n\n  // console.log('chart', props, options, series)\n\n  return (\n    <ApexCharts options={options} series={series} type={options.chart.type} />\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartLine(props) {\n  return <Chart {...props} type='line' />\n}\n\nexport default ChartLine\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBar(props) {\n  return <Chart {...props} type='bar' />\n}\n\nexport default ChartBar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartArea(props) {\n  return <Chart {...props} type='area' />\n}\n\nexport default ChartArea\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartCandleStick(props) {\n  return <Chart {...props} type='candlestick' />\n}\n\nexport default ChartCandleStick\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartHeatMap(props) {\n  return <Chart {...props} type='heatmap' />\n}\n\nexport default ChartHeatMap\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartTreeMap(props) {\n  return <Chart {...props} type='treemap' />\n}\n\nexport default ChartTreeMap\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartPie(props) {\n  return <Chart {...props} type='pie' />\n}\n\nexport default ChartPie\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartDonut(props) {\n  return <Chart {...props} type='donut' />\n}\n\nexport default ChartDonut\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadar(props) {\n  return <Chart {...props} type='radar' />\n}\n\nexport default ChartRadar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadar(props) {\n  return <Chart {...props} type='rangeBar' />\n}\n\nexport default ChartRadar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBubble(props) {\n  return <Chart {...props} type='bubble' />\n}\n\nexport default ChartBubble\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartPolarArea(props) {\n  return <Chart {...props} type='polarArea' />\n}\n\nexport default ChartPolarArea\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadial(props) {\n  return <Chart {...props} type='radialBar' />\n}\n\nexport default ChartRadial\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartScatter(props) {\n  return <Chart {...props} type='scatter' />\n}\n\nexport default ChartScatter\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBoxPlot(props) {\n  return <Chart {...props} type='boxPlot' />\n}\n\nexport default ChartBoxPlot\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartHistogram(props) {\n  return <Chart {...props} type='histogram' />\n}\n\nexport default ChartHistogram\n"],"names":["WirisEquationEditor","React","Component","constructor","props","super","this","handleEquationChange","event","onEquationInput","mathFormat","window","WirisPlugin","Parser","endParse","target","value","equationEditorRef","createRef","toolbarRef","componentDidMount","genericIntegrationProperties","current","toolbar","genericIntegrationInstance","GenericIntegration","init","listeners","fire","e","render","ref","ContentEditable","suppressContentEditableWarning","className","innerRef","onChange","html","InputText","dispatch","useDispatch","propsName","isUndefined","name","slug","String","placeholder","setPlaceholder","useState","type","open","setOpen","optionsCleave","setOptionsCleave","config","setConfig","readonly","toolbarButtonSize","input","useSelector","state","core","_state$core","useRef","editorRef","defaultType","findArrayName","handleInputChange","preventDefault","data","replace","maxlength","substring","openModal","closeModal","val","payload","key","useEffect","default_placeholder","options_cleave","toLowerCase","delimiter","blocks","numericOnly","delimiters","disableCopy","disablePaste","disableSelectAll","comb","push","length","Mousetrap","bind","disabled","isReadonly","isEmpty","parse","Cleave","id","options","rows","PhoneInput","international","defaultCountry","Fragment","style","minHeight","onClick","Modal","size","show","onHide","Header","closeButton","Title","Body","JoditEditor","tabIndex","Form","Control","Loading","PuffLoader","color","moment","momentImported","Preview","isEqual","file","maxWidth","src","process","env","REACT_APP_API_URL","Player","autoPlay","width","height","InputFile","acceptedFiles","accept","parameter","setType","setValue","loading","setLoading","auth","fetchInfo","token","isString","url","secureData","token_file","method","headers","setAuthHeader","axios","then","response","success","catch","error","cekValidFile","h","setValid","u","filter","setIsinya","d","split","toggle","[object Object]","openFile","x","cek","t","isArray","i","reloadType","terisi","isMultiple","display","label","files","dataTransfer","reader","FileReader","onload","base64","_data","FormData","_name","append","lastModifiedDate","format","post","_boundary","message","fileUpload","readAsDataURL","createfile","onInput","setTimeout","DropzoneComponent","showFiletypeIcon","postUrl","uploadMultiple","maxFiles","eventHandlers","drop","complete","isi","JSON","xhr","o","join","removedfile","djsConfig","params","user","addRemoveLinks","autoProcessQueue","map","index","preview","ButtonGroup","Button","variant","FontAwesomeIcon","icon","faSearch","vendor","location","href","faDownload","onDelete","faTimes","connect","setInput","labelGenerate","option","optionLabel","selectedOption","current_val","defaultValue","removed","new_val","optionValue","onRefresh","debounce","isNull","y","opt","cur","find","setState","componentDidUpdate","prevProps","prevState","isChecked","includes","Check","inline","checked","isHtml","CustomInput","InputGroup","Text","background","faCalendar","borderLeft","fontFamily","fontSize","isValid","handleInputChangeStart","handleInputChangeEnd","checkTglMerah","date","undefined","selected","start_selected","end_selected","isRange","toDate","dateFormat","yearOnly","DatePicker","minDate","maxDate","isClearable","customInput","selectsStart","peekNextMonth","withPortal","showMonthDropdown","showYearDropdown","showYearPicker","todayButton","dayClassName","dropdownMode","readOnly","startDate","endDate","shouldCloseOnSelect","selectsEnd","Number","validate_min_max","min","minValue","max","maxValue","props_name","rawValue","isNaN","parseFloat","setRawValue","input_name","parseInt","lastInputValue","checkType","numeral","numeralPositiveOnly","numeralThousandsGroupStyle","enableNegative","snapshot","onInit","cleave","numberFormat","InputRange","StyledLoader","styled","LoadingOverlay","MyLoadingOvelay","fadeSpeed","active","isLoading","spinner","children","Filter","DefaultColumnFilter","filterValue","column","setData","zIndex","DataTableContainer","columns","renderRowSubComponent","customPageIndex","customPageSize","customPageCount","isColumnsSearchable","primaryKey","customPageTotal","sortBy","k","urut","desc","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","gotoPage","setPageSize","pageIndex","pageSize","useTable","defaultColumn","initialState","manualPagination","pageCount","manualSortBy","defaultCanSort","isMultiSortEvent","useFilters","useSortBy","useExpanded","usePagination","useDebounce","sort","mykey","mysort","isSorted","isSortedDesc","localLoading","setLocalLoading","curpage","setCurPage","onChangeInSelect","onChangeInInput","customgotoPage","customcanNextPage","customcanPreviousPage","customnextPage","custompreviousPage","overflow","border","faAngleDoubleLeft","faAngleLeft","faFile","borderRight","minWidth","faBars","faAngleRight","faAngleDoubleRight","Table","margin","headerGroup","getHeaderGroupProps","padding","borderTop","getHeaderProps","getSortByToggleProps","fontWeight","generateSortingIndicator","row","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","textAlign","DataTable","visible","setVisible","link","setLink","temp","setTemp","meta","setMeta","tooltipOpenEx","setTooltipOpenEx","tooltipOpenIm","setTooltipOpenIm","key_select","checkComponent","Cell","local_input","selectable","original","findIndex","rowInfo","exist","new_input","_filter","uniq","onChecked","nodeRef","isVisible","useIsVisible","col","action","actionComponent","sortable","param","DropdownButton","isOpen","dropdown","openToggle","title","isBoolean","Dropdown","Item","onReload","uniqBy","new_parameter","find_data","syncParameter","useMemo","hapus","role","marginBottom","Row","Col","xs","sm","md","lg","renderFilter","justifyContent","isSearchable","loaded","faSync","spin","export","import","exportReload","disabledButton","faArrowAltCircleDown","Tooltip","placement","autohide","importReload","faArrowAltCircleUp","fetchData","total","last_page","per_page","current_page","Field","errorMessage","Group","as","Label","labelSize","isRequired","hint","inputSize","formatDefault","faClock","_","timeInputLabel","showTimeInput","IconClock","position","left","top","TimePicker","inputIcon","tags","suggestions","separator","reactTags","slice","splice","onAddition","tag","concat","onFocus","onValidate","v","ReactTags","minQueryLength","noSuggestionsText","removeButtonText","placeholderText","allowNew","isCreateable","withModal","ModalHeader","ModalBody","Select","isMulti","getOptionLabel","getOptionValue","noOptionsMessage","isDisabled","menuPortalTarget","document","body","menuPosition","styles","menuPortal","base","menu","provided","multiValueRemove","cursor","multiValue","multiValueLabel","clearIndicator","InputWorkflow","isDelay","setIsDelay","listLoading","setListLoading","submitLoading","setSubmitLoading","responseLoading","setResponseLoading","validation","list","setList","activity","setActivity","doAfterSubmit","doSubmit","doCancel","relation","isDelete","setReadonly","newactivity","code","fetchErrorDispatch","reload_response","allowed_role","user_role","is_allowed","is_admin","trim","Card","InputSelect","attachment","required","f","defaultFilterData","accessor","comment","due_datetime","start_datetime","end_datetime","response_activity","override","css","setParameter","hex","right","bottom","SketchPicker","onChangeComplete","marginTop","backgroundColor","ShowData","setVal","keyword","pkey","load","resp","isObject","Object","keys","new_input_key","borderRadius","InputSelectFetch","setShow","localParameter","setLocalParameter","last","setLast","currentPage","setCurrentPage","setLabel","_value","_local_input","loadOptions","sorted","search","responseJSON","generateInputMultiple","generateInput","_input","_parameter","isi_param","Chart","chart","series","isPlainObject","i2","dataLabels","labels","colors","optionColor","locales","animations","brush","defaultLocale","dropShadow","foreColor","group","events","isNumber","offsetX","offsetY","parentHeightOffset","redrawOnParentResize","redrawOnWindowResize","selection","sparkline","stacked","stackType","zoom","fill","forecastDataPoints","grid","legend","markers","noData","states","stroke","subtitle","theme","tooltip","xaxis","yaxis","plotOptions","ApexCharts","ChartLine","ChartBar","ChartArea","ChartCandleStick","ChartHeatMap","ChartTreeMap","ChartPie","ChartDonut","ChartRadar","ChartBubble","ChartPolarArea","ChartRadial","ChartScatter","ChartBoxPlot","ChartHistogram"],"mappings":"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"}