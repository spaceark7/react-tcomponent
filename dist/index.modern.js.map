{"version":3,"file":"index.modern.js","sources":["../src/InputText.js","../src/Loading.js","../src/InputFile.js","../src/InputChoose.js","../src/InputDate.js","../src/InputNumber.js","../src/LoadingOverlay.js","../src/DataTableContainer.js","../src/DataTable.js","../src/Field.js","../src/InputDateTime.js","../src/InputTime.js","../src/InputTag.js","../src/InputSelect.js","../src/InputWorkflow.js","../src/InputYear.js","../src/LoadingPage.js","../src/InputColor.js","../src/InputSelectFetch.js","../src/Chart.jsx","../src/ChartLine.jsx","../src/ChartBar.jsx","../src/ChartArea.jsx","../src/ChartCandleStick.jsx","../src/ChartHeatMap.jsx","../src/ChartTreeMap.jsx","../src/ChartPie.jsx","../src/ChartDonut.jsx","../src/ChartRadar.jsx","../src/ChartRange.jsx","../src/ChartBubble.jsx","../src/ChartPolarArea.jsx","../src/ChartRadial.jsx","../src/ChartScatter.jsx","../src/ChartBoxPlot.jsx","../src/ChartHistogram.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react'\n\nimport Cleave from 'cleave.js/react'\n\nimport { isEmpty, isUndefined, isNull, isEqual } from 'lodash'\n\nimport { connect } from 'react-redux'\n\nimport PhoneInput from 'react-phone-number-input'\n\nimport JoditEditor from 'jodit-react'\n\nimport Mousetrap from 'mousetrap'\n\n// import SunEditor from 'suneditor-react'\n\nimport './InputText.module.css'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport parse from 'html-react-parser'\n\nimport { Form } from 'react-bootstrap'\n\nimport * as MathType from '@wiris/mathtype-generic'\n\nimport ContentEditable from 'react-contenteditable'\n\nclass WirisEquationEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    // this.toolbarRef = props.toolbarRef;\n    this.equationEditorRef = React.createRef()\n    this.toolbarRef = React.createRef()\n  }\n\n  componentDidMount() {\n    let { toolbarRef } = this.props\n\n    try {\n      let genericIntegrationProperties = {}\n\n      genericIntegrationProperties.target = this.equationEditorRef.current\n\n      genericIntegrationProperties.toolbar = this.toolbarRef.current\n\n      let genericIntegrationInstance =\n        new window.WirisPlugin.GenericIntegration(genericIntegrationProperties)\n\n      genericIntegrationInstance.init()\n\n      genericIntegrationInstance.listeners.fire('onTargetReady', {})\n    } catch (e) {}\n  }\n\n  handleEquationChange = (event) => {\n    let { onEquationInput } = this.props\n    let mathFormat = window.WirisPlugin.Parser.endParse(event.target.value)\n    let equationImage = event.target.value\n    onEquationInput(equationImage, mathFormat)\n  }\n\n  render() {\n    let { value } = this.props || {}\n    return (\n      <div>\n        <div ref={this.toolbarRef} />\n        <ContentEditable\n          suppressContentEditableWarning={true}\n          className='equationContainer'\n          innerRef={this.equationEditorRef}\n          onChange={this.handleEquationChange}\n          html={value || ''}\n        />\n      </div>\n    )\n  }\n}\n\nclass InputText extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let default_placeholder = this.props.placeholder\n\n    let option_summer = {}\n\n    let options_cleave = {}\n\n    let type = this.props.type ? String(this.props.type) : ''\n\n    if (type.toLowerCase() == 'nik') {\n      options_cleave = {\n        delimiter: ' ',\n        blocks: [2, 2, 2, 6, 4],\n        numericOnly: true\n      }\n      default_placeholder = this.props.placeholder || 'Nomor Induk Kependudukan'\n    } else if (type.toLowerCase() == 'kip') {\n      options_cleave = {\n        delimiter: ' ',\n        blocks: [4, 4, 4, 4]\n      }\n      default_placeholder = this.props.placeholder || 'Kartu Indonesia Pintar'\n    } else if (type.toLowerCase() == 'npwp') {\n      options_cleave = {\n        delimiters: ['.', '.', '.', '-', '.'],\n        blocks: [2, 3, 3, 1, 3, 3],\n        numericOnly: true\n      }\n      default_placeholder = this.props.placeholder || 'Nomor Pokok Wajib Pajak'\n    } else if (type.toLowerCase() == 'postcode') {\n      options_cleave = {\n        blocks: [5],\n        delimiter: ' ',\n        numericOnly: true\n      }\n      default_placeholder = this.props.placeholder || 'Kode Pos'\n    } else if (type.toLowerCase() == 'phone') {\n      default_placeholder = this.props.placeholder || 'Telepon'\n    }\n\n    this.state = {\n      type,\n      placeholder: default_placeholder,\n      options_cleave,\n      value: this.props.value ? String(this.props.value) : '',\n      props_name: this.props.name ? slug(String(this.props.name), '_') : '',\n      config: {\n        readonly: false,\n        toolbarButtonSize: 'small'\n      }\n    }\n\n    this.toolbarRef = React.createRef()\n\n    this.editorRef = React.createRef()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    try {\n      if (\n        !isEqual(\n          findArrayName(this.state.props_name, this.props.input),\n          findArrayName(this.state.props_name, prevProps.input)\n        ) &&\n        !isEqual(\n          this.state.value,\n          findArrayName(this.state.props_name, this.props.input)\n        )\n      ) {\n        let value = this.props.input[this.state.props_name] || ''\n\n        this.setState({ value })\n      }\n    } catch (e) {}\n\n    if (this.props.value && prevProps.value != this.props.value) {\n      let value = this.props.value || ''\n\n      this.setState({ value })\n    }\n  }\n\n  componentDidMount() {\n    if (\n      this.props.disableCopy ||\n      this.props.disablePaste ||\n      this.props.disableSelectAll\n    ) {\n      let comb = []\n\n      if (this.props.disableCopy) {\n        comb.push('command+c')\n        comb.push('ctrl+c')\n      }\n\n      if (this.props.disablePaste) {\n        comb.push('command+v')\n        comb.push('ctrl+v')\n      }\n\n      if (this.props.disableSelectAll) {\n        comb.push('command+a')\n        comb.push('ctrl+a')\n      }\n\n      if (comb.length > 0) {\n        Mousetrap.bind(comb, function () {\n          return false\n        })\n      }\n    }\n\n    let value = ''\n\n    try {\n      let input_name = findArrayName(this.state.props_name, this.props.input)\n      value = this.props.value ? this.props.value : input_name\n    } catch (e) {}\n\n    this.setState({ value })\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n\n    let data = event.target.value ? String(event.target.value) : ''\n\n    if (\n      this.state.type == 'nik' ||\n      this.state.type == 'kip' ||\n      this.state.type == 'npwp' ||\n      this.state.type == 'postcode'\n    ) {\n      data = data.replace(/\\D/g, '')\n    }\n\n    if (this.props.maxlength) {\n      data = data.substring(0, this.props.maxlength)\n    }\n\n    this.setState({ value: data })\n\n    this.props.setInput(this.state.props_name, data)\n  }\n\n  onChange = (data) => {\n    this.setState({ value: data })\n\n    this.props.setInput(this.state.props_name, data)\n  }\n\n  render() {\n    if (!this.state.props_name) return 'Name is Required'\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return !isEmpty(this.state.value) && parse(String(this.state.value))\n    } else if (\n      this.state.type == 'nik' ||\n      this.state.type == 'kip' ||\n      this.state.type == 'npwp' ||\n      this.state.type == 'postcode'\n    ) {\n      return (\n        <Cleave\n          placeholder={this.state.placeholder}\n          id={this.props.id}\n          name={this.state.props_name}\n          value={this.state.value}\n          onChange={this.handleInputChange}\n          options={this.state.options_cleave}\n          className='form-control'\n        />\n      )\n    } else if (this.state.type == 'textarea') {\n      return (\n        <textarea\n          id={this.props.id}\n          rows={this.props.rows || 3}\n          className='form-control no-resize mousetrap'\n          onChange={this.handleInputChange}\n          name={this.state.props_name}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n        ></textarea>\n      )\n    } else if (this.state.type == 'phone') {\n      return (\n        <PhoneInput\n          international\n          defaultCountry='ID'\n          value={this.state.value ? String(this.state.value) : ''}\n          onChange={this.onChange}\n        />\n      )\n    } else if (this.state.type == 'texteditor') {\n      return (\n        <JoditEditor\n          key={this.props.name + '_editor'}\n          id={this.props.id}\n          ref={this.editorRef}\n          value={!isEmpty(this.state.value) ? String(this.state.value) : ''}\n          config={this.state.config}\n          tabIndex={1}\n          onChange={this.onChange}\n        />\n      )\n    } else if (this.state.type == 'equation') {\n      return (\n        <div id={this.props.id} ref={this.toolbarRef}>\n          <WirisEquationEditor\n            id={this.props.id}\n            onEquationInput={this.onChange}\n            toolbarRef={this.toolbarRef}\n            value={this.state.value}\n          />\n        </div>\n      )\n    }\n\n    let defaultType =\n      this.state.type === 'text' || isUndefined(this.state.type)\n        ? 'search'\n        : this.state.type\n\n    return (\n      <Form.Control\n        id={this.props.id}\n        type={defaultType}\n        placeholder={this.state.placeholder}\n        value={this.state.value}\n        onChange={this.handleInputChange}\n        name={this.state.props_name}\n        className='form-control mousetrap'\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputText)\n","import React from 'react'\n\nimport PuffLoader from 'react-spinners/PuffLoader'\n\nfunction Loading() {\n  return <PuffLoader color={'#000'} size={25} />\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport DropzoneComponent from 'react-dropzone-component'\n\nimport { Player } from 'video-react'\n\nimport * as momentImported from 'moment'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { findArrayName, slug, setAuthHeader, secureData } from 'tcomponent'\n\nimport {\n  isNull,\n  isUndefined,\n  isEqual,\n  isEmpty,\n  filter,\n  isArray,\n  isString\n} from 'lodash'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  faTimes,\n  faSearch,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Loading from './Loading'\n\nimport { Form, Button, Modal, ButtonGroup } from 'react-bootstrap'\n\nlet moment = momentImported\n\nfunction Preview(props) {\n  try {\n    if (isEqual(props.type.type.substring(0, 5), 'image')) {\n      return (\n        <img\n          key={props.file}\n          className='img-responsive'\n          style={{ maxWidth: '100%' }}\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        />\n      )\n    } else if (isEqual(props.type.type.substring(0, 5), 'video')) {\n      return (\n        <Player\n          key={props.file}\n          autoPlay={false}\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        />\n      )\n    } else if (isEqual(props.type.type, 'application/pdf')) {\n      return (\n        <iframe\n          key={props.file}\n          width='100%'\n          height='480'\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        ></iframe>\n      )\n    }\n  } catch (e) {}\n\n  return null\n}\n\nfunction InputFile(props) {\n  let acceptedFiles = props.accept\n    ? props.accept\n    : 'image/*, video/*, audio/*, .docx, .xlsx, .pptx, .csv, .pdf'\n\n  let input = useSelector((state) => state.core.input)\n\n  let parameter = useSelector((state) => state.core.parameter)\n\n  let [type, setType] = useState({})\n\n  let [value, setValue] = useState([])\n\n  let [loading, setLoading] = useState(false)\n\n  let auth = useSelector((state) => state.auth)\n\n  let dispatch = useDispatch()\n\n  function onDelete(val) {\n    let url = process.env.REACT_APP_API_URL + '/file/delete'\n\n    let data = secureData({\n      token_file: val,\n      token: auth.token\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n\n    setLoading(true)\n\n    axios(options)\n      .then((response) => {\n        if (!isEmpty(response.data.message)) {\n          dispatch({\n            type: 'SET_MESSAGE',\n            payload: response.data.message\n          })\n        }\n\n        let isi = filter(value, (o) => {\n          return !isEqual(o, val)\n        })\n\n        setValue(isi)\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: isi }\n        })\n\n        setLoading(false)\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'SET_MESSAGE',\n          payload: 'Gagal menghapus lampiran'\n        })\n\n        let isi = filter(value, (o) => {\n          return !isEqual(o, val)\n        })\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: isi }\n        })\n\n        setValue(isi)\n\n        setLoading(false)\n      })\n  }\n\n  function fetchInfo(token) {\n    if (\n      isString(token) &&\n      !isEmpty(token) &&\n      token != 'null' &&\n      isEmpty(type[token])\n    ) {\n      let url = process.env.REACT_APP_API_URL + '/file/info'\n\n      let data = secureData({\n        token_file: token\n      })\n\n      let options = {\n        method: 'POST',\n        headers: setAuthHeader(auth),\n        url,\n        data\n      }\n\n      setLoading(true)\n\n      axios(options)\n        .then((response) => {\n          if (response.data.success) {\n            type[token] = response.data.data\n            setType(type)\n\n            open[token] = false\n            setOpen(open)\n          }\n          setLoading(false)\n        })\n        .catch((error) => {\n          type[token] = ''\n          setType(type)\n\n          open[token] = false\n          setOpen(open)\n        })\n    }\n  }\n\n  function reloadType(t) {\n    try {\n      if (isArray(t) && t.length > 0) {\n        for (let i = 0; i < t.length; i++) {\n          let kondisi = cekValidFile(t[i])\n\n          if (kondisi) {\n            fetchInfo(t[i])\n          }\n        }\n      } else {\n        let kondisi = cekValidFile(t)\n\n        if (kondisi) {\n          fetchInfo(t)\n        }\n      }\n    } catch (e) {}\n  }\n\n  function cekValidFile(h) {\n    return (\n      isString(h) && !isEmpty(h) && h != 'null'\n      //!isNull(h) && !isUndefined(h) && !isEmpty(h)\n      //&& isEqual(String(h).substring(0, 3), 'AT-')\n    )\n  }\n\n  function setValid(u) {\n    return filter(u, cekValidFile) || []\n  }\n\n  function setIsinya(d) {\n    let i = String(d).split('|')\n\n    return setValid(i)\n  }\n\n  useEffect(() => {\n    let x = props.value ? props.value : findArrayName(props.name, input)\n\n    if (x) {\n      let cek = setIsinya(x)\n\n      setValue(cek)\n    }\n  }, [])\n\n  useEffect(() => {\n    let cek = setIsinya(findArrayName(props.name, input))\n    if (!isEqual(cek, value)) {\n      setValue(cek)\n    }\n  }, [findArrayName(props.name, input)])\n\n  useEffect(() => {\n    reloadType(value)\n  }, [value])\n\n  useEffect(() => {\n    openFile(loading)\n  }, [loading])\n\n  function toggle(val) {\n    setOpen({ ...open, [val]: !open[val] })\n  }\n\n  function fileUpload(file, base64) {\n    let url = props.url || process.env.REACT_APP_API_URL + '/file/upload'\n\n    let _data = new FormData()\n\n    let _name = file.name\n\n    let _type = file.type\n\n    _data.append('type', _type)\n    _data.append('name', _name)\n    _data.append('file', file)\n    _data.append(\n      'lastModifiedDate',\n      moment(file.lastModifiedDate).format('YYYY-MM-DD HH:mm:ss')\n    )\n    _data.append('size', file.size)\n\n    setLoading(true)\n\n    axios\n      .post(url, _data, {\n        headers: setAuthHeader(\n          auth,\n          `multipart/form-data; boundary=${_data._boundary}`\n        )\n      })\n      .then((response) => {\n        if (!isEmpty(response.data.message)) {\n          dispatch({\n            type: 'SET_MESSAGE',\n            payload: response.data.message\n          })\n        }\n\n        if (response.data.success) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: props.name, value: response.data.data.token }\n          })\n\n          setValue([response.data.data.token])\n        } else {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: props.name, value: '' }\n          })\n        }\n\n        setLoading(false)\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: '' }\n        })\n\n        dispatch({\n          type: 'SET_MESSAGE',\n          payload: 'Gagal mengunggah lampiran'\n        })\n\n        setLoading(false)\n      })\n  }\n\n  function createfile(file) {\n    let reader = new FileReader()\n\n    reader.onload = (e) => {\n      fileUpload(file, e.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  function onChangeMultiple(file) {\n    let isi = JSON.parse(file.xhr.response)\n\n    let current = value || []\n\n    current.push(isi.data.token)\n\n    let t =\n      filter(current, function (o) {\n        return !isEmpty(o)\n      }) || []\n\n    dispatch({\n      type: 'SET_INPUT',\n      payload: { key: props.name, value: t.join('|') }\n    })\n\n    setValue(t)\n  }\n\n  function onDeleteMultiple(data) {}\n\n  function onInput(e) {\n    openFile(false)\n  }\n\n  function openFile(val) {\n    if (val != parameter.openFile) {\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: { key: 'openFile', value: val }\n      })\n    }\n  }\n\n  function onClick(e) {\n    openFile(true)\n\n    setTimeout(() => {\n      openFile(false)\n    }, 60000)\n  }\n\n  function onChange(e) {\n    let files = e.target.files || e.dataTransfer.files\n\n    if (!files.length) return\n\n    createfile(files[0])\n  }\n\n  function onDrop() {}\n\n  let [open, setOpen] = useState({})\n\n  let terisi = setValid(value)\n\n  if (!process.env.REACT_APP_API_URL) {\n    return <span>REACT_APP_API_URL is required for .env</span>\n  }\n\n  return (\n    <div>\n      {!loading && !props.isReadonly && (\n        <div>\n          {!props.isMultiple && (\n            <div style={{ display: 'inline-block' }}>\n              <Form.Control\n                className={props.className}\n                accept={acceptedFiles}\n                label={props.name}\n                type='file'\n                onChange={onChange}\n                onInput={onInput}\n                onClick={onClick}\n              />\n            </div>\n          )}\n\n          {!loading && props.isMultiple && (\n            <DropzoneComponent\n              config={{\n                showFiletypeIcon: true,\n                postUrl:\n                  process.env.REACT_APP_API_URL + '/file/upload_multiple',\n                uploadMultiple: true,\n                maxFiles: 5\n              }}\n              eventHandlers={{\n                drop: onDrop,\n                complete: onChangeMultiple,\n                removedfile: onDeleteMultiple\n              }}\n              djsConfig={{\n                acceptedFiles,\n                params: {\n                  token: auth.user.token\n                },\n                addRemoveLinks: true,\n                autoProcessQueue: true,\n                maxFiles: 5\n              }}\n            />\n          )}\n        </div>\n      )}\n\n      {!loading &&\n        terisi.length > 0 &&\n        terisi.map((val, index) => {\n          return (\n            <div style={{ display: 'inline-block' }} key={val}>\n              {props.preview && (\n                <React.Fragment>\n                  <Preview key={val} type={type[val]} file={val} />\n                  <br />\n                </React.Fragment>\n              )}\n              <ButtonGroup>\n                <Button variant='primary' size='sm' onClick={() => toggle(val)}>\n                  <FontAwesomeIcon icon={faSearch} /> Lihat\n                </Button>\n                <Button\n                  vendor='success'\n                  onClick={() =>\n                    (window.location.href =\n                      process.env.REACT_APP_API_URL + '/file/download/' + val)\n                  }\n                  size='sm'\n                >\n                  <FontAwesomeIcon icon={faDownload} /> Unduh\n                </Button>\n\n                {!props.isReadonly && (\n                  <Button\n                    variant='danger'\n                    onClick={() => onDelete(val)}\n                    size='sm'\n                  >\n                    <FontAwesomeIcon icon={faTimes} /> Hapus\n                  </Button>\n                )}\n              </ButtonGroup>\n              <Modal\n                size='lg'\n                id={'modal_' + val}\n                show={open[val]}\n                onHide={() => toggle(val)}\n              >\n                <Modal.Header closeButton onHide={() => toggle(val)}>\n                  <Modal.Title>Lampiran {val}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Preview key={val} type={type[val]} file={val} />\n                </Modal.Body>\n              </Modal>\n            </div>\n          )\n        })}\n\n      {loading && <Loading />}\n    </div>\n  )\n}\n\nexport default InputFile\n","import React from 'react'\n\nimport {\n  debounce,\n  isEmpty,\n  find,\n  isUndefined,\n  isNull,\n  isArray,\n  isEqual,\n  includes\n} from 'lodash'\n\nimport { Form } from 'react-bootstrap'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport InputFile from './InputFile'\n\nimport { connect } from 'react-redux'\n\nimport parse from 'html-react-parser'\n\nclass InputChoose extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultValue: null,\n      type: this.props.type || 'inline'\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    // console.log('onRefresh')\n\n    let val = null\n\n    let defaultValue = null\n\n    if (this.props.value) {\n      val = this.props.value\n    } else {\n      val = findArrayName(this.props.name, this.props.input) || null\n    }\n\n    if (!isNull(val)) {\n      if (this.props.isMultiple) {\n        defaultValue = []\n\n        for (let i = 0; i < this.props.options.length; i++) {\n          for (let y = 0; y < val.length; y++) {\n            let opt = this.props.options[i]\n\n            let cur = val[y]\n\n            if (String(opt[this.props.optionValue]) == String(cur)) {\n              defaultValue.push(opt[this.props.optionValue])\n            }\n          }\n        }\n      } else {\n        defaultValue = find(\n          this.props.options,\n          function (o) {\n            return String(o[this.props.optionValue]) == String(val)\n          }.bind(this)\n        )\n        // console.log(this.props.options, val, defaultValue)\n      }\n    }\n\n    defaultValue =\n      !isUndefined(defaultValue) && !isNull(defaultValue) ? defaultValue : null\n\n    this.setState({\n      defaultValue\n    })\n  }\n\n  labelGenerate = (option) => {\n    let label = []\n    if (isArray(this.props.optionLabel)) {\n      let separator = this.props.separator ? this.props.separator : ' | '\n\n      for (let i = 0; i <= this.props.optionLabel.length - 1; i++) {\n        let isi = option[this.props.optionLabel[i]]\n\n        label.push(isi)\n      }\n    } else {\n      label.push(option[this.props.optionLabel])\n    }\n\n    return label\n  }\n\n  onChange = (selectedOption) => {\n    // console.log('onChange', selectedOption)\n\n    if (!this.props.isReadonly && this.props.name) {\n      try {\n        if (this.props.isMultiple) {\n          let current_val = this.state.defaultValue || []\n\n          let removed = false\n\n          let new_val = []\n\n          for (let i = 0; i < current_val.length; i++) {\n            let isi = current_val[i]\n\n            if (isi == selectedOption[this.props.optionValue]) {\n              removed = true\n            } else {\n              new_val.push(isi)\n            }\n          }\n\n          if (!removed) {\n            new_val.push(selectedOption[this.props.optionValue])\n          }\n\n          this.props.setInput(this.props.name, new_val)\n        } else {\n          let val = findArrayName(this.props.name, this.props.input) || null\n\n          if (this.props.value) {\n            val = this.props.value\n          }\n\n          let new_val = null\n\n          if (val != selectedOption[this.props.optionValue]) {\n            new_val = selectedOption[this.props.optionValue]\n          }\n          this.props.setInput(this.props.name, new_val)\n          // console.log('NEW_VAL_SINGLE', new_val)\n        }\n      } catch (e) {\n        // console.log(e)\n        this.props.setInput(this.props.name, null)\n      }\n    }\n\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(\n        findArrayName(this.props.name, prevProps.input),\n        findArrayName(this.props.name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.defaultValue,\n        findArrayName(this.props.name, this.props.input)\n      )\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  render() {\n    let options = []\n\n    try {\n      options = this.props.options.length > 0 ? this.props.options : []\n    } catch (e) {}\n\n    return (\n      <div className='custom-controls-stacked'>\n        {options.map((value) => {\n          let isChecked = false\n\n          // console.log(value, this.state.defaultValue, this.props.optionValue)\n\n          try {\n            if (this.props.isMultiple) {\n              isChecked = includes(\n                this.state.defaultValue,\n                value[this.props.optionValue]\n              )\n            } else {\n              isChecked = isEqual(\n                value[this.props.optionValue],\n                this.state.defaultValue[this.props.optionValue]\n              )\n            }\n          } catch (e) {\n            // console.log(e)\n          }\n          // console.log(this.props.name, isChecked)\n          /*\n          if (this.props.disabled || this.props.isReadonly) {\n            if (isChecked) {\n              return this.labelGenerate(value).map((val, i) => {\n                if (isEqual(String(val).substring(0, 3), 'AT-')) {\n                  return (\n                    <InputFile value={val} isReadonly={true} preview={true} />\n                  )\n                } else {\n                  return this.props.isHtml ? parse(String(val)) : val\n                }\n              })\n            } else {\n              return null\n            }\n          } else {\n            */\n\n          return (\n            <React.Fragment>\n              <Form.Check\n                inline={this.state.type == 'inline'}\n                disabled={this.props.disabled || this.props.isReadonly}\n                type={this.props.isMultiple ? 'checkbox' : 'radio'}\n                // className='custom-control-input'\n                name={this.props.name}\n                onChange={this.onChange.bind(this, value)}\n                value={value}\n                checked={isChecked}\n                label={this.labelGenerate(value).map((val, i) => {\n                  if (isEqual(String(val).substring(0, 3), 'AT-')) {\n                    return (\n                      <InputFile value={val} isReadonly={true} preview={true} />\n                    )\n                  } else {\n                    return this.props.isHtml ? parse(String(val)) : val\n                  }\n                })}\n              />\n            </React.Fragment>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nlet mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key)),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputChoose)\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport './InputDate.module.css'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n    </InputGroup>\n  )\n}\n\nclass InputDate extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = this.props.start_selected\n          ? moment(this.props.start_selected).toDate()\n          : findArrayName('start_' + this.props.name, this.props.input)\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input)\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = this.props.end_selected\n          ? moment(this.props.end_selected).toDate()\n          : findArrayName('end_' + this.props.name, this.props.input)\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input)\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = this.props.selected\n          ? moment(this.props.selected).toDate()\n          : findArrayName(this.props.name, this.props.input)\n          ? moment(findArrayName(this.props.name, this.props.input)).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data).isValid() ? moment(data).format('YYYY-MM-DD') : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data).isValid() ? moment(data).format('YYYY-MM-DD') : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data).isValid() ? moment(data).format('YYYY-MM-DD') : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    let x = moment(date).format('d')\n\n    return x == 0 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    let dateFormat = this.props.dateFormat\n      ? this.props.dateFormat\n      : this.props.yearOnly\n      ? 'yyyy'\n      : 'yyyy-MM-dd'\n\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          (moment(this.state.start_selected).isValid()\n            ? moment(this.state.start_selected).format('DD-MM-YYYY')\n            : '') +\n          ' - ' +\n          (moment(this.state.end_selected).isValid()\n            ? moment(this.state.end_selected).format('DD-MM-YYYY')\n            : '')\n        )\n      } else {\n        return (\n          <div className='input-daterange input-group'>\n            <DatePicker\n              minDate={\n                this.props.minDate ? moment(this.props.minDate).toDate() : null\n              }\n              maxDate={\n                this.props.maxDate ? moment(this.props.maxDate).toDate() : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tanggal'\n              }\n              selected={this.state.start_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              customInput={\n                <CustomInput\n                  value={this.state.start_selected}\n                  name={'start_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeStart}\n              selectsStart={!this.props.yearOnly}\n              peekNextMonth={!this.props.yearOnly}\n              withPortal\n              showMonthDropdown={!this.props.yearOnly}\n              showYearDropdown={!this.props.yearOnly}\n              showYearPicker={this.props.yearOnly}\n              name={'start_' + this.props.name}\n              todayButton={this.props.yearOnly ? null : 'Hari ini'}\n              dayClassName={this.checkTglMerah}\n              dropdownMode='select'\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              shouldCloseOnSelect={false}\n            />\n            <span className='input-group-addon' style={{ background: 'none' }}>\n              &nbsp; - &nbsp;\n            </span>\n            <DatePicker\n              minDate={\n                this.state.start_selected\n                  ? this.state.start_selected\n                  : this.props.minDate\n                  ? moment(this.props.minDate).toDate()\n                  : null\n              }\n              maxDate={\n                this.props.maxDate ? moment(this.props.maxDate).toDate() : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tanggal'\n              }\n              selected={this.state.end_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              name={'end_' + this.props.name}\n              selectsEnd\n              customInput={\n                <CustomInput\n                  value={this.state.end_selected}\n                  name={'end_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeEnd}\n              selectsStart={!this.props.yearOnly}\n              peekNextMonth={!this.props.yearOnly}\n              withPortal\n              showMonthDropdown={!this.props.yearOnly}\n              showYearDropdown={!this.props.yearOnly}\n              showYearPicker={this.props.yearOnly}\n              dayClassName={this.checkTglMerah}\n              todayButton={this.props.yearOnly ? null : 'Hari ini'}\n              dropdownMode='select'\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              shouldCloseOnSelect={false}\n            />\n          </div>\n        )\n      }\n    }\n\n    /*\n    if (this.props.yearOnly) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return moment(this.state.selected).format('YYYY')\n      } else {\n        return (\n          <DatePicker\n            dateFormat={dateFormat}\n            placeholder={\n              this.props.placeholder ? this.props.placeholder : 'Tahun'\n            }\n            selected={this.state.selected}\n            id={this.props.name}\n            showYearPicker\n            customInput={\n              <CustomInput value={this.state.selected} name={this.props.name} />\n            }\n            disabled={this.props.disabled || this.props.isReadonly}\n            readOnly={this.props.disabled || this.props.isReadonly}\n            onChange={this.handleInputChange}\n            shouldCloseOnSelect={false}\n          />\n        )\n      }\n    }\n    */\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return moment(this.props.input[this.props.name]).isValid()\n        ? moment(this.props.input[this.props.name]).format(\n            this.props.yearOnly ? 'YYYY' : 'DD-MM-YYYY'\n          )\n        : ''\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          this.props.minDate ? moment(this.props.minDate).toDate() : null\n        }\n        maxDate={\n          this.props.maxDate ? moment(this.props.maxDate).toDate() : null\n        }\n        dateFormat={dateFormat}\n        placeholder={\n          this.props.placeholder ? this.props.placeholder : 'Tanggal'\n        }\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        selected={this.state.selected}\n        isClearable={!this.props.disabled && !this.props.isReadonly}\n        id={this.props.name}\n        className='form-control'\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        selectsStart={!this.props.yearOnly}\n        peekNextMonth={!this.props.yearOnly}\n        withPortal\n        showMonthDropdown={!this.props.yearOnly}\n        showYearDropdown={!this.props.yearOnly}\n        showYearPicker={this.props.yearOnly}\n        todayButton={this.props.yearOnly ? null : 'Hari ini'}\n        dropdownMode='select'\n        disabled={this.props.disabled || this.props.isReadonly}\n        readOnly={this.props.disabled || this.props.isReadonly}\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputDate)\n","import React from 'react'\n\nimport Cleave from 'cleave.js/react'\n\nimport { isEmpty, debounce, isEqual, isUndefined, isNull } from 'lodash'\n\nimport InputRange from 'react-input-range'\n\nimport { findArrayName, slug, numberFormat } from 'tcomponent'\n\nimport { connect } from 'react-redux'\n\nclass InputNumber extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let options = this.props.enableNegative\n      ? {\n          numeral: true\n        }\n      : {\n          numeral: true,\n          numeralPositiveOnly: true\n        }\n\n    this.state = {\n      defaultValue: null,\n      options: {\n        numeral: true\n      },\n      event: null,\n      value: null,\n      props_name: slug(this.props.name, '_')\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  validate_min_max(val, min = 0, max = 100) {\n    if (this.props.enableNegative && val < 0) {\n      min = -max\n    }\n\n    if (isNaN(val)) {\n      val = min\n    }\n\n    val = parseFloat(val)\n\n    if (val >= max) {\n      val = max\n    } else if (val <= min) {\n      val = min\n    }\n\n    return val ? Number(val) : null\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      !isEqual(\n        findArrayName(this.state.props_name, prevProps.input),\n        findArrayName(this.state.props_name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.value,\n        findArrayName(this.state.props_name, this.props.input)\n      )\n    ) {\n      this.setState({\n        rawValue:\n          findArrayName(this.state.props_name, this.props.input) || null,\n        value: findArrayName(this.state.props_name, this.props.input) || null\n      })\n      this.onRefresh()\n    }\n\n    if (\n      this.props.value &&\n      prevProps.value != this.props.value &&\n      this.props.value != this.state.value\n    ) {\n      let value = this.props.value || null\n\n      this.setState({\n        rawValue: value,\n        value: value\n      })\n\n      this.onRefresh()\n    }\n  }\n\n  handleInputChange = (event) => {\n    let val = null\n\n    if (this.props.type == 'decimal') {\n      val = Number(event.target.value.replace(/[^0-9.-]+/g, ''))\n    } else if (this.props.type == 'percent') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        0,\n        100\n      )\n    } else if (this.props.type == 'range_three') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        1,\n        3\n      )\n    } else if (this.props.type == 'range_hundred') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        1,\n        100\n      )\n    } else if (this.props.type == 'range_depend') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        0,\n        100\n      )\n    } else {\n      val = event.target.value.replace(/[^0-9.-]+/g, '')\n    }\n\n    let min = this.props.minValue ? Number(this.props.minValue) : null\n\n    let max = this.props.maxValue ? Number(this.props.maxValue) : null\n\n    if (max && min) {\n      val = this.validate_min_max(val, min, max)\n    } else if (!max && min) {\n      val = this.validate_min_max(val, min, 999999999999)\n    } else if (max && !min) {\n      val = this.validate_min_max(val, 0, max)\n    }\n\n    val = val ? val : 0\n\n    if (this.state.props_name) {\n      this.props.setInput(this.state.props_name, val)\n    }\n\n    let rawValue = event.target.rawValue || null\n\n    if (\n      !isNaN(parseFloat(rawValue)) &&\n      !isNaN(parseFloat(val)) &&\n      parseFloat(rawValue) !== parseFloat(val)\n    ) {\n      this.state.event.setRawValue(val)\n    }\n  }\n\n  onChange = (val) => {\n    this.setState({\n      value: val\n    })\n\n    if (this.state.props_name) {\n      this.props.setInput(this.state.props_name, val)\n    }\n  }\n\n  onRefresh = () => {\n    let val = ''\n\n    try {\n      let input_name = findArrayName(this.state.props_name, this.props.input)\n      val = this.props.value ? this.props.value : input_name\n    } catch (e) {}\n\n    let min = this.props.minValue ? Number(this.props.minValue) : null\n\n    let max = this.props.maxValue ? Number(this.props.maxValue) : null\n\n    let value = val ? parseInt(val) : min\n\n    if (this.props.type == 'decimal') {\n      value = val ? parseFloat(val) : min\n    } else if (\n      this.props.type == 'percent' ||\n      this.props.type == 'range_three' ||\n      max ||\n      min\n    ) {\n      value = val ? parseFloat(val) : min\n    }\n\n    if (isNaN(value)) {\n      value = min\n    }\n\n    this.setState({ value })\n\n    try {\n      let rawValue = this.state.event.lastInputValue || null\n\n      if (parseFloat(rawValue) !== parseFloat(value)) {\n        this.state.event.setRawValue(value)\n      }\n    } catch (e) {}\n  }\n\n  componentDidMount() {\n    let options = {\n      numeral: true,\n      numeralPositiveOnly: true\n    }\n\n    if (\n      this.props.type == 'decimal' ||\n      this.props.type == 'percent' ||\n      this.props.type == 'range_three'\n    ) {\n    } else {\n      options.numeralThousandsGroupStyle = 'thousand'\n    }\n\n    this.setState({\n      options,\n      rawValue: findArrayName(this.state.props_name, this.props.input),\n      value: findArrayName(this.state.props_name, this.props.input)\n    })\n\n    this.onRefresh()\n  }\n\n  onInit(cleave) {\n    this.setState({ event: cleave })\n  }\n\n  render() {\n    if (this.props.disabled || this.props.isReadonly) {\n      return !isNull(this.state.value) && !isUndefined(this.state.value)\n        ? numberFormat(this.state.value, '')\n        : null\n    }\n\n    if (this.props.type == 'range') {\n      return (\n        <InputRange\n          maxValue={this.props.maxValue}\n          minValue={this.props.minValue}\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n      )\n    }\n    return (\n      <Cleave\n        placeholder={this.props.placeholder ? this.props.placeholder : ''}\n        id={this.state.props_name}\n        name={this.state.props_name}\n        onInit={this.onInit.bind(this)}\n        value={this.state.value}\n        onChange={this.handleInputChange}\n        options={this.state.options}\n        className='form-control'\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) => {\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputNumber)\n","import React from 'react'\n\nimport LoadingOverlay from 'react-loading-overlay'\n\nimport styled from 'styled-components'\n\nimport Loading from './Loading'\n\nconst StyledLoader = styled(LoadingOverlay)`\n  overflow: hidden;\n\n  ._loading_overlay_overlay {\n    background: rgba(255, 255, 255, 0.5);\n  }\n  &._loading_overlay_wrapper--active {\n    overflow: hidden;\n  }\n`\n\nfunction MyLoadingOvelay(props) {\n  return (\n    <StyledLoader\n      fadeSpeed={250}\n      active={props.isLoading}\n      spinner={<Loading />}\n    >\n      {props.children}\n    </StyledLoader>\n  )\n}\n\nexport default MyLoadingOvelay\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector, connect } from 'react-redux'\n\nimport { findArrayName, slug, useDebounce, numberFormat } from 'tcomponent'\n\nimport './DataTableContainer.module.css'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport { useIsVisible } from 'react-is-visible'\n\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination\n} from 'react-table'\n\nimport { isEmpty, isNull, isUndefined } from 'lodash'\n\nimport { Form, InputGroup, Button, Table } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  faBars,\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faAngleRight,\n  faAngleLeft\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { faFile } from '@fortawesome/free-regular-svg-icons'\n\nexport const Filter = ({ column }) => {\n  return (\n    <div style={{ margin: '4px 0' }}>\n      {column.canFilter && column.render('Filter')}\n    </div>\n  )\n}\n\nexport const DefaultColumnFilter = (props) => {\n  let filterValue = props.column.filterValue\n\n  let id = props.column.id\n\n  let name = props.name\n\n  let dispatch = useDispatch()\n\n  let [data, setData] = React.useState(filterValue)\n\n  let key = slug('search_' + name + '_' + id, '_')\n\n  let filter = useSelector((state) => state.core.filter)\n\n  useEffect(() => {\n    setData(filter[key])\n  }, [])\n\n  function onChange(e) {\n    e.preventDefault()\n\n    setData(e.target.value)\n\n    dispatch({\n      type: 'SET_MULTI_FILTER',\n      payload: {\n        [key]: e.target.value,\n        [slug('loaded_' + name, '_')]: false\n      }\n    })\n  }\n\n  return (\n    <Form.Control\n      key={key}\n      id={key}\n      name={key}\n      value={data}\n      onChange={onChange}\n      placeholder={`Pencarian`}\n    />\n  )\n}\n\n/*\nexport let SelectColumnFilter = ({\n  column: { filterValue, setFilter, preFilteredRows, id }\n}) => {\n  let options = React.useMemo(() => {\n    let options = new Set()\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id])\n    })\n    return [...options.values()]\n  }, [id, preFilteredRows])\n\n  return (\n    <CustomInput\n      id='custom-select'\n      type='select'\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=''>All</option>\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </CustomInput>\n  )\n}\n*/\n\nfunction DataTableContainer({\n  columns,\n  data,\n  renderRowSubComponent,\n  customPageIndex,\n  customPageSize,\n  customPageCount,\n  loading,\n  isColumnsSearchable,\n  primaryKey,\n  name,\n  customPageTotal\n}) {\n  // console.log(customPageIndex)\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let sortBy = []\n\n  for (let i = 0; i < columns.length; i++) {\n    try {\n      let k = slug('sort_' + name + '_' + columns[i][primaryKey], '_')\n\n      let urut = filter[k]\n\n      if (!isEmpty(urut) && !isNull(urut) && !isUndefined(urut)) {\n        sortBy.push({\n          id: columns[i][primaryKey],\n          desc: urut == 'desc'\n        })\n      }\n    } catch (e) {}\n  }\n\n  let {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    visibleColumns,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize }\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: {\n        Filter: (props) => <DefaultColumnFilter {...props} name={name} />\n      },\n      initialState: {\n        pageIndex: customPageIndex,\n        pageSize: customPageSize,\n        sortBy\n      },\n      manualPagination: true,\n      pageCount: customPageCount,\n      manualSortBy: true,\n      defaultCanSort: true,\n      isMultiSortEvent: () => {}\n    },\n\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination\n  )\n\n  let headers = headerGroups[0].headers || []\n\n  useDebounce(\n    () => {\n      let sort = {}\n\n      for (let i = 0; i < headers.length; i++) {\n        let x = headers[i]\n\n        if (x) {\n          let mykey = slug('sort_' + name + '_' + x[primaryKey], '_')\n\n          let mysort = x.isSorted ? (x.isSortedDesc ? 'desc' : 'asc') : null\n\n          if (mysort != filter[mykey]) {\n            sort[mykey] = mysort\n          }\n        }\n      }\n\n      if (!isEmpty(sort)) {\n        dispatch({\n          type: 'SET_MULTI_FILTER',\n          payload: { ...sort, [slug('loaded_' + name, '_')]: false }\n        })\n      }\n    },\n    1000,\n    [headers]\n  )\n\n  let [localLoading, setLocalLoading] = useState(loading)\n\n  let [curpage, setCurPage] = useState(pageIndex)\n\n  let dispatch = useDispatch()\n\n  let generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? ' ↓' : ' ↑') : ''\n  }\n\n  let onChangeInSelect = (event) => {\n    setPageSize(Number(event.target.value))\n\n    dispatch({\n      type: 'SET_MULTI_FILTER',\n      payload: {\n        [slug('load_' + name, '_')]: Number(event.target.value),\n        [slug('page_' + name, '_')]: curpage\n      }\n    })\n  }\n\n  let onChangeInInput = (event) => {\n    let page = event.target.value ? Number(event.target.value) : 0\n\n    customgotoPage(page)\n  }\n\n  let customcanNextPage = customPageIndex < customPageCount\n\n  let customcanPreviousPage = customPageIndex >= 2\n\n  let customnextPage = () => {\n    customgotoPage(curpage + 1)\n  }\n\n  let custompreviousPage = () => {\n    customgotoPage(curpage - 1)\n  }\n\n  let customgotoPage = (isi) => {\n    setCurPage(isi)\n  }\n\n  useDebounce(\n    () => {\n      gotoPage(curpage)\n      dispatch({\n        type: 'SET_MULTI_FILTER',\n        payload: {\n          [slug('load_' + name, '_')]: pageSize,\n          [slug('page_' + name, '_')]: curpage\n        }\n      })\n    },\n    1000,\n    [curpage]\n  )\n\n  useEffect(() => {\n    if (setLocalLoading && !loading) {\n      setTimeout(() => setLocalLoading(loading), 1000)\n    } else {\n      setLocalLoading(loading)\n    }\n  }, [loading])\n\n  if (isEmpty(name)) {\n    return <p>Props name is Required</p>\n  }\n\n  return (\n    <div>\n      <div className='custom-scroll' style={{ overflow: 'auto' }}>\n        <InputGroup>\n\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={() => customgotoPage(1)}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleLeft} />\n          </Button>\n\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={custompreviousPage}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleLeft} />\n          </Button>\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faFile} /> &nbsp; Hal :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            style={{ borderLeft: 'none', borderRight: 'none', minWidth: 72 }}\n            type='number'\n            min={1}\n            max={customPageCount}\n            value={curpage}\n            onChange={onChangeInInput}\n          />\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faBars} /> &nbsp; Lihat :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            type='number'\n            min={1}\n            style={{ borderLeft: 'none', borderRight: 'none', minWidth: 72 }}\n            max={50}\n            value={pageSize}\n            onChange={onChangeInSelect}\n          />\n\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={customnextPage}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleRight} />\n          </Button>\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={() => customgotoPage(customPageCount)}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </Button>\n        </InputGroup>\n      </div>\n\n      <div className='text-center mt-2 mb-2'>\n        <strong>{numberFormat(customPageIndex, '')}</strong> dari{' '}\n        <strong>{numberFormat(customPageCount, '')}</strong> hal. Total{' : '}\n        <strong>{numberFormat(customPageTotal, '')}</strong> hal\n      </div>\n\n      <Table\n        style={{ margin: 0, zIndex: 0 }}\n        responsive\n        bordered\n        hover\n        striped\n        vcenter\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  style={{\n                    padding: '4px 8px',\n                    borderTop: '1px solid #dee2e6'\n                  }}\n                  {...column.getHeaderProps()}\n                >\n                  <div {...column.getSortByToggleProps()}>\n                    <span\n                      style={{\n                        display: 'inline-block'\n                      }}\n                    >\n                      {column.render('Header')}\n                    </span>\n                    <span\n                      style={{\n                        display: 'inline-block',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      {generateSortingIndicator(column)}\n                    </span>\n                  </div>\n                  {isColumnsSearchable && <Filter column={column} />}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {page.length > 0 && !localLoading\n            ? page.map((row) => {\n                prepareRow(row)\n                return (\n                  <React.Fragment key={row.getRowProps().key}>\n                    <tr>\n                      {row.cells.map((cell, index) => {\n                        return (\n                          <td\n                            style={{\n                              padding: '4px 8px',\n                              width: index == 0 ? '10px' : 'auto'\n                            }}\n                            {...cell.getCellProps()}\n                          >\n                            {cell.render('Cell')}\n                          </td>\n                        )\n                      })}\n                    </tr>\n                    {row.isExpanded && (\n                      <tr>\n                        <td\n                          style={{\n                            padding: '4px 8px'\n                          }}\n                          colSpan={visibleColumns.length}\n                        >\n                          {renderRowSubComponent(row)}\n                        </td>\n                      </tr>\n                    )}\n                  </React.Fragment>\n                )\n              })\n            : headerGroups.map((headerGroup) => (\n                <tr>\n                  <td\n                    style={{\n                      padding: '12px 0',\n                      textAlign: 'center'\n                    }}\n                    colSpan={headerGroup.headers.length}\n                  >\n                    {localLoading ? 'Memproses...' : 'Tidak ada data'}\n                  </td>\n                </tr>\n              ))}\n        </tbody>\n      </Table>\n\n      <div className='text-center mt-2 mb-2'>\n        <strong>{numberFormat(customPageIndex, '')}</strong> dari{' '}\n        <strong>{numberFormat(customPageCount, '')}</strong> hal. Total{' : '}\n        <strong>{numberFormat(customPageTotal, '')}</strong> hal\n      </div>\n      <div className='custom-scroll' style={{ overflow: 'auto' }}>\n        <InputGroup>\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={() => customgotoPage(1)}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleLeft} />\n          </Button>\n\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={custompreviousPage}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleLeft} />\n          </Button>\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faFile} /> &nbsp; Hal :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            style={{ borderLeft: 'none', borderRight: 'none', minWidth: 72 }}\n            type='number'\n            min={1}\n            max={customPageCount}\n            value={curpage}\n            onChange={onChangeInInput}\n          />\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faBars} /> &nbsp; Lihat :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            type='number'\n            min={1}\n            style={{ borderLeft: 'none', borderRight: 'none', minWidth: 72 }}\n            max={50}\n            value={pageSize}\n            onChange={onChangeInSelect}\n          />\n\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={customnextPage}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleRight} />\n          </Button>\n          <Button\n            style={{ border: 'none' }}\n            variant='primary'\n            onClick={() => customgotoPage(customPageCount)}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </Button>\n        </InputGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default DataTableContainer\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector, connect } from 'react-redux'\n\nimport { findArrayName, slug, useDebounce } from 'tcomponent'\n\nimport './DataTable.module.css'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport DataTableContainer from './DataTableContainer'\n\nimport { useIsVisible } from 'react-is-visible'\n\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination\n} from 'react-table'\n\nimport {\n  filter as _filter,\n  isArray,\n  uniq,\n  findIndex,\n  find,\n  isEmpty,\n  uniqBy,\n  isEqual,\n  isUndefined,\n  isBoolean\n} from 'lodash'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faSync, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faArrowAltCircleDown,\n  faArrowAltCircleUp\n} from '@fortawesome/free-regular-svg-icons'\n\nimport './DataTable.module.css'\n\nimport {\n  Row,\n  InputGroup,\n  Col,\n  Form,\n  Button,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown\n} from 'react-bootstrap'\n\nfunction DataTable(props) {\n  let [visible, setVisible] = useState(false)\n\n  let [data, setData] = useState([])\n\n  let [temp, setTemp] = useState([])\n\n  let [meta, setMeta] = useState({})\n\n  let [tooltipOpenEx, setTooltipOpenEx] = useState(false)\n\n  let [tooltipOpenIm, setTooltipOpenIm] = useState(false)\n\n  let toggleImport = () => setTooltipOpenIm(!tooltipOpenIm)\n\n  let toggleExport = () => setTooltipOpenEx(!tooltipOpenEx)\n\n  let dispatch = useDispatch()\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let user = useSelector((state) => state.auth.user) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let key_select = slug('selected_' + props.name, '_')\n\n  let primaryKey = props.primaryKey ? props.primaryKey : 'id'\n\n  function onChecked(rowInfo, input, exist = false) {\n    let value = rowInfo.row.original || {}\n\n    if (props.selectable == 'single') {\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value\n        }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: value[primaryKey]\n        }\n      })\n    } else {\n      let new_input = []\n\n      if (exist) {\n        new_input =\n          _filter(findArrayName(key_select, input), (o) => {\n            return o && value && parseInt(o) != parseInt(value[primaryKey])\n          }) || []\n      } else {\n        new_input = findArrayName(key_select, input) || []\n\n        if (!isArray(new_input)) {\n          new_input = []\n        }\n\n        new_input.push(value[primaryKey])\n      }\n\n      new_input = uniq(new_input)\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: new_input\n        }\n      })\n    }\n  }\n\n  let checkComponent = {\n    Header: '#',\n    id: 'select',\n    width: '10px',\n    Cell: (row) => {\n      let local_input = useSelector((state) => state.core.input)\n\n      let checked = false\n\n      try {\n        if (props.selectable == 'single') {\n          checked =\n            findArrayName(key_select, local_input) ==\n            row.row.original[primaryKey]\n        } else {\n          checked =\n            findIndex(findArrayName(key_select, local_input), function (o) {\n              return o == row.row.original[primaryKey]\n            }) > -1\n        }\n      } catch (e) {}\n\n      return (\n        <Form.Check\n          inline\n          id={slug(props.name + '_check_' + row.row.original[primaryKey], '_')}\n          name={slug(\n            props.name + '_check_' + row.row.original[primaryKey],\n            '_'\n          )}\n          type={props.selectable == 'single' ? 'radio' : 'checkbox'}\n          value={1}\n          checked={checked}\n          disabled={props.isReadonly}\n          onChange={() => onChecked(row, local_input, checked)}\n        />\n      )\n    }\n  }\n\n  let nodeRef = useRef()\n\n  let isVisible = useIsVisible(nodeRef)\n\n  let col = !isEmpty(props.selectable)\n    ? [checkComponent, ...props.columns]\n    : [...props.columns]\n\n  if (props.action) {\n    let actionComponent = {\n      Header: 'Aksi',\n      id: 'aksi_' + props.name,\n      sortable: false,\n      Cell: (row) => {\n        let param = useSelector((state) => state.core.parameter)\n\n        let isi = row.row.original[primaryKey]\n\n        function openToggle(data) {\n          let current = isEqual(param.dropdown, data) ? null : data\n\n          dispatch({\n            type: 'SET_PARAMETER',\n            payload: {\n              key: 'dropdown',\n              value: current\n            }\n          })\n        }\n\n        return (\n          <DropdownButton\n            key={'dropdown_' + props.name + '_' + isi}\n            size='sm'\n            id={'dropdown_' + props.name + '_' + isi}\n            // className='custom-scroll'\n            isOpen={isEqual(param.dropdown, isi)}\n            toggle={() => openToggle(isi)}\n            drop={'end'}\n            variant='primary'\n            title={''}\n          >\n            {_filter(props.action, function (o) {\n              return isUndefined(o.show) || o.show\n            }).map((value, index) => {\n              let disabled = isBoolean(value.disabled) ? value.disabled : false\n\n              return (\n                <Dropdown.Item\n                  key={'dropdownitem_' + props.name + '_' + isi + '_' + index}\n                  onClick={() => value.onClick(row.row.original)}\n                  disabled={disabled}\n                >\n                  {value.label}\n                </Dropdown.Item>\n              )\n            })}\n          </DropdownButton>\n        )\n      }\n    }\n\n    col = !isEmpty(props.selectable)\n      ? [actionComponent, checkComponent, ...props.columns]\n      : [actionComponent, ...props.columns]\n  }\n\n  useEffect(() => {\n    if (isVisible != visible) {\n      setVisible(isVisible)\n    }\n  })\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('loaded_' + props.name, '_'),\n        value: false\n      }\n    })\n  }, [])\n\n  function onReload() {\n    if (visible) {\n      props.onReload()\n      if (!findArrayName(slug('loaded_' + props.name, '_'), filter)) {\n        dispatch({\n          type: 'SET_FILTER',\n          payload: {\n            key: slug('loaded_' + props.name, '_'),\n            value: true\n          }\n        })\n      }\n    }\n  }\n\n  useDebounce(\n    () => {\n      if (visible) {\n        onReload()\n      }\n    },\n    1000,\n    [visible]\n  )\n\n  useDebounce(onReload, 1000, [\n    findArrayName(slug('keyword_' + props.name, '_'), filter),\n    findArrayName(slug('page_' + props.name, '_'), filter),\n    findArrayName(slug('load_' + props.name, '_'), filter),\n    findArrayName(slug('loaded_' + props.name, '_'), filter)\n  ])\n\n  function syncParameter() {\n    let new_parameter = null\n\n    let new_input = null\n\n    if (props.selectable == 'single') {\n      new_parameter = new_parameter =\n        find(temp, (o) => {\n          return o && parseInt(o[primaryKey]) == new_input\n        }) || {}\n\n      new_input = findArrayName(key_select, input) || null\n    } else {\n      new_parameter = []\n\n      new_input = findArrayName(key_select, input) || []\n\n      for (let i = 0; i < new_input.length; i++) {\n        let find_data =\n          find(temp, (o) => {\n            return o && parseInt(o[primaryKey]) == new_input[i]\n          }) || {}\n\n        if (!isEmpty(find_data)) {\n          new_parameter.push(find_data)\n        }\n      }\n    }\n\n    dispatch({\n      type: 'SET_PARAMETER',\n      payload: {\n        key: key_select,\n        value: new_parameter\n      }\n    })\n  }\n\n  useDebounce(\n    () => {\n      setTemp((val) => uniqBy([...val, ...data], primaryKey))\n      if (findArrayName(key_select, input)) {\n        syncParameter()\n      }\n    },\n    1000,\n    [findArrayName(key_select, input), filter]\n  )\n\n  useDebounce(\n    () => {\n      try {\n        setData(props.data.data || [])\n      } catch (e) {}\n\n      setTemp((val) => uniqBy([...val, ...data], primaryKey))\n\n      try {\n        setMeta(props.data.meta || {})\n      } catch (e) {}\n    },\n    1000,\n    [props.data]\n  )\n\n  let columns = React.useMemo(() => col, [])\n\n  let hapus = false\n\n  try {\n    hapus = user.role == 'admin'\n  } catch (e) {}\n\n  return (\n    <LoadingOverlay isLoading={props.isLoading}>\n      <div style={{ padding: '8px 12px' }} ref={nodeRef}>\n        <div\n          style={{ marginBottom: '12px' }}\n          //  className=\"card-header\"\n        >\n          <Row>\n            <Col xs='12' sm='12' md='8' lg='8'>\n              <div\n              // className={props.export || props.import ? \"col-7\" : \"col-9\"}\n              >\n                {props.renderFilter ? props.renderFilter : null}\n              </div>\n            </Col>\n          </Row>\n\n          <Row style={{ justifyContent: 'flex-end' }}>\n            {/* <Col xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\">\n  <div >\n  {(props.export || props.import) && (\n  <div className=\"col-2\">\n  <InputGroup>\n  {props.export && (\n  <InputGroupAddon>\n  <Button\n  style={{ zIndex: 0 }}\n  className=\"mr-1 btn btn-primary\"\n  onClick={props.exportReload}\n  type=\"button\"\n  disabled={props.disabledButton}\n  >\n  Export\n  </Button>\n  </InputGroupAddon>\n)}\n{props.import && (\n<InputGroupAddon>\n<Button\nstyle={{ zIndex: 0 }}\nclassName=\"mr-1 btn btn-primary\"\nonClick={props.importReload}\ntype=\"button\"\ndisabled={props.disabledButton}\n>\nImport\n</Button>\n</InputGroupAddon>\n)}\n</InputGroup>\n</div>\n)}\n</div>\n</Col> */}\n\n            <Col xs='12' sm='12' md='4' lg='4'>\n              <div>\n                {props.isSearchable && (\n                  <div>\n                    <InputGroup>\n                      <InputGroup.Text style={{ background: 'none' }}>\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n\n                      <Form.Control\n                        id={slug('keyword_' + props.name, '_')}\n                        key={slug('keyword_' + props.name, '_')}\n                        style={{ borderLeft: 'none' }}\n                        className='form-control'\n                        value={findArrayName(\n                          slug('keyword_' + props.name, '_'),\n                          filter\n                        )}\n                        onChange={(e) => {\n                          dispatch({\n                            type: 'SET_MULTI_FILTER',\n                            payload: {\n                              [slug('keyword_' + props.name, '_')]:\n                                e.target.value,\n                              [slug('page_' + props.name, '_')]: 1,\n                              loaded: false\n                            }\n                          })\n                        }}\n                        type='text'\n                        id={slug('keyword_' + key_select)}\n                        name='keyword'\n                        placeholder='Pencarian'\n                      />\n\n                      <Button\n                        style={{ zIndex: 0 }}\n                        variant='primary'\n                        onClick={onReload}\n                        type='button'\n                        disabled={props.isLoading}\n                      >\n                        <FontAwesomeIcon icon={faSync} spin={props.isLoading} />\n                      </Button>\n\n                      {(props.export || props.import) && (\n                        <React.Fragment>\n                          {props.export && (\n                            <Button\n                              id='exportFile'\n                              style={{ zIndex: 0 }}\n                              variant='primary'\n                              className='mr-1'\n                              onClick={props.exportReload}\n                              type='button'\n                              disabled={props.disabledButton}\n                            >\n                              <FontAwesomeIcon icon={faArrowAltCircleDown} />\n\n                              <Tooltip\n                                placement='top'\n                                isOpen={tooltipOpenEx}\n                                autohide={false}\n                                target='exportFile'\n                                toggle={toggleExport}\n                              >\n                                Export\n                              </Tooltip>\n                            </Button>\n                          )}\n                          {props.import && (\n                            <Button\n                              id='importFile'\n                              style={{ zIndex: 0 }}\n                              variant='primary'\n                              className='mr-1'\n                              onClick={props.importReload}\n                              type='button'\n                              disabled={props.disabledButton}\n                            >\n                              <FontAwesomeIcon icon={faArrowAltCircleUp} />\n                              <Tooltip\n                                placement='top'\n                                isOpen={tooltipOpenIm}\n                                autohide={false}\n                                target='importFile'\n                                toggle={toggleImport}\n                              >\n                                Import\n                              </Tooltip>\n                            </Button>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </InputGroup>\n                  </div>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <DataTableContainer\n          name={slug(props.name, '_')}\n          columns={columns}\n          data={data}\n          primaryKey={primaryKey}\n          isColumnsSearchable={props.isColumnsSearchable}\n          fetchData={onReload}\n          loading={props.isLoading}\n          customPageTotal={meta && !isEmpty(meta) ? meta.total : 0}\n          customPageCount={meta && !isEmpty(meta) ? meta.last_page : 1}\n          customPageSize={\n            meta && !isEmpty(meta)\n              ? meta.per_page\n              : findArrayName(slug('load_' + props.name, '_'), filter)\n              ? findArrayName(slug('load_' + props.name, '_'), filter)\n              : 10\n          }\n          customPageIndex={\n            meta && !isEmpty(meta)\n              ? meta.current_page\n              : findArrayName(slug('page_' + props.name, '_'), filter)\n              ? findArrayName(slug('page_' + props.name, '_'), filter)\n              : 1\n          }\n        />\n      </div>\n    </LoadingOverlay>\n  )\n}\n\nexport default DataTable\n","import React from 'react'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport { isArray } from 'lodash'\n\nfunction Field(props) {\n  let message = []\n\n  if (isArray(props.errorMessage)) {\n    for (let i = 0; i < props.errorMessage.length; i++) {\n      let isi = props.errorMessage[i]\n\n      if (isArray(isi)) {\n        for (let y = 0; y < isi.length; y++) {\n          message.push(isi[y])\n        }\n      } else {\n        message.push(isi)\n      }\n    }\n  } else {\n    message.push(props.errorMessage)\n  }\n\n  return (\n    <Form.Group as={Row}>\n      <Form.Label column md={props.labelSize ? props.labelSize : 3}>\n        {props.label ? props.label : 'Label'}\n        {props.isRequired && <span className='text-danger'>&nbsp;*</span>}\n        {props.hint && (\n          <small className='form-text text-muted'>{props.hint}</small>\n        )}\n      </Form.Label>\n      <Col md={props.inputSize ? props.inputSize : 9}>\n        {props.children}\n        <Form.Text className='text-danger'>\n          {message.length > 0 && message.join(', ')}\n        </Form.Text>\n      </Col>\n    </Form.Group>\n  )\n}\n\nexport default Field\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar, faClock } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          borderRight: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faClock} />\n      </InputGroup.Text>\n    </InputGroup>\n  )\n}\n\nclass InputDateTime extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = _.debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = this.props.start_selected\n          ? moment(this.props.start_selected).toDate()\n          : findArrayName('start_' + this.props.name, this.props.input)\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input)\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = this.props.end_selected\n          ? moment(this.props.end_selected).toDate()\n          : findArrayName('end_' + this.props.name, this.props.input)\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input)\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = this.props.selected\n          ? moment(this.props.selected).toDate()\n          : findArrayName(this.props.name, this.props.input)\n          ? moment(findArrayName(this.props.name, this.props.input)).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data).isValid()\n      ? moment(data).format('YYYY-MM-DD HH:mm:ss')\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data).isValid()\n      ? moment(data).format('YYYY-MM-DD HH:mm:ss')\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data).isValid()\n      ? moment(data).format('YYYY-MM-DD HH:mm:ss:ss')\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    const x = moment(date).format('d')\n\n    return x == 5 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          <div className='input-daterange input-group'>\n            {moment(this.state.start_selected).isValid()\n              ? moment(this.state.start_selected).format('DD-MM-YYYY HH:mm:ss')\n              : null}\n\n            <span style={{ background: 'none' }}>&nbsp; s/d &nbsp;</span>\n            {moment(this.state.end_selected).isValid()\n              ? moment(this.state.end_selected).format('DD-MM-YYYY HH:mm:ss')\n              : null}\n          </div>\n        )\n      }\n\n      return (\n        <div\n          className='input-daterange input-group'\n          style={{ background: 'none' }}\n        >\n          <DatePicker\n            minDate={\n              this.props.minDate ? moment(this.props.minDate).toDate() : null\n            }\n            maxDate={\n              this.props.maxDate ? moment(this.props.maxDate).toDate() : null\n            }\n            dateFormat={\n              this.props.dateFormat\n                ? this.props.dateFormat\n                : 'yyyy-MM-dd HH:mm:ss'\n            }\n            placeholder={\n              this.props.placeholder\n                ? this.props.placeholder\n                : 'Tanggal & Waktu'\n            }\n            selected={this.state.start_selected}\n            isClearable={true}\n            customInput={\n              <CustomInput\n                value={this.state.start_selected}\n                name={'start_' + this.props.name}\n              />\n            }\n            onChange={this.handleInputChangeStart}\n            timeInputLabel='Waktu : '\n            showTimeInput\n            selectsStart\n            peekNextMonth\n            withPortal\n            showMonthDropdown\n            showYearDropdown\n            name={'start_' + this.props.name}\n            todayButton={'Hari ini'}\n            dayClassName={this.checkTglMerah}\n            dropdownMode='select'\n            startDate={this.state.start_selected}\n            endDate={this.state.end_selected}\n            shouldCloseOnSelect={false}\n          />\n          <span className='input-group-addon' style={{ background: 'none' }}>\n            &nbsp; - &nbsp;\n          </span>\n          <DatePicker\n            minDate={\n              this.state.start_selected\n                ? this.state.start_selected\n                : this.props.minDate\n                ? moment(this.props.minDate).toDate()\n                : null\n            }\n            maxDate={\n              this.props.maxDate ? moment(this.props.maxDate).toDate() : null\n            }\n            dateFormat={\n              this.props.dateFormat\n                ? this.props.dateFormat\n                : 'yyyy-MM-dd HH:mm:ss'\n            }\n            placeholder={\n              this.props.placeholder\n                ? this.props.placeholder\n                : 'Tanggal & Waktu'\n            }\n            selected={this.state.end_selected}\n            isClearable={true}\n            name={'end_' + this.props.name}\n            selectsEnd\n            timeInputLabel='Waktu : '\n            showTimeInput\n            customInput={\n              <CustomInput\n                value={this.state.end_selected}\n                name={'end_' + this.props.name}\n              />\n            }\n            onChange={this.handleInputChangeEnd}\n            peekNextMonth\n            withPortal\n            showMonthDropdown\n            showYearDropdown\n            dayClassName={this.checkTglMerah}\n            todayButton={'Hari ini'}\n            dropdownMode='select'\n            startDate={this.state.start_selected}\n            endDate={this.state.end_selected}\n            shouldCloseOnSelect={false}\n          />\n        </div>\n      )\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return (\n        <div className='input-daterange input-group'>\n          {moment(this.state.selected).isValid()\n            ? moment(this.state.selected).format('DD-MM-YYYY HH:mm:ss')\n            : null}\n        </div>\n      )\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          this.props.minDate ? moment(this.props.minDate).toDate() : null\n        }\n        maxDate={\n          this.props.maxDate ? moment(this.props.maxDate).toDate() : null\n        }\n        dateFormat={\n          this.props.dateFormat ? this.props.dateFormat : 'yyyy-MM-dd HH:mm:ss'\n        }\n        placeholder={\n          this.props.placeholder ? this.props.placeholder : 'Tanggal & Waktu'\n        }\n        selected={this.state.selected}\n        isClearable={true}\n        id={this.props.name}\n        className='form-control'\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        peekNextMonth\n        timeInputLabel='Waktu : '\n        showTimeInput\n        withPortal\n        showMonthDropdown\n        showYearDropdown\n        todayButton={'Hari ini'}\n        dropdownMode='select'\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputDateTime)\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport TimePicker from 'rc-time-picker'\n\nimport { connect } from 'react-redux'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport './InputTime.module.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faClock } from '@fortawesome/free-regular-svg-icons'\n\nlet formattime = 'HH:mm:ss'\n\nlet now = moment()\n\nfunction IconClock() {\n  return (\n    <FontAwesomeIcon\n      style={{ position: 'absolute', left: 6, top: 6 }}\n      icon={faClock}\n      size='sm'\n    />\n  )\n}\n\nclass InputTime extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = moment()\n\n      let end_selected = moment()\n\n      try {\n        start_selected = this.props.start_selected\n          ? moment(this.props.start_selected, formattime)\n          : findArrayName('start_' + this.props.name, this.props.input)\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formattime\n            )\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = this.props.end_selected\n          ? moment(this.props.end_selected, formattime)\n          : findArrayName('end_' + this.props.name, this.props.input)\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formattime\n            )\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = moment()\n\n      try {\n        selected = this.props.selected\n          ? moment(this.props.selected, formattime)\n          : findArrayName(this.props.name, this.props.input)\n          ? moment(findArrayName(this.props.name, this.props.input), formattime)\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = data ? moment(data).format(formattime) : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = data ? moment(data).format(formattime) : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = data ? moment(data).format(formattime) : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  render() {\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          <div className='input-daterange input-group'>\n            {moment(this.state.start_selected).isValid()\n              ? moment(this.state.start_selected).format(formattime)\n              : ''}\n\n            <span style={{ background: 'none' }}>&nbsp; s/d &nbsp;</span>\n            {moment(this.state.end_selected).isValid()\n              ? moment(this.state.end_selected).format(formattime)\n              : ''}\n          </div>\n        )\n      }\n\n      return (\n        <div className='input-daterange input-group'>\n          <TimePicker\n            value={this.state.start_selected}\n            disabled={this.props.disabled || this.props.isReadonly}\n            // showSecond={false}\n            inputIcon={<IconClock />}\n            format={formattime}\n            onChange={this.handleInputChangeStart}\n          />\n          <span className='input-group-addon' style={{ background: 'none' }}>\n            &nbsp; - &nbsp;\n          </span>\n          <TimePicker\n            value={this.state.end_selected}\n            disabled={this.props.disabled || this.props.isReadonly}\n            inputIcon={<IconClock />}\n            // showSecond={false}\n            format={formattime}\n            onChange={this.handleInputChangeEnd}\n          />\n        </div>\n      )\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return (\n        <div className='input-daterange input-group'>\n          {moment(this.state.selected).isValid()\n            ? moment(this.state.selected).format(formattime)\n            : ''}\n        </div>\n      )\n    }\n\n    return (\n      <TimePicker\n        value={this.state.selected}\n        disabled={this.props.disabled || this.props.isReadonly}\n        // showSecond={false}\n        inputIcon={<IconClock />}\n        format={formattime}\n        onChange={this.handleInputChange}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTime)\n","import React from 'react'\n\nimport { map, uniqBy, findIndex, isEmpty } from 'lodash'\n\nimport './InputTag.module.css'\n\nimport ReactTags from 'react-tag-autocomplete'\n\nimport { connect } from 'react-redux'\n\nimport { slug } from 'tcomponent'\n\nclass InputTag extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tags: [],\n      suggestions: [],\n      separator: '|'\n    }\n\n    this.reactTags = React.createRef()\n  }\n\n  onDelete(i) {\n    let tags = this.state.tags.slice(0)\n\n    tags.splice(i, 1)\n\n    this.setState({ tags })\n\n    if (this.props.name) {\n      this.props.setInput(\n        this.props.name,\n        _.map(tags, 'name').join(this.state.separator)\n      )\n    }\n  }\n\n  onAddition(tag) {\n    let tags = [].concat(this.state.tags, tag)\n\n    this.setState({ tags: _.uniqBy(tags, 'name') })\n\n    if (this.props.name) {\n      this.props.setInput(\n        this.props.name,\n        _.map(tags, 'name').join(this.state.separator)\n      )\n    }\n  }\n\n  onFocus(tag) {}\n\n  onValidate(tag) {\n    return _.findIndex(this.state.tags, ['name', tag.name]) < 0\n  }\n\n  componentDidMount() {\n    let suggestions = []\n\n    let tags = []\n\n    for (let i = 0; i < this.props.options.length; i++) {\n      let isi = this.props.options[i]\n\n      if (!_.isEmpty(isi[this.props.optionValue])) {\n        suggestions.push({ name: isi[this.props.optionValue] })\n      }\n    }\n\n    let value = ''\n\n    try {\n      value = this.props.value\n        ? this.props.value\n        : this.props.input[this.props.name]\n        ? this.props.input[this.props.name]\n        : ''\n    } catch (e) {}\n\n    let v = value ? String(value).split(this.state.separator) : []\n\n    for (let i = 0; i < v.length; i++) {\n      let isi = v[i]\n\n      if (!_.isEmpty(isi)) {\n        tags.push({ name: isi })\n      }\n    }\n\n    this.setState({ suggestions, tags })\n  }\n\n  render() {\n    return (\n      <ReactTags\n        minQueryLength={1}\n        noSuggestionsText={'Tidak ada usulan'}\n        ref={this.reactTags}\n        tags={this.state.tags}\n        id={this.props.name}\n        removeButtonText='Klik untuk menghapus'\n        delimiters={['Enter', 'Tab']}\n        placeholderText={\n          this.props.placeholder\n            ? this.props.placeholder\n            : 'Dipisah dengan spasi / enter'\n        }\n        allowNew={this.props.isCreateable}\n        suggestions={this.state.suggestions}\n        onDelete={this.onDelete.bind(this)}\n        onValidate={this.onValidate.bind(this)}\n        onFocus={this.onFocus.bind(this)}\n        onAddition={this.onAddition.bind(this)}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTag)\n","import React from 'react'\n\nimport {\n  debounce,\n  isEmpty,\n  isArray,\n  isUndefined,\n  isNull,\n  find,\n  isEqual,\n  map\n} from 'lodash'\n\nimport './InputSelect.module.css'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport Select from 'react-select'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport { connect } from 'react-redux'\n\nimport parse from 'html-react-parser'\n\nclass InputSelect extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultValue: null,\n      options: [],\n      show: false\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  labelGenerate = (option) => {\n    if (!isEmpty(option)) {\n      if (isArray(this.props.optionLabel)) {\n        let label = []\n\n        let separator = this.props.separator ? this.props.separator : ' | '\n\n        for (let i = 0; i <= this.props.optionLabel.length - 1; i++) {\n          label.push(option[this.props.optionLabel[i]])\n        }\n\n        return label.join(separator)\n      } else {\n        return option[this.props.optionLabel]\n      }\n    }\n\n    return null\n  }\n\n  onRefresh() {\n    let val = null\n\n    let defaultValue = null\n\n    if (this.props.value) {\n      val = this.props.value\n    } else {\n      val = findArrayName(this.props.name, this.props.input) || []\n\n      if (this.props.isMultiple) {\n        defaultValue = []\n\n        for (let i = 0; i < this.props.options.length; i++) {\n          for (let y = 0; y < val.length; y++) {\n            let opt = this.props.options[i]\n\n            let cur = val[y]\n\n            if (String(opt[this.props.optionValue]) == String(cur)) {\n              defaultValue.push(opt)\n            }\n          }\n        }\n      } else {\n        defaultValue = find(\n          this.props.options,\n          function (o) {\n            return String(o[this.props.optionValue]) == val\n          }.bind(this)\n        )\n      }\n    }\n\n    defaultValue =\n      !isUndefined(defaultValue) && !isNull(defaultValue) ? defaultValue : null\n\n    this.setState({\n      defaultValue\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(\n        findArrayName(this.props.name, prevProps.input),\n        findArrayName(this.props.name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.defaultValue,\n        findArrayName(this.props.name, this.props.input)\n      )\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  onChange = (selectedOption) => {\n    if (this.props.name) {\n      try {\n        if (this.props.isMultiple) {\n          this.props.setInput(\n            this.props.name,\n            map(selectedOption, this.props.optionValue)\n          )\n        } else {\n          this.props.setInput(\n            this.props.name,\n            selectedOption[this.props.optionValue]\n          )\n        }\n      } catch (e) {\n        this.props.setInput(this.props.name, null)\n      }\n    }\n    this.onRefresh()\n  }\n\n  openModal = () => {\n    this.setState({ show: !this.state.show })\n  }\n\n  render() {\n    let options = []\n    try {\n      for (let i = 0; i < this.props.options.length; i++) {\n        let y = this.props.options[i]\n\n        if (this.props.isHtml) {\n          y[this.props.name] = parse(String(y[this.props.name]))\n        }\n        options.push(y)\n      }\n    } catch (e) {}\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return this.labelGenerate(this.state.defaultValue)\n    }\n\n    if (this.props.withModal)\n      return (\n        <React.Fragment>\n          <Row>\n            {!this.props.isReadonly && (\n              <Col lg='1' md='1' sm='3' xs='1'>\n                <Button\n                  type='button'\n                  className='btn btn-icon btn-primary btn-sm'\n                  onClick={this.openModal}\n                >\n                  <FontAwesomeIcon size='sm' icon={faSearch} /> Pilih\n                </Button>\n              </Col>\n            )}\n\n            <Col lg='11' md='11' sm='9' xs='11'>\n              {this.state.defaultValue &&\n              !isUndefined(this.state.defaultValue) &&\n              !isEmpty(this.state.defaultValue)\n                ? this.labelGenerate(this.state.defaultValue)\n                : ''}\n            </Col>\n          </Row>\n          <Modal size='lg' show={this.state.show} onHide={this.openModal}>\n            <ModalHeader closeButton toggle={this.openModal}>\n              <Modal.Title>{this.props.placeholder || 'Pilih'}</Modal.Title>\n            </ModalHeader>\n            <ModalBody>\n              <Select\n                isClearable\n                id={this.props.id ? this.props.id : this.props.name}\n                isSearchable\n                isHtml={this.props.isHtml}\n                isMulti={this.props.isMultiple}\n                placeholder={\n                  this.props.placeholder ? this.props.placeholder : 'Pilih'\n                }\n                getOptionLabel={this.labelGenerate}\n                getOptionValue={(option) => option[this.props.optionValue]}\n                noOptionsMessage={() => 'Data tidak ditemukan'}\n                value={this.state.defaultValue}\n                onChange={this.onChange}\n                options={options}\n                isDisabled={this.props.disabled}\n              />\n            </ModalBody>\n          </Modal>\n        </React.Fragment>\n      )\n\n    return (\n      <Select\n        menuPortalTarget={document.body}\n        menuPosition='fixed'\n        styles={{\n          menuPortal: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit',\n            zIndex: 9999\n          }),\n          menu: (provided) => ({\n            ...provided,\n            fontFamily: 'inherit',\n            fontSize: 'inherit',\n            zIndex: '9999 !important'\n          }),\n          multiValueRemove: (base) => ({\n            ...base,\n            color: '#db2828',\n\n            cursor: 'pointer'\n          }),\n          placeholder: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          multiValue: (base) => ({\n            ...base,\n            background: 'none'\n          }),\n          multiValueLabel: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          option: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          clearIndicator: (base, state) => ({\n            ...base,\n            cursor: 'pointer',\n            color: state.isFocused ? '#db2828' : '#db2828'\n          })\n        }}\n        className='tcomponent-select'\n        // menuPlacement='top'\n        isClearable\n        id={this.props.id ? this.props.id : this.props.name}\n        isSearchable\n        isHtml={this.props.isHtml}\n        isMulti={this.props.isMultiple}\n        placeholder={this.props.placeholder ? this.props.placeholder : 'Pilih'}\n        getOptionLabel={this.labelGenerate}\n        getOptionValue={(option) => option[this.props.optionValue]}\n        noOptionsMessage={() => 'Data tidak ditemukan'}\n        value={this.state.defaultValue}\n        onChange={this.onChange}\n        options={options}\n        isDisabled={this.props.disabled}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSelect)\n","import React, { useState, useEffect } from 'react'\n\nimport { isEmpty, isEqual, filter as _filter } from 'lodash'\n\nimport { connect, useDispatch, useSelector } from 'react-redux'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport axios from 'axios'\n\nimport moment from 'moment'\n\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\n\nimport InputSelect from './InputSelect'\n\nimport InputText from './InputText'\n\nimport Loading from './Loading'\n\nimport {\n  slug,\n  setAuthHeader,\n  defaultFilterData,\n  secureData,\n  fetchErrorDispatch\n} from 'tcomponent'\n\nimport DataTable from './DataTable'\n\nimport InputFile from './InputFile'\n\nfunction InputWorkflow(props) {\n  let [isDelay, setIsDelay] = useState(false)\n\n  let [listLoading, setListLoading] = useState(false)\n\n  let [submitLoading, setSubmitLoading] = useState(false)\n\n  let [responseLoading, setResponseLoading] = useState(false)\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let validation = useSelector((state) => state.core.validation) || []\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let dispatch = useDispatch()\n\n  let [list, setList] = useState({})\n\n  let [activity, setActivity] = useState({\n    activity: {},\n    role: '',\n    response: []\n  })\n\n  let {\n    doAfterSubmit,\n    isLoading,\n    doSubmit,\n    doCancel,\n    isReadonly,\n    relation,\n    id,\n    isDelete\n  } = props\n\n  let [readonly, setReadonly] = useState(isReadonly)\n\n  useEffect(() => {\n    setReadonly(isReadonly)\n  }, [isReadonly])\n\n  function submit(event) {\n    if (!input.response_activity || isEmpty(input.response_activity)) {\n      dispatch({\n        type: 'SET_MESSAGE',\n        payload: 'Respon wajib diisi'\n      })\n    } /* else if(!input.response_comment || isEmpty(input.response_comment)){\n\n      dispatch({\n      type: 'SET_MESSAGE',\n      payload: 'Komentar wajib diisi'\n    });\n\n  } */ else {\n      setSubmitLoading(true)\n\n      setIsDelay(true)\n\n      setTimeout(() => setIsDelay(false), 1000)\n\n      doSubmit && doSubmit()\n    }\n  }\n\n  useEffect(() => {\n    reload_response()\n  }, [])\n\n  useEffect(() => {\n    let allowed_role = []\n\n    try {\n      allowed_role = activity.role.split(',')\n    } catch (e) {}\n\n    let user_role = []\n\n    try {\n      user_role = auth.user.role.split(',')\n    } catch (e) {}\n\n    let is_allowed = false\n\n    let is_admin = false\n\n    for (let i = 0; i < user_role.length; i++) {\n      if (\n        !is_admin &&\n        user_role[i] &&\n        isEqual(String(user_role[i]).trim().toLowerCase(), 'admin')\n      ) {\n        is_admin = true\n\n        is_allowed = true\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: {\n            key: 'response_role',\n            value: String(user_role[i]).trim().toLowerCase()\n          }\n        })\n      }\n    }\n\n    if (!is_admin) {\n      for (let i = 0; i < allowed_role.length; i++) {\n        for (let y = 0; y < user_role.length; y++) {\n          if (\n            allowed_role[i] &&\n            user_role[y] &&\n            String(allowed_role[i]).trim().toLowerCase() ==\n              String(user_role[y]).trim().toLowerCase() &&\n            !is_allowed\n          ) {\n            is_allowed = true\n\n            dispatch({\n              type: 'SET_INPUT',\n              payload: {\n                key: 'response_role',\n                value: String(user_role[y]).trim().toLowerCase()\n              }\n            })\n          }\n        }\n      }\n    }\n\n    let allowed =\n      !isEmpty(activity.activity) && activity.response.length > 0 && is_allowed\n\n    if (allowed && readonly && !isReadonly) {\n      setReadonly(false)\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: 'activity', value: activity.activity.code }\n      })\n    } else {\n      setReadonly(true)\n    }\n  }, [activity])\n\n  useEffect(() => {\n    if (submitLoading && !isEmpty(validation)) {\n      setSubmitLoading(false)\n    }\n  }, [validation])\n\n  useEffect(() => {\n    if (submitLoading && !isLoading && !isDelay) {\n      setSubmitLoading(false)\n\n      if (isEmpty(validation)) {\n        doAfterSubmit && doAfterSubmit()\n      }\n    }\n  }, [isDelay, validation, isLoading])\n\n  function cancel(event) {\n    doCancel && doCancel()\n  }\n\n  function reload_response() {\n    let url = process.env.REACT_APP_API_URL + '/komentar_respon?'\n\n    let options = {\n      data: secureData({\n        relation,\n        id\n      }),\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url\n    }\n\n    setResponseLoading(true)\n\n    axios(options)\n      .then((response) => {\n        let newactivity = response.data.data || {}\n\n        if (isDelete) {\n          newactivity.response = _filter(newactivity.response, function (o) {\n            return o.code == 'HAPUS'\n          })\n        }\n\n        setActivity(newactivity)\n\n        setResponseLoading(false)\n      })\n      .catch((error) => {\n        fetchErrorDispatch(error, dispatch)\n\n        setResponseLoading(false)\n      })\n  }\n\n  function reload() {\n    let url = process.env.REACT_APP_API_URL + '/komentar?'\n\n    let columns = [\n      'user',\n      'role',\n      'activity',\n      'comment',\n      'due_datetime',\n      'start_datetime',\n      'end_datetime'\n    ]\n\n    let f = {}\n\n    try {\n      f = defaultFilterData(filter, columns, slug(props.relation, '_'))\n    } catch (e) {}\n\n    let isi = {\n      relation,\n      id,\n      ...f\n    }\n\n    let options = {\n      data: secureData(isi),\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url\n    }\n\n    setListLoading(true)\n\n    axios(options)\n      .then((response) => {\n        setList(response.data.data)\n\n        setListLoading(false)\n      })\n      .catch((error) => {\n        fetchErrorDispatch(error, dispatch)\n\n        setListLoading(false)\n      })\n  }\n\n  if (responseLoading) return <Loading />\n\n  return (\n    <LoadingOverlay isLoading={isLoading || submitLoading}>\n      <Card>\n        <Card.Body>\n          <Card.Title tag='h5'>\n            {activity.activity.name || 'Alur tidak ditemukan'}\n          </Card.Title>\n          <Card.Text>\n            {!readonly && (\n              <Row>\n                <Col lg='6'>\n                  <Form.Group as={Row}>\n                    <Col lg='3'>\n                      <Form.Label>\n                        Respon <span className='text-danger'>*</span>\n                      </Form.Label>\n                    </Col>\n                    <Col lg='9'>\n                      <InputSelect\n                        name='response_activity'\n                        options={activity.response}\n                        separator=' | '\n                        optionLabel={['name']}\n                        optionValue='code'\n                      />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Col lg='3'>\n                      <Form.Label>Lampiran</Form.Label>\n                    </Col>\n\n                    <Col lg='5'>\n                      <InputFile\n                        value={input.attachment}\n                        name='response_attachment'\n                        id='response_attachment'\n                      />\n                    </Col>\n                  </Form.Group>\n                </Col>\n\n                <Col lg='6'>\n                  <Form.Group as={Row}>\n                    <Col lg='3' style={{ marginBottom: 35 }}>\n                      <Form.Label>Komentar</Form.Label>\n                    </Col>\n\n                    <Col lg='9'>\n                      <InputText\n                        type='textarea'\n                        required\n                        name='response_comment'\n                        id='response_comment'\n                        rows='3'\n                      />\n                    </Col>\n                  </Form.Group>\n                </Col>\n              </Row>\n            )}\n\n            <DataTable\n              data={list}\n              isLoading={listLoading}\n              name={slug(props.relation, '_')}\n              primaryKey='id'\n              isSearchable={true}\n              isColumnsSearchable={true}\n              onReload={reload}\n              columns={[\n                {\n                  Header: 'Nama',\n                  id: 'user',\n                  accessor: (d) => d.user\n                },\n                {\n                  Header: 'Jabatan',\n                  id: 'role',\n                  accessor: (d) => d.role\n                },\n                {\n                  Header: 'Aktifitas',\n                  id: 'activity',\n                  accessor: (d) => d.activity\n                },\n                {\n                  Header: 'Respon',\n                  id: 'response',\n                  accessor: (d) => d.response\n                },\n                {\n                  Header: 'Komentar',\n                  id: 'comment',\n                  accessor: (d) => d.comment\n                },\n                {\n                  Header: 'Tenggat',\n                  id: 'due_datetime',\n                  accessor: (d) =>\n                    d.due_datetime &&\n                    moment(d.due_datetime).format('DD-MM-YYYY HH:mm')\n                },\n                {\n                  Header: 'Mulai',\n                  id: 'start_datetime',\n                  accessor: (d) =>\n                    d.start_datetime &&\n                    moment(d.start_datetime).format('DD-MM-YYYY HH:mm')\n                },\n\n                {\n                  Header: 'Selesai',\n                  id: 'end_datetime',\n                  accessor: (d) =>\n                    d.end_datetime &&\n                    moment(d.end_datetime).format('DD-MM-YYYY HH:mm')\n                },\n                {\n                  Header: 'Lampiran',\n                  id: 'attachment',\n                  accessor: (d) => <InputFile value={d.attachment} isReadonly />\n                }\n              ]}\n            />\n          </Card.Text>\n          <Row className='mt-2'>\n            <Col>\n              <Button\n                type='button'\n                className='btn btn-icon btn-primary btn-sm float-left'\n                onClick={cancel}\n              >\n                Kembali\n              </Button>\n              {!readonly && (\n                <Button\n                  type='button'\n                  className='btn btn-icon btn-primary btn-sm float-right'\n                  onClick={submit}\n                >\n                  Proses\n                </Button>\n              )}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </LoadingOverlay>\n  )\n}\n\nexport default InputWorkflow\n","import React from 'react'\n\nimport InputDate from './InputDate'\n\nfunction InputYear(props){\n  return <InputDate {...props} yearOnly/>\n}\n\nexport default InputYear\n","import React from \"react\";\n\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\nimport {css} from \"@emotion/react\";\n\nconst override = css`\n   position: absolute;\n   top: 50%;\n   left: 50%;\n   margin-top: -25px;\n   margin-left: -50px;\n`;\n\n\nfunction Loading() {\n   return <PuffLoader color={\"#000\"} css={override} size={50} />;\n}\n\nexport default Loading;\n","import React from 'react'\n\nimport { SketchPicker } from 'react-color'\n\nimport { Button } from 'react-bootstrap'\n\nimport { connect } from 'react-redux'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport { debounce } from 'lodash'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  handleInputChange = (data) => {\n    this.props.setInput(this.props.name, data.hex)\n\n    this.props.setParameter('selected_' + this.props.name, data)\n  }\n\n  componentDidMount() {\n    try {\n      this.props.setInput(\n        this.props.name,\n        this.props.parameter['selected_' + this.props.name].hex\n      )\n    } catch (e) {}\n  }\n\n  toggle = () => {\n    this.setState({ open: !this.state.open })\n  }\n\n  render() {\n    let val = ''\n\n    try {\n      val = findArrayName(this.props.name, this.props.input) || ''\n    } catch (e) {}\n\n    const isReadonly = this.props.disabled || this.props.isReadonly\n\n    return (\n      <React.Fragment>\n        {this.state.open ? (\n          <div\n            style={{\n              position: 'fixed',\n              top: '0px',\n              right: '0px',\n              bottom: '0px',\n              left: '0px',\n              zIndex:999\n            }}\n          >\n            <SketchPicker\n              color={val}\n              onChangeComplete={this.handleInputChange}\n            />\n            <Button\n              style={{ marginTop:10, backgroundColor: val, border: 0 }}\n              className='btn btn-primary'\n              onClick={this.toggle}\n              type='button'\n            >\n              Pilih\n            </Button>\n          </div>\n        ) : (\n          <Button\n            style={{ zIndex: 0, backgroundColor: val, border: 0 }}\n            className='btn btn-primary'\n            onClick={this.toggle}\n            type='button'\n          >\n            Pilih\n          </Button>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {},\n  parameter: state.core.parameter || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    }),\n  setParameter: (key, val) =>\n    dispatch({\n      type: 'SET_PARAMETER',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport {\n  findIndex,\n  filter as _filter,\n  isNull,\n  isUndefined,\n  isEqual,\n  map,\n  isObject,\n  uniq,\n  isArray,\n  isEmpty\n} from 'lodash'\n\nimport {\n  slug,\n  findArrayName,\n  secureData,\n  setAuthHeader,\n  useDebounce,\n  defaultFilterData\n} from 'tcomponent'\n\nimport Loading from './Loading'\n\nimport axios from 'axios'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport { useIsVisible } from 'react-is-visible'\n\nimport { Button, Col, Row, Modal, Form, InputGroup } from 'react-bootstrap'\n\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faTimes, faSync, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport DataTableContainer from './DataTableContainer'\n\nfunction ShowData(props) {\n  let [val, setVal] = useState({})\n\n  let [loading, setLoading] = useState(false)\n\n  let {\n    isMultiple,\n    defaultValue,\n    optionLabel,\n    separator,\n    primaryKey,\n    id,\n    param\n  } = props\n\n  let props_name = slug(props.name, '_')\n\n  let key_select = slug('selected_' + props_name, '_')\n\n  let dispatch = useDispatch()\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  function labelGenerate(option) {\n    if (isArray(optionLabel)) {\n      let label = []\n\n      separator = separator || ' | '\n\n      for (let i = 0; i <= optionLabel.length - 1; i++) {\n        if (option[optionLabel[i]] && !isUndefined(option[optionLabel[i]])) {\n          label.push(option[optionLabel[i]])\n        }\n      }\n\n      return label.join(separator)\n    } else {\n      return option[optionLabel] ? option[optionLabel] : ''\n    }\n  }\n\n  useEffect(() => {\n    let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n    let { keyword } = defaultFilterData(filter, [], props_name)\n\n    let data = secureData({\n      pkey: primaryKey,\n      selected: [id],\n      keyword,\n      load: 1,\n      page: 1,\n      ...param\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n    setLoading(true)\n\n    axios(options)\n      .then((resp) => {\n        setVal(resp.data.data.data[0])\n        setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(false)\n      })\n  }, [id])\n\n  function deleteData(d) {\n    setVal(null)\n\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let val = props.optionValue[key]\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: val, value: null }\n        })\n      })\n    }\n\n    if (isMultiple) {\n      let new_input = _filter(findArrayName(props_name, input), function (o) {\n        return o != d\n      })\n\n      let new_input_key = _filter(\n        findArrayName(key_select, input),\n        function (o) {\n          return o != d\n        }\n      )\n\n      let new_parameter = _filter(\n        findArrayName(key_select, parameter),\n        function (o) {\n          return o[primaryKey] != d\n        }\n      )\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: props_name, value: new_input }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: key_select, value: new_input_key }\n      })\n\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value: new_parameter\n        }\n      })\n    } else {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: props_name, value: null }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: key_select, value: null }\n      })\n\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value: {}\n        }\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {val && !isUndefined(val) && !isEmpty(val) ? (\n        [\n          labelGenerate(val),\n          !props.isReadonly && (\n            <Button\n              variant='link'\n              size='sm'\n              onClick={deleteData.bind(null, val[primaryKey])}\n              style={{ borderRadius: 100 }}\n            >\n              <FontAwesomeIcon size='sm' color='#db2828' icon={faTimes} />\n            </Button>\n          )\n        ]\n      ) : loading ? (\n        <Loading />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  )\n}\n\nfunction InputSelectFetch(props) {\n  let { isMultiple, defaultValue, optionLabel, separator } = props\n\n  let dispatch = useDispatch()\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let [visible, setVisible] = useState(false)\n\n  let [show, setShow] = useState(false)\n\n  let [loading, setLoading] = useState(false)\n\n  let [listLoading, setListLoading] = useState(false)\n\n  // let [localValue, setLocalValue] = useState(null)\n\n  let [localParameter, setLocalParameter] = useState({})\n\n  let [value, setValue] = useState(isMultiple ? [] : {})\n\n  let [last, setLast] = useState(0)\n\n  let [open, setOpen] = useState(false)\n\n  let [currentPage, setCurrentPage] = useState(1)\n\n  let props_name = slug(props.name, '_')\n\n  let key_select = slug('selected_' + props_name, '_')\n\n  let [label, setLabel] = useState(\n    props.label ? props.label : findArrayName(props_name, input)\n  )\n\n  let nodeRef = useRef()\n\n  let isVisible = useIsVisible(nodeRef)\n\n  let [data, setData] = useState([])\n\n  let [meta, setMeta] = useState({})\n\n  let primaryKey = props.primaryKey ? props.primaryKey : 'id'\n\n  function labelGenerate(option) {\n    let label = []\n\n    separator = separator || ' | '\n\n    if (isArray(optionLabel)) {\n      for (let i = 0; i <= optionLabel.length - 1; i++) {\n        if (option[optionLabel[i]] && !isUndefined(option[optionLabel[i]])) {\n          label.push(option[optionLabel[i]])\n        }\n      }\n\n      return label.join(separator)\n    } else {\n      return option[optionLabel] ? option[optionLabel] : ''\n    }\n  }\n\n  function onChecked(rowInfo, local_input, exist = false) {\n    let _value = rowInfo.row.original || {}\n\n    if (!isMultiple) {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: _value[primaryKey]\n        }\n      })\n    } else {\n      let new_input = []\n\n      let _local_input = findArrayName(key_select, local_input)\n\n      if (exist) {\n        new_input =\n          _filter(_local_input, (o) => {\n            return o && _value && String(o) != String(_value[primaryKey])\n          }) || []\n      } else {\n        new_input = _local_input || []\n\n        if (!isArray(new_input)) {\n          new_input = []\n        }\n\n        if (_value[primaryKey]) {\n          new_input.push(_value[primaryKey])\n        }\n      }\n\n      new_input = uniq(new_input)\n\n      new_input =\n        _filter(new_input, (o) => {\n          return !isNull(o) && !isUndefined(o)\n        }) || []\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: new_input\n        }\n      })\n    }\n  }\n\n  let checkComponent = {\n    Header: '#',\n    id: props_name + '_check',\n    Cell: (row) => {\n      let local_input = useSelector((state) => state.core.input)\n\n      let checked = false\n\n      let val = findArrayName(key_select, local_input)\n\n      try {\n        if (!isMultiple) {\n          checked = val === row.row.original[primaryKey]\n        } else {\n          checked =\n            findIndex(val, function (o) {\n              return o === row.row.original[primaryKey]\n            }) > -1\n        }\n      } catch (e) {}\n\n      if (!row.row.original[primaryKey]) {\n        return null\n      }\n\n      return (\n        <Form.Check\n          inline\n          id={slug(props_name + '_check_' + row.row.original[primaryKey], '_')}\n          name={slug(\n            props_name + '_check_' + row.row.original[primaryKey],\n            '_'\n          )}\n          style={{ zIndex: 100 }}\n          type={!isMultiple ? 'radio' : 'checkbox'}\n          value={1}\n          checked={checked}\n          disabled={props.isReadonly}\n          onChange={() => onChecked(row, local_input, checked)}\n        />\n      )\n    }\n  }\n\n  let _columns = [\n    {\n      Header: 'Keterangan',\n      id: 'label',\n      accessor: (d) => labelGenerate(d)\n    }\n  ]\n\n  let col = [checkComponent, ..._columns]\n\n  function onReload() {\n    if (open) {\n      loadOptions()\n    }\n  }\n\n  useDebounce(syncParameter, 500, [findArrayName(key_select, input)])\n\n  useDebounce(onReload, 500, [\n    findArrayName('keyword_' + props_name, filter),\n    findArrayName('page_' + props_name, filter),\n    findArrayName('load_' + props_name, filter)\n  ])\n\n  function syncParameter() {\n    if (!isMultiple) {\n      let new_input = findArrayName(key_select, input) || null\n\n      if (new_input) {\n        let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n        let { page, load, keyword } = defaultFilterData(filter, [], props_name)\n\n        let data = secureData({\n          pkey: primaryKey,\n          selected: [new_input],\n          keyword,\n          load: 1,\n          page: 1,\n          ...props.parameter\n        })\n\n        let options = {\n          method: 'POST',\n          headers: setAuthHeader(auth),\n          url,\n          data\n        }\n\n        setLoading(true)\n\n        axios(options)\n          .then((resp) => {\n            let new_parameter = resp.data.data.data[0] || {}\n\n            dispatch({\n              type: 'SET_PARAMETER',\n              payload: {\n                key: key_select,\n                value: new_parameter\n              }\n            })\n\n            handleInputChange(new_parameter)\n\n            setLoading(false)\n          })\n          .catch((error) => {\n            setLoading(false)\n          })\n      } else {\n        dispatch({\n          type: 'SET_PARAMETER',\n          payload: {\n            key: key_select,\n            value: null\n          }\n        })\n      }\n    } else {\n      let new_input =\n        _filter(findArrayName(key_select, input), function (o) {\n          return !isNull(o) && !isUndefined(o)\n        }) || []\n\n      if (new_input.length > 0) {\n        let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n        let { keyword } = defaultFilterData(filter, [], props_name)\n\n        let data = secureData({\n          pkey: primaryKey,\n          selected: new_input,\n          keyword,\n          load: new_input.length,\n          page: 1,\n          ...props.parameter\n        })\n\n        let options = {\n          method: 'POST',\n          headers: setAuthHeader(auth),\n          url,\n          data\n        }\n\n        setLoading(true)\n\n        axios(options)\n          .then((resp) => {\n            dispatch({\n              type: 'SET_PARAMETER',\n              payload: {\n                key: key_select,\n                value: resp.data.data.data\n              }\n            })\n\n            handleInputChange(resp.data.data.data)\n\n            setLoading(false)\n          })\n          .catch((error) => {\n            setLoading(false)\n          })\n      } else {\n        dispatch({\n          type: 'SET_PARAMETER',\n          payload: {\n            key: key_select,\n            value: null\n          }\n        })\n      }\n    }\n  }\n\n  let columns = React.useMemo(() => col, [])\n\n  useEffect(() => {\n    if (!isEqual(props.parameter, localParameter)) {\n      setLocalParameter(props.parameter)\n\n      onReload()\n    }\n\n    if (isVisible != visible) {\n      setVisible(isVisible)\n    }\n  })\n\n  function openModal() {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('page_' + props_name, '_'),\n        value: 1\n      }\n    })\n\n    setOpen((data) => !data)\n\n    loadOptions()\n  }\n\n  function closeModal() {\n    setOpen(false)\n  }\n\n  function reloader() {\n    if (visible) {\n      // setLocalValue(defaultValue)\n\n      let val = null\n\n      try {\n        if (isMultiple) {\n          val = map(defaultValue, 'value')\n\n          val =\n            _filter(val, (o) => {\n              return o\n            }) || []\n        } else {\n          val = defaultValue.value || null\n        }\n      } catch (e) {}\n\n      let _input = findArrayName(key_select, input) || null\n\n      // console.log('reloader',defaultValue,props_name, val, _input)\n\n      if (!isEqual(val, _input)) {\n        if (isNull(val) && !isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: _input\n            }\n          })\n          // console.log(props_name,'COND 1')\n        } else if (!isNull(val) && isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: val\n            }\n          })\n          // console.log(props_name,'COND 2')\n        } else if (!isNull(val) && !isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: val\n            }\n          })\n          // console.log(props_name,'COND 3')\n        } else {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: null\n            }\n          })\n          // console.log(props_name,'COND 4')\n        }\n      }\n    }\n  }\n\n  useEffect(reloader, [visible])\n\n  useEffect(() => {\n    let val = null\n\n    try {\n      if (isMultiple) {\n        val =\n          _filter(map(defaultValue, 'value'), (o) => {\n            return o\n          }) || null\n      } else {\n        val = defaultValue.value || null\n      }\n    } catch (e) {}\n\n    if (val) {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: val\n        }\n      })\n    }\n  }, [])\n\n  function loadOptions() {\n    let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n    let { page, load, keyword, sorted, search } = defaultFilterData(\n      filter,\n      [],\n      props_name\n    )\n\n    let data = secureData({\n      pkey: primaryKey,\n      page,\n      load,\n      keyword,\n      sorted,\n      search,\n      ...props.parameter\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n\n    setListLoading(true)\n\n    return axios(options)\n      .then((resp) => {\n        let responseJSON = resp.data || {}\n\n        if (typeof responseJSON.data.data !== 'undefined') {\n          setLast(responseJSON.data.meta.last_page)\n\n          try {\n            setData(responseJSON.data.data || [])\n          } catch (e) {}\n\n          try {\n            setMeta(responseJSON.data.meta || {})\n          } catch (e) {}\n        } else if (typeof responseJSON.data !== 'undefined') {\n          setLast(responseJSON.meta.last_page)\n\n          try {\n            setData(responseJSON.data || [])\n          } catch (e) {}\n\n          try {\n            setMeta(responseJSON.meta || {})\n          } catch (e) {}\n        }\n\n        setListLoading(false)\n      })\n      .catch((error) => {\n        setListLoading(false)\n      })\n  }\n\n  function generateInputMultiple(event) {\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let k = props.optionValue[key]\n\n        let v = null\n\n        if (event) {\n          try {\n            v = uniq(map(event, key))\n          } catch (e) {}\n        }\n\n        if (!isEqual(findArrayName(k, input), v)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: k, value: v }\n          })\n        }\n      })\n    } else {\n      let k = props_name\n\n      let v = null\n\n      if (event) {\n        v = uniq(map(event, primaryKey))\n      }\n\n      if (!isEqual(findArrayName(k, input), v)) {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: k, value: v }\n        })\n      }\n    }\n  }\n\n  function generateInput(event) {\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let k = props.optionValue[key]\n\n        let v = null\n\n        if (event) {\n          try {\n            v = event[key]\n          } catch (e) {}\n        }\n\n        if (!isEqual(findArrayName(k, input), v)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: k, value: v }\n          })\n        }\n      })\n    } else {\n      let k = props_name\n\n      let v = null\n\n      if (event) {\n        v = event[primaryKey]\n      }\n\n      if (!isEqual(findArrayName(k, input), v)) {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: k, value: v }\n        })\n      }\n    }\n  }\n\n  function handleInputChange(event) {\n    if (isMultiple) {\n      generateInputMultiple(event)\n    } else {\n      generateInput(event)\n    }\n  }\n\n  let isi = []\n\n  let _input = findArrayName(key_select, input)\n\n  try {\n    if (isMultiple) {\n      isi = isArray(_input) ? _input : []\n    } else {\n      isi = _input ? [_input] : []\n    }\n  } catch (e) {}\n\n  let _parameter = findArrayName(key_select, parameter)\n\n  let isi_param = null\n\n  try {\n    if (isMultiple) {\n      isi_param = isArray(_parameter) ? _parameter : []\n    } else {\n      isi_param = isObject(_parameter) ? _parameter : {}\n    }\n  } catch (e) {}\n\n  return (\n    <div ref={nodeRef}>\n      <Row>\n        {!props.isReadonly && (\n          <Col lg='2' md='2' sm='4' xs='12'>\n            <Button\n              size='sm'\n              variant='primary'\n              type='button'\n              className='btn-icon'\n              onClick={openModal}\n            >\n              <FontAwesomeIcon icon={faSearch} />\n            </Button>\n          </Col>\n        )}\n\n        <Col lg='10' md='10' sm='8' xs='12'>\n          {loading ? (\n            <Loading />\n          ) : (\n            isi.map((val, index) => {\n              return (\n                <React.Fragment>\n                  <ShowData\n                    isReadonly={props.isReadonly}\n                    name={props_name}\n                    optionLabel={optionLabel}\n                    separator={separator}\n                    param={props.parameter}\n                    url={props.url}\n                    primaryKey={primaryKey}\n                    isMultiple={isMultiple}\n                    id={val}\n                  />\n                  {props.isReadonly\n                    ? isi.length - 1 == index\n                      ? null\n                      : ', '\n                    : null}\n                </React.Fragment>\n              )\n            })\n          )}\n        </Col>\n      </Row>\n      <Modal size='lg' show={open} onHide={closeModal}>\n        <Modal.Header onHide={closeModal} closeButton>\n          <Modal.Title>{props.placeholder || 'Pilih'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <LoadingOverlay isLoading={listLoading}>\n            <div>\n              <InputGroup style={{ marginBottom: 12 }}>\n                <InputGroup.Text style={{ background: 'none' }}>\n                  <FontAwesomeIcon icon={faSearch} />\n                </InputGroup.Text>\n                <Form.Control\n                  style={{ borderLeft: 'none' }}\n                  className='form-control'\n                  value={findArrayName('keyword_' + props_name, filter)}\n                  onChange={(e) => {\n                    dispatch({\n                      type: 'SET_MULTI_FILTER',\n                      payload: {\n                        ['keyword_' + props_name]: e.target.value,\n                        ['page_' + props_name]: 1\n                      }\n                    })\n                  }}\n                  type='text'\n                  id={'search_' + key_select}\n                  name='search'\n                  placeholder='Pencarian'\n                />\n\n                <Button\n                  style={{ zIndex: 0 }}\n                  variant='primary'\n                  onClick={onReload}\n                  type='button'\n                  disabled={props.isLoading}\n                >\n                  <FontAwesomeIcon icon={faSync} spin={props.isLoading} />\n                </Button>\n              </InputGroup>\n\n              {!listLoading && (\n                <DataTableContainer\n                  name={props_name}\n                  columns={columns}\n                  data={data}\n                  primaryKey={primaryKey}\n                  isColumnsSearchable={true}\n                  fetchData={onReload}\n                  loading={listLoading}\n                  customPageTotal={meta && !isEmpty(meta) ? meta.total : 0}\n                  customPageCount={meta && !isEmpty(meta) ? meta.last_page : 1}\n                  customPageSize={\n                    meta && !isEmpty(meta)\n                      ? meta.per_page\n                      : filter['load_' + props_name]\n                      ? filter['load_' + props_name]\n                      : 5\n                  }\n                  customPageIndex={\n                    meta && !isEmpty(meta)\n                      ? meta.current_page\n                      : filter['page_' + props_name]\n                      ? filter['page_' + props_name]\n                      : 1\n                  }\n                />\n              )}\n            </div>\n          </LoadingOverlay>\n\n          {!listLoading && (\n            <div style={{ marginTop: 12 }}>\n              <p>Dipilih : </p>\n              {loading && <Loading />}\n              <ul>\n                {isMultiple\n                  ? isi_param &&\n                    isi_param.map((val, index) => {\n                      return (\n                        <li>\n                          {!isUndefined(val) && !isEmpty(val)\n                            ? labelGenerate(val)\n                            : ''}\n                        </li>\n                      )\n                    })\n                  : isi_param && (\n                      <li>\n                        {!isUndefined(isi_param) && !isEmpty(isi_param)\n                          ? labelGenerate(isi_param)\n                          : ''}\n                      </li>\n                    )}\n              </ul>\n            </div>\n          )}\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\n\nexport default InputSelectFetch\n","import React, { useState, useEffect } from 'react'\nimport ApexCharts from 'react-apexcharts'\n\nimport { slug } from 'tcomponent'\n\nimport {\n  isUndefined,\n  isArray,\n  isPlainObject,\n  isString,\n  isNumber,\n  isBoolean,\n  isNull,\n  isEmpty\n} from 'lodash'\n\nfunction Chart(props) {\n  let options = { chart: { width: 'auto' } }\n\n  let series = props.series || []\n\n  if (\n    (isUndefined(props.series) ||\n      isNull(props.series) ||\n      !isArray(props.series)) &&\n    isArray(props.options) &&\n    !isUndefined(props.optionValue) &&\n    !isNull(props.optionValue)\n  ) {\n    for (var i = 0; i < props.options.length; i++) {\n      if (isString(props.optionValue)) {\n        series.push(props.options[i][props.optionValue])\n      } else if (isPlainObject(props.optionValue)) {\n        let isi = {}\n        Object.keys(props.optionValue).map((key, index) => {\n          isi[props.optionValue[key]] = props.options[i][key]\n        })\n        series.push(isi)\n      } else if (isArray(props.optionValue)) {\n        let isi = []\n        for (var i2 = 0; i2 < props.optionValue.length; i2++) {\n          isi.push(props.options[i][props.optionValue[i2]])\n        }\n        series.push(isi)\n      }\n    }\n  }\n\n  if (\n    !isUndefined(props.dataLabels) &&\n    !isNull(props.dataLabels) &&\n    isPlainObject(props.dataLabels)\n  ) {\n    options.dataLabels = props.dataLabels\n  }\n\n  let separator = ' '\n\n  if (\n    !isUndefined(props.separator) &&\n    !isNull(props.separator) &&\n    isPlainObject(props.separator)\n  ) {\n    separator = props.separator\n  }\n\n  if (\n    !isUndefined(props.labels) &&\n    !isNull(props.labels) &&\n    isArray(props.labels)\n  ) {\n    options.labels = props.labels\n  } else if (\n    isArray(props.options) &&\n    !isUndefined(props.optionLabel) &&\n    !isNull(props.optionLabel)\n  ) {\n    options.labels = []\n\n    for (var i = 0; i < props.options.length; i++) {\n      if (isString(props.optionLabel)) {\n        options.labels.push(props.options[i][props.optionLabel])\n      } else if (isArray(props.optionLabel)) {\n        let isi = []\n        for (var i2 = 0; i2 < props.optionLabel.length; i2++) {\n          isi.push(props.options[i][props.optionLabel[i2]])\n        }\n        options.labels.push(isi.join(separator))\n      }\n    }\n  }\n\n  if (\n    !isUndefined(props.colors) &&\n    !isNull(props.colors) &&\n    isArray(props.colors)\n  ) {\n    options.colors = props.colors\n  } else if (\n    isArray(props.options) &&\n    !isUndefined(props.optionColor) &&\n    !isNull(props.optionColor) &&\n    isString(props.optionColor)\n  ) {\n    options.colors = []\n\n    for (var i = 0; i < props.options.length; i++) {\n      options.colors.push(props.options[i][props.optionColor])\n    }\n  }\n\n  if (\n    !isUndefined(props.locales) &&\n    !isNull(props.locales) &&\n    isArray(props.locales)\n  ) {\n    options.chart.locales = props.locales\n  }\n\n  if (!isUndefined(props.type) && !isNull(props.type) && isString(props.type)) {\n    options.chart.type = props.type\n  }\n\n  if (\n    !isUndefined(props.animations) &&\n    !isNull(props.animations) &&\n    isPlainObject(props.animations)\n  ) {\n    options.chart.animations = props.animations\n  }\n\n  if (\n    !isUndefined(props.background) &&\n    !isNull(props.background) &&\n    isString(props.background)\n  ) {\n    options.chart.background = props.background\n  }\n\n  if (\n    !isUndefined(props.brush) &&\n    !isNull(props.brush) &&\n    isPlainObject(props.brush)\n  ) {\n    options.chart.brush = props.brush\n  }\n\n  if (\n    !isUndefined(props.defaultLocale) &&\n    !isNull(props.defaultLocale) &&\n    isString(props.defaultLocale)\n  ) {\n    options.chart.defaultLocale = props.defaultLocale\n  }\n\n  if (\n    !isUndefined(props.dropShadow) &&\n    !isNull(props.dropShadow) &&\n    isPlainObject(props.defaultLocale)\n  ) {\n    options.chart.dropShadow = props.dropShadow\n  }\n\n  if (\n    !isUndefined(props.fontFamily) &&\n    !isNull(props.fontFamily) &&\n    isString(props.fontFamily)\n  ) {\n    options.chart.fontFamily = props.fontFamily\n  }\n\n  if (\n    !isUndefined(props.foreColor) &&\n    !isNull(props.foreColor) &&\n    isString(props.foreColor)\n  ) {\n    options.chart.foreColor = props.foreColor\n  }\n\n  if (\n    !isUndefined(props.group) &&\n    !isNull(props.group) &&\n    isString(props.group)\n  ) {\n    options.chart.group = props.group\n  }\n\n  if (\n    !isUndefined(props.events) &&\n    !isNull(props.events) &&\n    isPlainObject(props.events)\n  ) {\n    options.chart.events = props.events\n  }\n\n  if (\n    !isUndefined(props.height) &&\n    !isNull(props.height) &&\n    (isString(props.height) || isNumber(props.height))\n  ) {\n    options.chart.height = props.height\n  }\n\n  if (!isUndefined(props.id) && !isNull(props.id) && isString(props.id)) {\n    options.chart.id = slug(props.id)\n  }\n\n  if (!isUndefined(props.name) && !isNull(props.name) && isString(props.name)) {\n    options.chart.id = slug(props.name)\n  }\n\n  if (\n    !isUndefined(props.offsetX) &&\n    !isNull(props.offsetX) &&\n    isNumber(props.offsetX)\n  ) {\n    options.chart.offsetX = props.offsetX\n  }\n\n  if (\n    !isUndefined(props.offsetY) &&\n    !isNull(props.offsetY) &&\n    isNumber(props.offsetY)\n  ) {\n    options.chart.offsetY = props.offsetY\n  }\n\n  if (\n    !isUndefined(props.parentHeightOffset) &&\n    !isNull(props.parentHeightOffset) &&\n    isNumber(props.parentHeightOffset)\n  ) {\n    options.chart.parentHeightOffset = props.parentHeightOffset\n  }\n\n  if (\n    !isUndefined(props.redrawOnParentResize) &&\n    !isNull(props.redrawOnParentResize) &&\n    isBoolean(props.redrawOnParentResize)\n  ) {\n    options.chart.redrawOnParentResize = props.redrawOnParentResize\n  }\n\n  if (\n    !isUndefined(props.redrawOnWindowResize) &&\n    !isNull(props.redrawOnWindowResize) &&\n    isBoolean(props.redrawOnWindowResize)\n  ) {\n    options.chart.redrawOnWindowResize = props.redrawOnWindowResize\n  }\n\n  if (\n    !isUndefined(props.selection) &&\n    !isNull(props.selection) &&\n    isPlainObject(props.selection)\n  ) {\n    options.chart.selection = props.selection\n  }\n\n  if (\n    !isUndefined(props.sparkline) &&\n    !isNull(props.sparkline) &&\n    isBoolean(props.sparkline)\n  ) {\n    options.chart.sparkline = props.sparkline\n  }\n\n  if (\n    !isUndefined(props.stacked) &&\n    !isNull(props.stacked) &&\n    isBoolean(props.stacked)\n  ) {\n    options.chart.stacked = props.stacked\n  }\n\n  if (\n    !isUndefined(props.stackType) &&\n    !isNull(props.stackType) &&\n    isString(props.stackType)\n  ) {\n    options.chart.stackType = props.stackType\n  }\n\n  if (\n    !isUndefined(props.toolbar) &&\n    !isNull(props.toolbar) &&\n    isPlainObject(props.toolbar)\n  ) {\n    options.chart.toolbar = props.toolbar\n  }\n\n  if (\n    !isUndefined(props.width) &&\n    !isNull(props.width) &&\n    (isString(props.width) || isNumber(props.width))\n  ) {\n    options.chart.width = props.width\n  }\n\n  if (\n    !isUndefined(props.zoom) &&\n    !isNull(props.zoom) &&\n    isPlainObject(props.zoom)\n  ) {\n    options.chart.zoom = props.zoom\n  }\n\n  if (\n    !isUndefined(props.fill) &&\n    !isNull(props.fill) &&\n    isPlainObject(props.fill)\n  ) {\n    options.fill = props.fill\n  }\n\n  if (\n    !isUndefined(props.forecastDataPoints) &&\n    !isNull(props.forecastDataPoints) &&\n    isPlainObject(props.forecastDataPoints)\n  ) {\n    options.forecastDataPoints = props.forecastDataPoints\n  }\n\n  if (\n    !isUndefined(props.grid) &&\n    !isNull(props.grid) &&\n    isPlainObject(props.grid)\n  ) {\n    options.grid = props.grid\n  }\n\n  if (\n    !isUndefined(props.legend) &&\n    !isNull(props.legend) &&\n    isPlainObject(props.legend)\n  ) {\n    options.legend = props.legend\n  }\n\n  if (\n    !isUndefined(props.markers) &&\n    !isNull(props.markers) &&\n    isPlainObject(props.markers)\n  ) {\n    options.markers = props.markers\n  }\n\n  if (\n    !isUndefined(props.noData) &&\n    !isNull(props.noData) &&\n    isPlainObject(props.noData)\n  ) {\n    options.noData = props.noData\n  }\n\n  if (\n    !isUndefined(props.states) &&\n    !isNull(props.states) &&\n    isPlainObject(props.states)\n  ) {\n    options.states = props.states\n  }\n\n  if (\n    !isUndefined(props.stroke) &&\n    !isNull(props.stroke) &&\n    isPlainObject(props.stroke)\n  ) {\n    options.stroke = props.stroke\n  }\n\n  if (\n    !isUndefined(props.subtitle) &&\n    !isNull(props.subtitle) &&\n    isPlainObject(props.subtitle)\n  ) {\n    options.subtitle = props.subtitle\n  }\n\n  if (\n    !isUndefined(props.theme) &&\n    !isNull(props.theme) &&\n    isPlainObject(props.theme)\n  ) {\n    options.theme = props.theme\n  }\n\n  if (\n    !isUndefined(props.title) &&\n    !isNull(props.title) &&\n    isPlainObject(props.title)\n  ) {\n    options.title = props.title\n  }\n\n  if (\n    !isUndefined(props.tooltip) &&\n    !isNull(props.tooltip) &&\n    isPlainObject(props.tooltip)\n  ) {\n    options.tooltip = props.tooltip\n  }\n\n  if (\n    !isUndefined(props.xaxis) &&\n    !isNull(props.xaxis) &&\n    isPlainObject(props.xaxis)\n  ) {\n    options.xaxis = props.xaxis\n  }\n\n  if (\n    !isUndefined(props.yaxis) &&\n    !isNull(props.yaxis) &&\n    isPlainObject(props.yaxis)\n  ) {\n    options.yaxis = props.yaxis\n  }\n\n  if (\n    !isUndefined(props.plotOptions) &&\n    !isNull(props.plotOptions) &&\n    isPlainObject(props.plotOptions)\n  ) {\n    options.plotOptions[options.chart.type] = props.plotOptions\n  }\n\n  console.log('chart', props, options, series)\n\n  return (\n    <ApexCharts options={options} series={series} type={options.chart.type} />\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartLine(props) {\n  return <Chart {...props} type='line' />\n}\n\nexport default ChartLine\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBar(props) {\n  return <Chart {...props} type='bar' />\n}\n\nexport default ChartBar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartArea(props) {\n  return <Chart {...props} type='area' />\n}\n\nexport default ChartArea\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartCandleStick(props) {\n  return <Chart {...props} type='candlestick' />\n}\n\nexport default ChartCandleStick\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartHeatMap(props) {\n  return <Chart {...props} type='heatmap' />\n}\n\nexport default ChartHeatMap\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartTreeMap(props) {\n  return <Chart {...props} type='treemap' />\n}\n\nexport default ChartTreeMap\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartPie(props) {\n  return <Chart {...props} type='line' />\n}\n\nexport default ChartPie\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartDonut(props) {\n  return <Chart {...props} type='donut' />\n}\n\nexport default ChartDonut\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadar(props) {\n  return <Chart {...props} type='radar' />\n}\n\nexport default ChartRadar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadar(props) {\n  return <Chart {...props} type='rangeBar' />\n}\n\nexport default ChartRadar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBubble(props) {\n  return <Chart {...props} type='bubble' />\n}\n\nexport default ChartBubble\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartPolarArea(props) {\n  return <Chart {...props} type='polarArea' />\n}\n\nexport default ChartPolarArea\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadial(props) {\n  return <Chart {...props} type='radialBar' />\n}\n\nexport default ChartRadial\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartScatter(props) {\n  return <Chart {...props} type='scatter' />\n}\n\nexport default ChartScatter\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBoxPlot(props) {\n  return <Chart {...props} type='boxPlot' />\n}\n\nexport default ChartBoxPlot\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartHistogram(props) {\n  return <Chart {...props} type='histogram' />\n}\n\nexport default ChartHistogram\n"],"names":["WirisEquationEditor","React","Component","constructor","props","super","this","handleEquationChange","event","onEquationInput","mathFormat","window","WirisPlugin","Parser","endParse","target","value","equationEditorRef","createRef","toolbarRef","componentDidMount","genericIntegrationProperties","current","toolbar","genericIntegrationInstance","GenericIntegration","init","listeners","fire","e","render","ref","ContentEditable","suppressContentEditableWarning","className","innerRef","onChange","html","connect","state","input","core","dispatch","setInput","key","val","type","payload","slug","String","handleInputChange","preventDefault","data","replace","maxlength","substring","setState","props_name","default_placeholder","placeholder","options_cleave","toLowerCase","delimiter","blocks","numericOnly","delimiters","name","config","readonly","toolbarButtonSize","editorRef","componentDidUpdate","prevProps","prevState","isEqual","findArrayName","disableCopy","disablePaste","disableSelectAll","comb","push","length","Mousetrap","bind","input_name","disabled","isReadonly","isEmpty","parse","Cleave","id","options","rows","PhoneInput","international","defaultCountry","JoditEditor","tabIndex","defaultType","isUndefined","Form","Control","Loading","PuffLoader","color","size","moment","momentImported","Preview","file","style","maxWidth","src","process","env","REACT_APP_API_URL","Player","autoPlay","width","height","InputFile","acceptedFiles","accept","useSelector","parameter","setType","useState","setValue","loading","setLoading","auth","useDispatch","fetchInfo","token","isString","url","secureData","token_file","method","headers","setAuthHeader","axios","then","response","success","open","setOpen","catch","error","cekValidFile","h","setValid","u","filter","setIsinya","d","split","toggle","[object Object]","openFile","useEffect","x","cek","t","isArray","i","reloadType","terisi","isMultiple","display","label","files","dataTransfer","reader","FileReader","onload","base64","_data","FormData","_name","append","lastModifiedDate","format","post","_boundary","message","fileUpload","readAsDataURL","createfile","onInput","onClick","setTimeout","DropzoneComponent","showFiletypeIcon","postUrl","uploadMultiple","maxFiles","eventHandlers","drop","complete","isi","JSON","xhr","o","join","removedfile","djsConfig","params","user","addRemoveLinks","autoProcessQueue","map","index","preview","Fragment","ButtonGroup","Button","variant","FontAwesomeIcon","icon","faSearch","vendor","location","href","faDownload","onDelete","faTimes","Modal","show","onHide","Header","closeButton","Title","Body","labelGenerate","option","optionLabel","selectedOption","current_val","defaultValue","removed","new_val","optionValue","onRefresh","debounce","isNull","y","opt","cur","find","isChecked","includes","Check","inline","checked","isHtml","CustomInput","InputGroup","Text","background","faCalendar","borderLeft","fontFamily","fontSize","isValid","handleInputChangeStart","handleInputChangeEnd","checkTglMerah","date","undefined","selected","start_selected","end_selected","isRange","toDate","dateFormat","yearOnly","DatePicker","minDate","maxDate","isClearable","customInput","selectsStart","peekNextMonth","withPortal","showMonthDropdown","showYearDropdown","showYearPicker","todayButton","dayClassName","dropdownMode","readOnly","startDate","endDate","shouldCloseOnSelect","selectsEnd","Number","validate_min_max","min","minValue","max","maxValue","rawValue","isNaN","parseFloat","setRawValue","parseInt","lastInputValue","numeral","enableNegative","snapshot","numeralPositiveOnly","numeralThousandsGroupStyle","onInit","cleave","numberFormat","InputRange","StyledLoader","styled","LoadingOverlay","MyLoadingOvelay","fadeSpeed","active","isLoading","spinner","children","Filter","column","margin","canFilter","DefaultColumnFilter","filterValue","setData","DataTableContainer","columns","renderRowSubComponent","customPageIndex","customPageSize","customPageCount","isColumnsSearchable","primaryKey","customPageTotal","sortBy","k","urut","desc","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","gotoPage","setPageSize","pageIndex","pageSize","useTable","defaultColumn","initialState","manualPagination","pageCount","manualSortBy","defaultCanSort","isMultiSortEvent","useFilters","useSortBy","useExpanded","usePagination","useDebounce","sort","mykey","mysort","isSorted","isSortedDesc","localLoading","setLocalLoading","curpage","setCurPage","onChangeInSelect","onChangeInInput","customgotoPage","customcanNextPage","customcanPreviousPage","customnextPage","custompreviousPage","overflow","border","faAngleDoubleLeft","faAngleLeft","faFile","borderRight","minWidth","faBars","faAngleRight","faAngleDoubleRight","Table","zIndex","headerGroup","getHeaderGroupProps","padding","borderTop","getHeaderProps","getSortByToggleProps","fontWeight","generateSortingIndicator","row","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","textAlign","DataTable","visible","setVisible","temp","setTemp","meta","setMeta","tooltipOpenEx","setTooltipOpenEx","tooltipOpenIm","setTooltipOpenIm","key_select","checkComponent","Cell","local_input","selectable","original","findIndex","rowInfo","exist","new_input","_filter","uniq","onChecked","nodeRef","useRef","isVisible","useIsVisible","col","action","actionComponent","sortable","param","DropdownButton","isOpen","dropdown","openToggle","title","isBoolean","Dropdown","Item","onReload","uniqBy","new_parameter","find_data","syncParameter","useMemo","hapus","role","marginBottom","Row","Col","xs","sm","md","lg","renderFilter","justifyContent","isSearchable","loaded","faSync","spin","export","import","exportReload","disabledButton","faArrowAltCircleDown","Tooltip","placement","autohide","importReload","faArrowAltCircleUp","fetchData","total","last_page","per_page","current_page","Field","errorMessage","Group","as","Label","labelSize","isRequired","hint","inputSize","faClock","_","timeInputLabel","showTimeInput","IconClock","position","left","top","TimePicker","inputIcon","tags","suggestions","separator","reactTags","slice","splice","onAddition","tag","concat","onFocus","onValidate","v","ReactTags","minQueryLength","noSuggestionsText","removeButtonText","placeholderText","allowNew","isCreateable","openModal","withModal","ModalHeader","ModalBody","Select","isMulti","getOptionLabel","getOptionValue","noOptionsMessage","isDisabled","menuPortalTarget","document","body","menuPosition","styles","menuPortal","base","menu","provided","multiValueRemove","cursor","multiValue","multiValueLabel","clearIndicator","InputWorkflow","isDelay","setIsDelay","listLoading","setListLoading","submitLoading","setSubmitLoading","responseLoading","setResponseLoading","validation","list","setList","activity","setActivity","doAfterSubmit","doSubmit","doCancel","relation","isDelete","setReadonly","newactivity","code","fetchErrorDispatch","reload_response","allowed_role","user_role","is_allowed","is_admin","trim","Card","InputSelect","attachment","InputText","required","f","defaultFilterData","accessor","comment","due_datetime","start_datetime","end_datetime","response_activity","InputYear","InputDate","override","css","setParameter","hex","right","bottom","SketchPicker","onChangeComplete","marginTop","backgroundColor","ShowData","setVal","keyword","pkey","load","resp","isObject","Object","keys","new_input_key","borderRadius","InputSelectFetch","setShow","localParameter","setLocalParameter","last","setLast","currentPage","setCurrentPage","setLabel","_value","_local_input","loadOptions","closeModal","sorted","search","responseJSON","generateInputMultiple","generateInput","_input","_parameter","isi_param","Chart","chart","series","isPlainObject","i2","dataLabels","labels","colors","optionColor","locales","animations","brush","defaultLocale","dropShadow","foreColor","group","events","isNumber","offsetX","offsetY","parentHeightOffset","redrawOnParentResize","redrawOnWindowResize","selection","sparkline","stacked","stackType","zoom","fill","forecastDataPoints","grid","legend","markers","noData","states","stroke","subtitle","theme","tooltip","xaxis","yaxis","plotOptions","console","log","ApexCharts","ChartLine","ChartBar","ChartArea","ChartCandleStick","ChartHeatMap","ChartTreeMap","ChartPie","ChartDonut","ChartRadar","ChartBubble","ChartPolarArea","ChartRadial","ChartScatter","ChartBoxPlot","ChartHistogram"],"mappings":"+0EA4BA,MAAMA,WAA4BC,EAAMC,UACtCC,YAAYC,GACVC,MAAMD,GADWE,KA0BnBC,qBAAwBC,IACtB,IAAIC,gBAAEA,GAAoBH,KAAKF,MAC3BM,EAAaC,OAAOC,YAAYC,OAAOC,SAASN,EAAMO,OAAOC,OAEjEP,EADoBD,EAAMO,OAAOC,MACFN,IA3B/BJ,KAAKW,kBAAoBhB,EAAMiB,YAC/BZ,KAAKa,WAAalB,EAAMiB,YAG1BE,oBAGE,IACE,IAAIC,EAA+B,GAEnCA,EAA6BN,OAAST,KAAKW,kBAAkBK,QAE7DD,EAA6BE,QAAUjB,KAAKa,WAAWG,QAEvD,IAAIE,EACF,IAAIb,OAAOC,YAAYa,mBAAmBJ,GAE5CG,EAA2BE,OAE3BF,EAA2BG,UAAUC,KAAK,gBAAiB,IAC3D,MAAOC,KAUXC,SACE,IAAId,MAAEA,GAAUV,KAAKF,OAAS,GAC9B,OACEH,2BACEA,uBAAK8B,IAAKzB,KAAKa,aACflB,gBAAC+B,GACCC,gCAAgC,EAChCC,UAAU,oBACVC,SAAU7B,KAAKW,kBACfmB,SAAU9B,KAAKC,qBACf8B,KAAMrB,GAAS,OAuQzB,OAAesB,EAfUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,KAGDE,KAC1BC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,OAKAP,CAhQf,cAAwBrC,EAAMC,UAC5BC,YAAYC,GACVC,MAAMD,GADWE,KA4HnB4C,kBAAqB1C,IACnBA,EAAM2C,iBAEN,IAAIC,EAAO5C,EAAMO,OAAOC,MAAQiC,OAAOzC,EAAMO,OAAOC,OAAS,GAGxC,OAAnBV,KAAKiC,MAAMO,MACQ,OAAnBxC,KAAKiC,MAAMO,MACQ,QAAnBxC,KAAKiC,MAAMO,MACQ,YAAnBxC,KAAKiC,MAAMO,OAEXM,EAAOA,EAAKC,QAAQ,MAAO,KAGzB/C,KAAKF,MAAMkD,YACbF,EAAOA,EAAKG,UAAU,EAAGjD,KAAKF,MAAMkD,YAGtChD,KAAKkD,SAAS,CAAExC,MAAOoC,IAEvB9C,KAAKF,MAAMuC,SAASrC,KAAKiC,MAAMkB,WAAYL,SAG7ChB,SAAYgB,IACV9C,KAAKkD,SAAS,CAAExC,MAAOoC,IAEvB9C,KAAKF,MAAMuC,SAASrC,KAAKiC,MAAMkB,WAAYL,IAnJ3C,IAAIM,EAAsBpD,KAAKF,MAAMuD,YAIjCC,EAAiB,GAEjBd,EAAOxC,KAAKF,MAAM0C,KAAOG,OAAO3C,KAAKF,MAAM0C,MAAQ,GAE7B,OAAtBA,EAAKe,eACPD,EAAiB,CACfE,UAAW,IACXC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACrBC,aAAa,GAEfN,EAAsBpD,KAAKF,MAAMuD,aAAe,4BACjB,OAAtBb,EAAKe,eACdD,EAAiB,CACfE,UAAW,IACXC,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpBL,EAAsBpD,KAAKF,MAAMuD,aAAe,0BACjB,QAAtBb,EAAKe,eACdD,EAAiB,CACfK,WAAY,CAAC,IAAK,IAAK,IAAK,IAAK,KACjCF,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACxBC,aAAa,GAEfN,EAAsBpD,KAAKF,MAAMuD,aAAe,2BACjB,YAAtBb,EAAKe,eACdD,EAAiB,CACfG,OAAQ,CAAC,GACTD,UAAW,IACXE,aAAa,GAEfN,EAAsBpD,KAAKF,MAAMuD,aAAe,YACjB,SAAtBb,EAAKe,gBACdH,EAAsBpD,KAAKF,MAAMuD,aAAe,WAGlDrD,KAAKiC,MAAQ,CACXO,KAAAA,EACAa,YAAaD,EACbE,eAAAA,EACA5C,MAAOV,KAAKF,MAAMY,MAAQiC,OAAO3C,KAAKF,MAAMY,OAAS,GACrDyC,WAAYnD,KAAKF,MAAM8D,KAAOlB,EAAKC,OAAO3C,KAAKF,MAAM8D,MAAO,KAAO,GACnEC,OAAQ,CACNC,UAAU,EACVC,kBAAmB,UAIvB/D,KAAKa,WAAalB,EAAMiB,YAExBZ,KAAKgE,UAAYrE,EAAMiB,YAGzBqD,mBAAmBC,EAAWC,GAC5B,IAEKC,EACCC,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,OAChDmC,EAAcrE,KAAKiC,MAAMkB,WAAYe,EAAUhC,SAEhDkC,EACCpE,KAAKiC,MAAMvB,MACX2D,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,SAKlDlC,KAAKkD,SAAS,CAAExC,MAFJV,KAAKF,MAAMoC,MAAMlC,KAAKiC,MAAMkB,aAAe,KAIzD,MAAO5B,IAELvB,KAAKF,MAAMY,OAASwD,EAAUxD,OAASV,KAAKF,MAAMY,OAGpDV,KAAKkD,SAAS,CAAExC,MAFJV,KAAKF,MAAMY,OAAS,KAMpCI,oBACE,GACEd,KAAKF,MAAMwE,aACXtE,KAAKF,MAAMyE,cACXvE,KAAKF,MAAM0E,iBACX,CACA,IAAIC,EAAO,GAEPzE,KAAKF,MAAMwE,cACbG,EAAKC,KAAK,aACVD,EAAKC,KAAK,WAGR1E,KAAKF,MAAMyE,eACbE,EAAKC,KAAK,aACVD,EAAKC,KAAK,WAGR1E,KAAKF,MAAM0E,mBACbC,EAAKC,KAAK,aACVD,EAAKC,KAAK,WAGRD,EAAKE,OAAS,GAChBC,EAAUC,KAAKJ,EAAM,WACnB,WAKN,IAAI/D,EAAQ,GAEZ,IACE,IAAIoE,EAAaT,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,OACjExB,EAAQV,KAAKF,MAAMY,MAAQV,KAAKF,MAAMY,MAAQoE,EAC9C,MAAOvD,IAETvB,KAAKkD,SAAS,CAAExC,MAAAA,IAgClBc,SACE,IAAKxB,KAAKiC,MAAMkB,WAAY,MAAO,mBAEnC,GAAInD,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WACpC,OAAQC,EAAQjF,KAAKiC,MAAMvB,QAAUwE,EAAMvC,OAAO3C,KAAKiC,MAAMvB,WAE1C,OAAnBV,KAAKiC,MAAMO,MACQ,OAAnBxC,KAAKiC,MAAMO,MACQ,QAAnBxC,KAAKiC,MAAMO,MACQ,YAAnBxC,KAAKiC,MAAMO,KAEX,OACE7C,gBAACwF,GACC9B,YAAarD,KAAKiC,MAAMoB,YACxB+B,GAAIpF,KAAKF,MAAMsF,GACfxB,KAAM5D,KAAKiC,MAAMkB,WACjBzC,MAAOV,KAAKiC,MAAMvB,MAClBoB,SAAU9B,KAAK4C,kBACfyC,QAASrF,KAAKiC,MAAMqB,eACpB1B,UAAU,oBAGc,YAAnB5B,KAAKiC,MAAMO,KACpB,OACE7C,4BACEyF,GAAIpF,KAAKF,MAAMsF,GACfE,KAAMtF,KAAKF,MAAMwF,MAAQ,EACzB1D,UAAU,mCACVE,SAAU9B,KAAK4C,kBACfgB,KAAM5D,KAAKiC,MAAMkB,WACjBzC,MAAOV,KAAKiC,MAAMvB,MAClB2C,YAAarD,KAAKF,MAAMuD,iBAGA,SAAnBrD,KAAKiC,MAAMO,KACpB,OACE7C,gBAAC4F,GACCC,iBACAC,eAAe,KACf/E,MAAOV,KAAKiC,MAAMvB,MAAQiC,OAAO3C,KAAKiC,MAAMvB,OAAS,GACrDoB,SAAU9B,KAAK8B,cAGS,cAAnB9B,KAAKiC,MAAMO,KACpB,OACE7C,gBAAC+F,GACCpD,IAAKtC,KAAKF,MAAM8D,KAAO,UACvBwB,GAAIpF,KAAKF,MAAMsF,GACf3D,IAAKzB,KAAKgE,UACVtD,MAAQuE,EAAQjF,KAAKiC,MAAMvB,OAAoC,GAA3BiC,OAAO3C,KAAKiC,MAAMvB,OACtDmD,OAAQ7D,KAAKiC,MAAM4B,OACnB8B,SAAU,EACV7D,SAAU9B,KAAK8B,cAGS,YAAnB9B,KAAKiC,MAAMO,KACpB,OACE7C,uBAAKyF,GAAIpF,KAAKF,MAAMsF,GAAI3D,IAAKzB,KAAKa,YAChClB,gBAACD,IACC0F,GAAIpF,KAAKF,MAAMsF,GACfjF,gBAAiBH,KAAK8B,SACtBjB,WAAYb,KAAKa,WACjBH,MAAOV,KAAKiC,MAAMvB,SAM1B,IAAIkF,EACkB,SAApB5F,KAAKiC,MAAMO,MAAmBqD,EAAY7F,KAAKiC,MAAMO,MACjD,SACAxC,KAAKiC,MAAMO,KAEjB,OACE7C,gBAACmG,EAAKC,SACJX,GAAIpF,KAAKF,MAAMsF,GACf5C,KAAMoD,EACNvC,YAAarD,KAAKiC,MAAMoB,YACxB3C,MAAOV,KAAKiC,MAAMvB,MAClBoB,SAAU9B,KAAK4C,kBACfgB,KAAM5D,KAAKiC,MAAMkB,WACjBvB,UAAU,8BCtTlB,SAASoE,KACP,OAAOrG,gBAACsG,IAAWC,MAAO,OAAQC,KAAM,KC+B1C,IAAIC,GAASC,GAEb,SAASC,GAAQxG,GACf,IACE,GAAIsE,EAAQtE,EAAM0C,KAAKA,KAAKS,UAAU,EAAG,GAAI,SAC3C,OACEtD,uBACE2C,IAAKxC,EAAMyG,KACX3E,UAAU,iBACV4E,MAAO,CAAEC,SAAU,QACnBC,IAAKC,QAAQC,IAAIC,kBAAoB,gBAAkB/G,EAAMyG,UAGxDnC,EAAQtE,EAAM0C,KAAKA,KAAKS,UAAU,EAAG,GAAI,SAClD,OACEtD,gBAACmH,GACCxE,IAAKxC,EAAMyG,KACXQ,UAAU,EACVL,IAAKC,QAAQC,IAAIC,kBAAoB,gBAAkB/G,EAAMyG,UAGxDnC,EAAQtE,EAAM0C,KAAKA,KAAM,mBAClC,OACE7C,0BACE2C,IAAKxC,EAAMyG,KACXS,MAAM,OACNC,OAAO,MACPP,IAAKC,QAAQC,IAAIC,kBAAoB,gBAAkB/G,EAAMyG,OAInE,MAAOhF,IAET,YAGF,SAAS2F,GAAUpH,GACjB,IAAIqH,EAAgBrH,EAAMsH,OACtBtH,EAAMsH,OACN,6DAEAlF,EAAQmF,EAAapF,GAAUA,EAAME,KAAKD,OAE1CoF,EAAYD,EAAapF,GAAUA,EAAME,KAAKmF,YAE7C9E,EAAM+E,GAAWC,EAAS,KAE1B9G,EAAO+G,GAAYD,EAAS,KAE5BE,EAASC,GAAcH,GAAS,GAEjCI,EAAOP,EAAapF,GAAUA,EAAM2F,MAEpCxF,EAAWyF,IA8Df,SAASC,EAAUC,GACjB,GACEC,EAASD,KACR9C,EAAQ8C,IACA,QAATA,GACA9C,EAAQzC,EAAKuF,IACb,CACA,IAAIE,EAAMtB,QAAQC,IAAIC,kBAAoB,aAEtC/D,EAAOoF,EAAW,CACpBC,WAAYJ,IAGV1C,EAAU,CACZ+C,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,EACAnF,KAAAA,GAGF6E,GAAW,GAEXY,EAAMlD,GACHmD,KAAMC,IACDA,EAAS3F,KAAK4F,UAChBlG,EAAKuF,GAASU,EAAS3F,KAAKA,KAC5ByE,EAAQ/E,GAERmG,EAAKZ,IAAS,EACda,EAAQD,IAEVhB,GAAW,KAEZkB,MAAOC,IACNtG,EAAKuF,GAAS,GACdR,EAAQ/E,GAERmG,EAAKZ,IAAS,EACda,EAAQD,MAyBhB,SAASI,EAAaC,GACpB,OACEhB,EAASgB,KAAO/D,EAAQ+D,IAAW,QAALA,EAMlC,SAASC,EAASC,GAChB,OAAOC,EAAOD,EAAGH,IAAiB,GAGpC,SAASK,EAAUC,GAGjB,OAAOJ,EAFCtG,OAAO0G,GAAGC,MAAM,MA8B1B,SAASC,EAAOhH,GACdqG,EAAQ,IAAKD,EAAMa,CAACjH,IAAOoG,EAAKpG,KAyGlC,SAASkH,EAASlH,GACZA,GAAO+E,EAAUmC,UACnBrH,EAAS,CACPI,KAAM,gBACNC,QAAS,CAAEH,IAAK,WAAY5B,MAAO6B,KAvIzCmH,EAAU,KACR,IAAIC,EAAI7J,EAAMY,MAAQZ,EAAMY,MAAQ2D,EAAcvE,EAAM8D,KAAM1B,GAE9D,GAAIyH,EAAG,CACL,IAAIC,EAAMR,EAAUO,GAEpBlC,EAASmC,KAEV,IAEHF,EAAU,KACR,IAAIE,EAAMR,EAAU/E,EAAcvE,EAAM8D,KAAM1B,IACzCkC,EAAQwF,EAAKlJ,IAChB+G,EAASmC,IAEV,CAACvF,EAAcvE,EAAM8D,KAAM1B,KAE9BwH,EAAU,MAvDV,SAAoBG,GAClB,IACE,GAAIC,EAAQD,IAAMA,EAAElF,OAAS,EAC3B,IAAK,IAAIoF,EAAI,EAAGA,EAAIF,EAAElF,OAAQoF,IACdhB,EAAac,EAAEE,KAG3BjC,EAAU+B,EAAEE,SAIFhB,EAAac,IAGzB/B,EAAU+B,GAGd,MAAOtI,KAuCTyI,CAAWtJ,IACV,CAACA,IAEJgJ,EAAU,KACRD,EAAS/B,IACR,CAACA,IAuIJ,IAAKiB,EAAMC,GAAWpB,EAAS,IAE3ByC,EAAShB,EAASvI,GAEtB,OAAKiG,QAAQC,IAAIC,kBAKflH,4BACI+H,IAAY5H,EAAMkF,YAClBrF,4BACIG,EAAMoK,YACNvK,uBAAK6G,MAAO,CAAE2D,QAAS,iBACrBxK,gBAACmG,EAAKC,SACJnE,UAAW9B,EAAM8B,UACjBwF,OAAQD,EACRiD,MAAOtK,EAAM8D,KACbpB,KAAK,OACLV,SA7Bd,SAAkBP,GAChB,IAAI8I,EAAQ9I,EAAEd,OAAO4J,OAAS9I,EAAE+I,aAAaD,MAExCA,EAAM1F,QAxDb,SAAoB4B,GAClB,IAAIgE,EAAS,IAAIC,WAEjBD,EAAOE,OAAUlJ,KArEnB,SAAoBgF,EAAMmE,GACxB,IAAIzC,EAAMnI,EAAMmI,KAAOtB,QAAQC,IAAIC,kBAAoB,eAEnD8D,EAAQ,IAAIC,SAEZC,EAAQtE,EAAK3C,KAIjB+G,EAAMG,OAAO,OAFDvE,EAAK/D,MAGjBmI,EAAMG,OAAO,OAAQD,GACrBF,EAAMG,OAAO,OAAQvE,GACrBoE,EAAMG,OACJ,mBACA1E,GAAOG,EAAKwE,kBAAkBC,OAAO,wBAEvCL,EAAMG,OAAO,OAAQvE,EAAKJ,MAE1BwB,GAAW,GAEXY,EACG0C,KAAKhD,EAAK0C,EAAO,CAChBtC,QAASC,EACPV,EACC,iCAAgC+C,EAAMO,aAG1C1C,KAAMC,IACAxD,EAAQwD,EAAS3F,KAAKqI,UACzB/I,EAAS,CACPI,KAAM,cACNC,QAASgG,EAAS3F,KAAKqI,UAIvB1C,EAAS3F,KAAK4F,SAChBtG,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKxC,EAAM8D,KAAMlD,MAAO+H,EAAS3F,KAAKA,KAAKiF,SAGxDN,EAAS,CAACgB,EAAS3F,KAAKA,KAAKiF,SAE7B3F,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKxC,EAAM8D,KAAMlD,MAAO,MAIvCiH,GAAW,KAEZkB,MAAOC,IACN1G,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKxC,EAAM8D,KAAMlD,MAAO,MAGrC0B,EAAS,CACPI,KAAM,cACNC,QAAS,8BAGXkF,GAAW,KAQbyD,CAAW7E,IAGbgE,EAAOc,cAAc9E,GAmDrB+E,CAAWjB,EAAM,KAyBLkB,QAnDd,SAAiBhK,GACfkI,GAAS,IAmDG+B,QAvCd,SAAiBjK,GACfkI,GAAS,GAETgC,WAAW,KACThC,GAAS,IACR,UAuCK/B,GAAW5H,EAAMoK,YACjBvK,gBAAC+L,GACC7H,OAAQ,CACN8H,kBAAkB,EAClBC,QACEjF,QAAQC,IAAIC,kBAAoB,wBAClCgF,gBAAgB,EAChBC,SAAU,GAEZC,cAAe,CACbC,KAtCd,aAuCcC,SA1Fd,SAA0B1F,GACxB,IAAI2F,EAAMC,KAAKjH,MAAMqB,EAAK6F,IAAI3D,UAE1BzH,EAAUN,GAAS,GAEvBM,EAAQ0D,KAAKwH,EAAIpJ,KAAKiF,OAEtB,IAAI8B,EACFV,EAAOnI,EAAS,SAAUqL,GACxB,OAAQpH,EAAQoH,MACZ,GAERjK,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKxC,EAAM8D,KAAMlD,MAAOmJ,EAAEyC,KAAK,QAG5C7E,EAASoC,IA0EG0C,YAvEd,SAA0BzJ,MAyEd0J,UAAW,CACTrF,cAAAA,EACAsF,OAAQ,CACN1E,MAAOH,EAAK8E,KAAK3E,OAEnB4E,gBAAgB,EAChBC,kBAAkB,EAClBd,SAAU,OAOlBpE,GACAuC,EAAOtF,OAAS,GAChBsF,EAAO4C,IAAI,CAACtK,EAAKuK,IAEbnN,uBAAK6G,MAAO,CAAE2D,QAAS,gBAAkB7H,IAAKC,GAC3CzC,EAAMiN,SACLpN,gBAACA,EAAMqN,cACLrN,gBAAC2G,IAAQhE,IAAKC,EAAKC,KAAMA,EAAKD,GAAMgE,KAAMhE,IAC1C5C,4BAGJA,gBAACsN,OACCtN,gBAACuN,GAAOC,QAAQ,UAAUhH,KAAK,KAAKqF,QAAS,IAAMjC,EAAOhH,IACxD5C,gBAACyN,IAAgBC,KAAMC,eAEzB3N,gBAACuN,GACCK,OAAO,UACP/B,QAAS,IACNnL,OAAOmN,SAASC,KACf9G,QAAQC,IAAIC,kBAAoB,kBAAoBtE,EAExD4D,KAAK,MAELxG,gBAACyN,IAAgBC,KAAMK,gBAGvB5N,EAAMkF,YACNrF,gBAACuN,GACCC,QAAQ,SACR3B,QAAS,IA9X3B,SAAkBjJ,GAChB,IAAI0F,EAAMtB,QAAQC,IAAIC,kBAAoB,eAEtC/D,EAAOoF,EAAW,CACpBC,WAAY5F,EACZwF,MAAOH,EAAKG,QAGV1C,EAAU,CACZ+C,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,EACAnF,KAAAA,GAGF6E,GAAW,GAEXY,EAAMlD,GACHmD,KAAMC,IACAxD,EAAQwD,EAAS3F,KAAKqI,UACzB/I,EAAS,CACPI,KAAM,cACNC,QAASgG,EAAS3F,KAAKqI,UAI3B,IAAIe,EAAM/C,EAAOzI,EAAQ2L,IACfjI,EAAQiI,EAAG9J,IAGrBkF,EAASyE,GAET9J,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKxC,EAAM8D,KAAMlD,MAAOwL,KAGrCvE,GAAW,KAEZkB,MAAOC,IACN1G,EAAS,CACPI,KAAM,cACNC,QAAS,6BAGX,IAAIyJ,EAAM/C,EAAOzI,EAAQ2L,IACfjI,EAAQiI,EAAG9J,IAGrBH,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKxC,EAAM8D,KAAMlD,MAAOwL,KAGrCzE,EAASyE,GAETvE,GAAW,KAsUgBgG,CAASpL,GACxB4D,KAAK,MAELxG,gBAACyN,IAAgBC,KAAMO,gBAI7BjO,gBAACkO,GACC1H,KAAK,KACLf,GAAI,SAAW7C,EACfuL,KAAMnF,EAAKpG,GACXwL,OAAQ,IAAMxE,EAAOhH,IAErB5C,gBAACkO,EAAMG,QAAOC,eAAYF,OAAQ,IAAMxE,EAAOhH,IAC7C5C,gBAACkO,EAAMK,uBAAgB3L,IAEzB5C,gBAACkO,EAAMM,UACLxO,gBAAC2G,IAAQhE,IAAKC,EAAKC,KAAMA,EAAKD,GAAMgE,KAAMhE,QAOrDmF,GAAW/H,gBAACqG,UAtGRrG,sECtIX,OAAeqC,EAfQC,KACrBC,MAAOD,EAAME,KAAKD,OAAS,KAGHE,KACxBC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,IACjB5B,MAAO6B,OAKAP,CA9Of,cAA0BrC,EAAMC,UAC9BC,YAAYC,GACVC,MAAMD,GADWE,KA0DnBoO,cAAiBC,IACf,IAAIjE,EAAQ,GACZ,GAAIN,EAAQ9J,KAAKF,MAAMwO,aACrB,IAEK,IAAIvE,EAAI,EAAGA,GAAK/J,KAAKF,MAAMwO,YAAY3J,OAAS,EAAGoF,IAGtDK,EAAM1F,KAFI2J,EAAOrO,KAAKF,MAAMwO,YAAYvE,UAK1CK,EAAM1F,KAAK2J,EAAOrO,KAAKF,MAAMwO,cAG/B,OAAOlE,QAGTtI,SAAYyM,IAGV,IAAKvO,KAAKF,MAAMkF,YAAchF,KAAKF,MAAM8D,KACvC,IACE,GAAI5D,KAAKF,MAAMoK,WAAY,CACzB,IAAIsE,EAAcxO,KAAKiC,MAAMwM,cAAgB,GAEzCC,GAAU,EAEVC,EAAU,GAEd,IAAK,IAAI5E,EAAI,EAAGA,EAAIyE,EAAY7J,OAAQoF,IAAK,CAC3C,IAAImC,EAAMsC,EAAYzE,GAElBmC,GAAOqC,EAAevO,KAAKF,MAAM8O,aACnCF,GAAU,EAEVC,EAAQjK,KAAKwH,GAIZwC,GACHC,EAAQjK,KAAK6J,EAAevO,KAAKF,MAAM8O,cAGzC5O,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAM+K,OAChC,CACL,IAAIpM,EAAM8B,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAU,KAE1DlC,KAAKF,MAAMY,QACb6B,EAAMvC,KAAKF,MAAMY,OAGnB,IAAIiO,EAAU,KAEVpM,GAAOgM,EAAevO,KAAKF,MAAM8O,eACnCD,EAAUJ,EAAevO,KAAKF,MAAM8O,cAEtC5O,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAM+K,IAGvC,MAAOpN,GAEPvB,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAM,MAIzC5D,KAAK6O,aAxHL7O,KAAKiC,MAAQ,CACXwM,aAAc,KACdjM,KAAMxC,KAAKF,MAAM0C,MAAQ,UAG3BxC,KAAK6O,UAAYC,EAAS9O,KAAK6O,UAAUhK,KAAK7E,MAAO,KAGvD6O,YAGE,IAAItM,EAAM,KAENkM,EAAe,KAQnB,GALElM,EADEvC,KAAKF,MAAMY,MACPV,KAAKF,MAAMY,MAEX2D,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAU,MAGvD6M,EAAOxM,GACV,GAAIvC,KAAKF,MAAMoK,WAAY,CACzBuE,EAAe,GAEf,IAAK,IAAI1E,EAAI,EAAGA,EAAI/J,KAAKF,MAAMuF,QAAQV,OAAQoF,IAC7C,IAAK,IAAIiF,EAAI,EAAGA,EAAIzM,EAAIoC,OAAQqK,IAAK,CACnC,IAAIC,EAAMjP,KAAKF,MAAMuF,QAAQ0E,GAEzBmF,EAAM3M,EAAIyM,GAEVrM,OAAOsM,EAAIjP,KAAKF,MAAM8O,eAAiBjM,OAAOuM,IAChDT,EAAa/J,KAAKuK,EAAIjP,KAAKF,MAAM8O,oBAKvCH,EAAeU,EACbnP,KAAKF,MAAMuF,QACX,SAAUgH,GACR,OAAO1J,OAAO0J,EAAErM,KAAKF,MAAM8O,eAAiBjM,OAAOJ,IACnDsC,KAAK7E,OAMbyO,EACG5I,EAAY4I,IAAkBM,EAAON,GAA+B,KAAfA,EAExDzO,KAAKkD,SAAS,CACZuL,aAAAA,IAwEJxK,mBAAmBC,EAAWC,GAEzBC,EACCC,EAAcrE,KAAKF,MAAM8D,KAAMM,EAAUhC,OACzCmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,SAE3CkC,EACCpE,KAAKiC,MAAMwM,aACXpK,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,SAG5ClC,KAAK6O,YAIT/N,oBACEd,KAAK6O,YAGPrN,SACE,IAAI6D,EAAU,GAEd,IACEA,EAAUrF,KAAKF,MAAMuF,QAAQV,OAAS,EAAI3E,KAAKF,MAAMuF,QAAU,GAC/D,MAAO9D,IAET,OACE5B,uBAAKiC,UAAU,2BACZyD,EAAQwH,IAAKnM,IACZ,IAAI0O,GAAY,EAIhB,IAEIA,EADEpP,KAAKF,MAAMoK,WACDmF,EACVrP,KAAKiC,MAAMwM,aACX/N,EAAMV,KAAKF,MAAM8O,cAGPxK,EACV1D,EAAMV,KAAKF,MAAM8O,aACjB5O,KAAKiC,MAAMwM,aAAazO,KAAKF,MAAM8O,cAGvC,MAAOrN,IAsBT,OACE5B,gBAACA,EAAMqN,cACLrN,gBAACmG,EAAKwJ,OACJC,OAA2B,UAAnBvP,KAAKiC,MAAMO,KACnBuC,SAAU/E,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5CxC,KAAMxC,KAAKF,MAAMoK,WAAa,WAAa,QAE3CtG,KAAM5D,KAAKF,MAAM8D,KACjB9B,SAAU9B,KAAK8B,SAAS+C,KAAK7E,KAAMU,GACnCA,MAAOA,EACP8O,QAASJ,EACThF,MAAOpK,KAAKoO,cAAc1N,GAAOmM,IAAI,CAACtK,EAAKwH,IACrC3F,EAAQzB,OAAOJ,GAAKU,UAAU,EAAG,GAAI,OAErCtD,gBAACuH,IAAUxG,MAAO6B,EAAKyC,YAAY,EAAM+H,SAAS,SAGxCjN,MAAM2P,OAASvK,EAAMvC,OAAOJ,IAAQA,kBCtN9DmN,GAAe5P,GAEjBH,gBAACgQ,GAAWxJ,KAAK,MACfxG,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBjH,KAAK,KAAKkH,KAAMyC,MAEnCnQ,gBAACmG,EAAKC,SACJS,MAAO,CACLuJ,WAAY,OACZC,WAAY,UACZC,SAAU,WAEZzN,KAAK,OACLZ,UAAU,eACVmD,SAAUjF,EAAMiF,SAChBnB,KAAM9D,EAAM8D,KACZlD,MAAOZ,EAAMY,OAAS,GACtB8K,QAAS1L,EAAM0L,WA+TvB,OAAexJ,EAfUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,KAGDE,KAC1BC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,OAKAP,CAzTf,cAAwBrC,EAAMC,UAC5BC,YAAYC,GACVC,MAAMD,GADWE,KAsDnB4C,kBAAqBE,IACnBA,EAAOsD,GAAOtD,GAAMoN,UAAY9J,GAAOtD,GAAMkI,OAAO,cAAgB,KAEpEhL,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAMd,GAErC9C,KAAK6O,kBAGPsB,uBAA0BrN,IACxBA,EAAOsD,GAAOtD,GAAMoN,UAAY9J,GAAOtD,GAAMkI,OAAO,cAAgB,KAEpEhL,KAAKF,MAAMuC,SAAS,SAAWrC,KAAKF,MAAM8D,KAAMd,GAEhD9C,KAAK6O,kBAGPuB,qBAAwBtN,IACtBA,EAAOsD,GAAOtD,GAAMoN,UAAY9J,GAAOtD,GAAMkI,OAAO,cAAgB,KAEpEhL,KAAKF,MAAMuC,SAAS,OAASrC,KAAKF,MAAM8D,KAAMd,GAE9C9C,KAAK6O,kBAsCPwB,cAAiBC,IACf,IAAI3G,EAAIvD,GAAOkK,GAAMtF,OAAO,KAE5B,OAAY,GAALrB,GAAe,GAALA,EAAS,gBAAa4G,GAjHvCvQ,KAAKiC,MAAQ,CACXuO,SAAU,KACVC,eAAgB,KAChBC,aAAc,MAGhB1Q,KAAK6O,UAAYC,EAAS9O,KAAK6O,UAAUhK,KAAK7E,MAAO,KAGvD6O,YACE,GAAI7O,KAAKF,MAAM6Q,QAAS,CACtB,IAAIF,EAAiB,KAEjBC,EAAe,KAEnB,IACED,EAAiBzQ,KAAKF,MAAM2Q,eACxBrK,GAAOpG,KAAKF,MAAM2Q,gBAAgBG,SAClCvM,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OACrDkE,GACE/B,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACrD0O,SACF,KACJ,MAAOrP,IAET,IACEmP,EAAe1Q,KAAKF,MAAM4Q,aACtBtK,GAAOpG,KAAKF,MAAM4Q,cAAcE,SAChCvM,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OACnDkE,GACE/B,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACnD0O,SACF,KACJ,MAAOrP,IAETvB,KAAKkD,SAAS,CAAEuN,eAAAA,EAAgBC,aAAAA,QAC3B,CACL,IAAIF,EAAW,KAEf,IACEA,EAAWxQ,KAAKF,MAAM0Q,SAClBpK,GAAOpG,KAAKF,MAAM0Q,UAAUI,SAC5BvM,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OAC1CkE,GAAO/B,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAQ0O,SACzD,KACJ,MAAOrP,IAETvB,KAAKkD,SAAS,CAAEsN,SAAAA,KA4BpB1P,oBACEd,KAAK6O,YAGP5K,mBAAmBC,EAAWC,GAEzBnE,KAAKF,MAAM6Q,SACZtM,EAAcrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QACvCmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAC5CmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAUlC,KAAKiC,MAAMuO,UAE/DxQ,KAAK6O,YAIL7O,KAAKF,MAAM6Q,SACXtM,EAAc,SAAWrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QAClDmC,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACvDmC,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACnDlC,KAAKiC,MAAMwO,gBAEbzQ,KAAK6O,YAIL7O,KAAKF,MAAM6Q,SACXtM,EAAc,OAASrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QAChDmC,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACrDmC,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACjDlC,KAAKiC,MAAMyO,cAEb1Q,KAAK6O,YAUTrN,SACE,IAAIqP,EAAa7Q,KAAKF,MAAM+Q,WACxB7Q,KAAKF,MAAM+Q,WACX7Q,KAAKF,MAAMgR,SACX,OACA,aAEJ,OAAI9Q,KAAKF,MAAM6Q,QACT3Q,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,YAEjCoB,GAAOpG,KAAKiC,MAAMwO,gBAAgBP,UAC/B9J,GAAOpG,KAAKiC,MAAMwO,gBAAgBzF,OAAO,cACzC,IACJ,OACC5E,GAAOpG,KAAKiC,MAAMyO,cAAcR,UAC7B9J,GAAOpG,KAAKiC,MAAMyO,cAAc1F,OAAO,cACvC,IAIJrL,uBAAKiC,UAAU,+BACbjC,gBAACoR,IACCC,QACEhR,KAAKF,MAAMkR,QAAU5K,GAAOpG,KAAKF,MAAMkR,SAASJ,SAAW,KAE7DK,QACEjR,KAAKF,MAAMmR,QAAU7K,GAAOpG,KAAKF,MAAMmR,SAASL,SAAW,KAE7DC,WAAYA,EACZxN,YACErD,KAAKF,MAAMuD,YAAcrD,KAAKF,MAAMuD,YAAc,UAEpDmN,SAAUxQ,KAAKiC,MAAMwO,eACrBS,aAAclR,KAAKF,MAAMiF,WAAa/E,KAAKF,MAAMkF,WACjDmM,YACExR,gBAAC+P,IACChP,MAAOV,KAAKiC,MAAMwO,eAClB7M,KAAM,SAAW5D,KAAKF,MAAM8D,OAGhC9B,SAAU9B,KAAKmQ,uBACfiB,cAAepR,KAAKF,MAAMgR,SAC1BO,eAAgBrR,KAAKF,MAAMgR,SAC3BQ,cACAC,mBAAoBvR,KAAKF,MAAMgR,SAC/BU,kBAAmBxR,KAAKF,MAAMgR,SAC9BW,eAAgBzR,KAAKF,MAAMgR,SAC3BlN,KAAM,SAAW5D,KAAKF,MAAM8D,KAC5B8N,YAAa1R,KAAKF,MAAMgR,SAAW,KAAO,WAC1Ca,aAAc3R,KAAKqQ,cACnBuB,aAAa,SACb7M,SAAU/E,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5C6M,SAAU7R,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5C8M,UAAW9R,KAAKiC,MAAMwO,eACtBsB,QAAS/R,KAAKiC,MAAMyO,aACpBsB,qBAAqB,IAEvBrS,wBAAMiC,UAAU,oBAAoB4E,MAAO,CAAEqJ,WAAY,kBAGzDlQ,gBAACoR,IACCC,QACEhR,KAAKiC,MAAMwO,eACPzQ,KAAKiC,MAAMwO,eACXzQ,KAAKF,MAAMkR,QACX5K,GAAOpG,KAAKF,MAAMkR,SAASJ,SAC3B,KAENK,QACEjR,KAAKF,MAAMmR,QAAU7K,GAAOpG,KAAKF,MAAMmR,SAASL,SAAW,KAE7DC,WAAYA,EACZxN,YACErD,KAAKF,MAAMuD,YAAcrD,KAAKF,MAAMuD,YAAc,UAEpDmN,SAAUxQ,KAAKiC,MAAMyO,aACrBQ,aAAclR,KAAKF,MAAMiF,WAAa/E,KAAKF,MAAMkF,WACjDpB,KAAM,OAAS5D,KAAKF,MAAM8D,KAC1BqO,cACAd,YACExR,gBAAC+P,IACChP,MAAOV,KAAKiC,MAAMyO,aAClB9M,KAAM,OAAS5D,KAAKF,MAAM8D,OAG9B9B,SAAU9B,KAAKoQ,qBACfgB,cAAepR,KAAKF,MAAMgR,SAC1BO,eAAgBrR,KAAKF,MAAMgR,SAC3BQ,cACAC,mBAAoBvR,KAAKF,MAAMgR,SAC/BU,kBAAmBxR,KAAKF,MAAMgR,SAC9BW,eAAgBzR,KAAKF,MAAMgR,SAC3Ba,aAAc3R,KAAKqQ,cACnBqB,YAAa1R,KAAKF,MAAMgR,SAAW,KAAO,WAC1Cc,aAAa,SACbE,UAAW9R,KAAKiC,MAAMwO,eACtBsB,QAAS/R,KAAKiC,MAAMyO,aACpB3L,SAAU/E,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5C6M,SAAU7R,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5CgN,qBAAqB,KAkC3BhS,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC7BoB,GAAOpG,KAAKF,MAAMoC,MAAMlC,KAAKF,MAAM8D,OAAOsM,UAC7C9J,GAAOpG,KAAKF,MAAMoC,MAAMlC,KAAKF,MAAM8D,OAAOoH,OACxChL,KAAKF,MAAMgR,SAAW,OAAS,cAEjC,GAIJnR,gBAACoR,IACCC,QACEhR,KAAKF,MAAMkR,QAAU5K,GAAOpG,KAAKF,MAAMkR,SAASJ,SAAW,KAE7DK,QACEjR,KAAKF,MAAMmR,QAAU7K,GAAOpG,KAAKF,MAAMmR,SAASL,SAAW,KAE7DC,WAAYA,EACZxN,YACErD,KAAKF,MAAMuD,YAAcrD,KAAKF,MAAMuD,YAAc,UAEpD8N,YACExR,gBAAC+P,IAAYhP,MAAOV,KAAKiC,MAAMuO,SAAU5M,KAAM5D,KAAKF,MAAM8D,OAE5D4M,SAAUxQ,KAAKiC,MAAMuO,SACrBU,aAAclR,KAAKF,MAAMiF,WAAa/E,KAAKF,MAAMkF,WACjDI,GAAIpF,KAAKF,MAAM8D,KACfhC,UAAU,eACV+P,aAAc3R,KAAKqQ,cACnBvO,SAAU9B,KAAK4C,kBACfwO,cAAepR,KAAKF,MAAMgR,SAC1BO,eAAgBrR,KAAKF,MAAMgR,SAC3BQ,cACAC,mBAAoBvR,KAAKF,MAAMgR,SAC/BU,kBAAmBxR,KAAKF,MAAMgR,SAC9BW,eAAgBzR,KAAKF,MAAMgR,SAC3BY,YAAa1R,KAAKF,MAAMgR,SAAW,KAAO,WAC1Cc,aAAa,SACb7M,SAAU/E,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5C6M,SAAU7R,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5CgN,qBAAqB,UCtDdhQ,EAhBUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,KAGDE,KAC1BC,SAAU,CAACC,EAAKC,KACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,QAMAP,CA7Qf,cAA0BrC,EAAMC,UAC9BC,YAAYC,GACVC,MAAMD,GADWE,KAgFnB4C,kBAAqB1C,IACnB,IAAIqC,EAAM,KAGRA,EADqB,WAAnBvC,KAAKF,MAAM0C,KACP0P,OAAOhS,EAAMO,OAAOC,MAAMqC,QAAQ,aAAc,KAC1B,WAAnB/C,KAAKF,MAAM0C,KACdxC,KAAKmS,iBACTjS,EAAMO,OAAOC,MAAMqC,QAAQ,aAAc,IACzC,EACA,KAE0B,eAAnB/C,KAAKF,MAAM0C,KACdxC,KAAKmS,iBACTjS,EAAMO,OAAOC,MAAMqC,QAAQ,aAAc,IACzC,EACA,GAE0B,iBAAnB/C,KAAKF,MAAM0C,KACdxC,KAAKmS,iBACTjS,EAAMO,OAAOC,MAAMqC,QAAQ,aAAc,IACzC,EACA,KAE0B,gBAAnB/C,KAAKF,MAAM0C,KACdxC,KAAKmS,iBACTjS,EAAMO,OAAOC,MAAMqC,QAAQ,aAAc,IACzC,EACA,KAGI7C,EAAMO,OAAOC,MAAMqC,QAAQ,aAAc,IAGjD,IAAIqP,EAAMpS,KAAKF,MAAMuS,SAAWH,OAAOlS,KAAKF,MAAMuS,UAAY,KAE1DC,EAAMtS,KAAKF,MAAMyS,SAAWL,OAAOlS,KAAKF,MAAMyS,UAAY,KAE1DD,GAAOF,EACT7P,EAAMvC,KAAKmS,iBAAiB5P,EAAK6P,EAAKE,IAC5BA,GAAOF,EACjB7P,EAAMvC,KAAKmS,iBAAiB5P,EAAK6P,EAAK,cAC7BE,IAAQF,IACjB7P,EAAMvC,KAAKmS,iBAAiB5P,EAAK,EAAG+P,IAGtC/P,EAAMA,GAAY,EAEdvC,KAAKiC,MAAMkB,YACbnD,KAAKF,MAAMuC,SAASrC,KAAKiC,MAAMkB,WAAYZ,GAG7C,IAAIiQ,EAAWtS,EAAMO,OAAO+R,UAAY,KAGrCC,MAAMC,WAAWF,KACjBC,MAAMC,WAAWnQ,KAClBmQ,WAAWF,KAAcE,WAAWnQ,IAEpCvC,KAAKiC,MAAM/B,MAAMyS,YAAYpQ,SAIjCT,SAAYS,IACVvC,KAAKkD,SAAS,CACZxC,MAAO6B,IAGLvC,KAAKiC,MAAMkB,YACbnD,KAAKF,MAAMuC,SAASrC,KAAKiC,MAAMkB,WAAYZ,SAI/CsM,UAAY,KACV,IAAItM,EAAM,GAEV,IACE,IAAIuC,EAAaT,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,OACjEK,EAAMvC,KAAKF,MAAMY,MAAQV,KAAKF,MAAMY,MAAQoE,EAC5C,MAAOvD,IAET,IAAI6Q,EAAMpS,KAAKF,MAAMuS,SAAWH,OAAOlS,KAAKF,MAAMuS,UAAY,KAE1DC,EAAMtS,KAAKF,MAAMyS,SAAWL,OAAOlS,KAAKF,MAAMyS,UAAY,KAE1D7R,EAAQ6B,EAAMqQ,SAASrQ,GAAO6P,GAEX,WAAnBpS,KAAKF,MAAM0C,MAGM,WAAnBxC,KAAKF,MAAM0C,MACQ,eAAnBxC,KAAKF,MAAM0C,MACX8P,GACAF,KALA1R,EAAQ6B,EAAMmQ,WAAWnQ,GAAO6P,GAU9BK,MAAM/R,KACRA,EAAQ0R,GAGVpS,KAAKkD,SAAS,CAAExC,MAAAA,IAEhB,IAGMgS,WAFW1S,KAAKiC,MAAM/B,MAAM2S,gBAAkB,QAErBH,WAAWhS,IACtCV,KAAKiC,MAAM/B,MAAMyS,YAAYjS,GAE/B,MAAOa,MA1LTvB,KASKiC,MAAQ,CACXwM,aAAc,KACdpJ,QAAS,CACPyN,SAAS,GAEX5S,MAAO,KACPQ,MAAO,KACPyC,WAAYT,EAAK1C,KAAKF,MAAM8D,KAAM,MAGpC5D,KAAK6O,UAAYC,EAAS9O,KAAK6O,UAAUhK,KAAK7E,MAAO,KAGvDmS,iBAAiB5P,EAAK6P,EAAM,EAAGE,EAAM,KAiBnC,OAhBItS,KAAKF,MAAMiT,gBAAkBxQ,EAAM,IACrC6P,GAAOE,GAGLG,MAAMlQ,KACRA,EAAM6P,IAGR7P,EAAMmQ,WAAWnQ,KAEN+P,EACT/P,EAAM+P,EACG/P,GAAO6P,IAChB7P,EAAM6P,GAGD7P,EAAM2P,OAAO3P,GAAO,KAG7B0B,mBAAmBC,EAAWC,EAAW6O,GAmBvC,GAjBG5O,EACCC,EAAcrE,KAAKiC,MAAMkB,WAAYe,EAAUhC,OAC/CmC,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,SAEjDkC,EACCpE,KAAKiC,MAAMvB,MACX2D,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,UAGlDlC,KAAKkD,SAAS,CACZsP,SACEnO,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,QAAU,KAC5DxB,MAAO2D,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,QAAU,OAEnElC,KAAK6O,aAIL7O,KAAKF,MAAMY,OACXwD,EAAUxD,OAASV,KAAKF,MAAMY,OAC9BV,KAAKF,MAAMY,OAASV,KAAKiC,MAAMvB,MAC/B,CACA,IAAIA,EAAQV,KAAKF,MAAMY,OAAS,KAEhCV,KAAKkD,SAAS,CACZsP,SAAU9R,EACVA,MAAOA,IAGTV,KAAK6O,aAoHT/N,oBACE,IAAIuE,EAAU,CACZyN,SAAS,EACTG,qBAAqB,GAIF,WAAnBjT,KAAKF,MAAM0C,MACQ,WAAnBxC,KAAKF,MAAM0C,MACQ,eAAnBxC,KAAKF,MAAM0C,OAGX6C,EAAQ6N,2BAA6B,YAGvClT,KAAKkD,SAAS,CACZmC,QAAAA,EACAmN,SAAUnO,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,OAC1DxB,MAAO2D,EAAcrE,KAAKiC,MAAMkB,WAAYnD,KAAKF,MAAMoC,SAGzDlC,KAAK6O,YAGPsE,OAAOC,GACLpT,KAAKkD,SAAS,CAAEhD,MAAOkT,IAGzB5R,SACE,OAAIxB,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5B+J,EAAO/O,KAAKiC,MAAMvB,QAAWmF,EAAY7F,KAAKiC,MAAMvB,OAExD,KADA2S,EAAarT,KAAKiC,MAAMvB,MAAO,IAId,SAAnBV,KAAKF,MAAM0C,KAEX7C,gBAAC2T,IACCf,SAAUvS,KAAKF,MAAMyS,SACrBF,SAAUrS,KAAKF,MAAMuS,SACrB3R,MAAOV,KAAKiC,MAAMvB,MAClBoB,SAAU9B,KAAK8B,WAKnBnC,gBAACwF,GACC9B,YAAarD,KAAKF,MAAMuD,YAAcrD,KAAKF,MAAMuD,YAAc,GAC/D+B,GAAIpF,KAAKiC,MAAMkB,WACfS,KAAM5D,KAAKiC,MAAMkB,WACjBgQ,OAAQnT,KAAKmT,OAAOtO,KAAK7E,MACzBU,MAAOV,KAAKiC,MAAMvB,MAClBoB,SAAU9B,KAAK4C,kBACfyC,QAASrF,KAAKiC,MAAMoD,QACpBzD,UAAU,2BC3PlB,MAAM2R,GAAeC,GAAOC,GAAPD,eAAuB;;;;;;;;;IAW5C,SAASE,GAAgB5T,GACvB,OACEH,gBAAC4T,IACCI,UAAW,IACXC,OAAQ9T,EAAM+T,UACdC,QAASnU,gBAACqG,UAETlG,EAAMiU,gBCUAC,GAAS,EAAGC,OAAAA,KAErBtU,uBAAK6G,MAAO,CAAE0N,OAAQ,UACnBD,EAAOE,WAAaF,EAAOzS,OAAO,WAK5B4S,GAAuBtU,IAClC,IAAIuU,EAAcvU,EAAMmU,OAAOI,YAE3BjP,EAAKtF,EAAMmU,OAAO7O,GAElBxB,EAAO9D,EAAM8D,KAEbxB,EAAWyF,KAEV/E,EAAMwR,GAAW3U,EAAM6H,SAAS6M,GAEjC/R,EAAMI,EAAK,UAAYkB,EAAO,IAAMwB,EAAI,KAExC+D,EAAS9B,EAAapF,GAAUA,EAAME,KAAKgH,QAoB/C,OAlBAO,EAAU,KACR4K,EAAQnL,EAAO7G,KACd,IAiBD3C,gBAACmG,EAAKC,SACJzD,IAAKA,EACL8C,GAAI9C,EACJsB,KAAMtB,EACN5B,MAAOoC,EACPhB,SApBJ,SAAkBP,GAChBA,EAAEsB,iBAEFyR,EAAQ/S,EAAEd,OAAOC,OAEjB0B,EAAS,CACPI,KAAM,mBACNC,QAAS,CACP+G,CAAClH,GAAMf,EAAEd,OAAOC,MAChB8I,CAAC9G,EAAK,UAAYkB,EAAM,OAAO,MAYjCP,YAAc,eAqCpB,SAASkR,IAAmBC,QAC1BA,EAD0B1R,KAE1BA,EAF0B2R,sBAG1BA,EAH0BC,gBAI1BA,EAJ0BC,eAK1BA,EAL0BC,gBAM1BA,EAN0BlN,QAO1BA,EAP0BmN,oBAQ1BA,EAR0BC,WAS1BA,EAT0BlR,KAU1BA,EAV0BmR,gBAW1BA,IAIA,IAAI5L,EAAS9B,EAAapF,GAAUA,EAAME,KAAKgH,SAAW,GAEtD6L,EAAS,GAEb,IAAK,IAAIjL,EAAI,EAAGA,EAAIyK,EAAQ7P,OAAQoF,IAClC,IACE,IAAIkL,EAAIvS,EAAK,QAAUkB,EAAO,IAAM4Q,EAAQzK,GAAG+K,GAAa,KAExDI,EAAO/L,EAAO8L,GAEbhQ,EAAQiQ,IAAUnG,EAAOmG,IAAUrP,EAAYqP,IAClDF,EAAOtQ,KAAK,CACVU,GAAIoP,EAAQzK,GAAG+K,GACfK,KAAc,QAARD,IAGV,MAAO3T,IAGX,IAAI6T,cACFA,EADEC,kBAEFA,EAFEC,aAGFA,EAHEC,KAIFA,EAJEC,WAKFA,EALEC,eAMFA,EANEC,SAWFA,EAXEC,YAcFA,EACA1T,OAAO2T,UAAEA,EAAFC,SAAaA,IAClBC,GACF,CACEtB,QAAAA,EACA1R,KAAAA,EACAiT,cAAe,CACb/B,OAASlU,GAAUH,gBAACyU,oBAAwBtU,QAAa8D,MAE3DoS,aAAc,CACZJ,UAAWlB,EACXmB,SAAUlB,EACVK,OAAAA,GAEFiB,kBAAkB,EAClBC,UAAWtB,EACXuB,cAAc,EACdC,gBAAgB,EAChBC,iBAAkB,QAGpBC,GACAC,GACAC,GACAC,IAGEpO,EAAUiN,EAAa,GAAGjN,SAAW,GAEzCqO,EACE,KACE,IAAIC,EAAO,GAEX,IAAK,IAAI5M,EAAI,EAAGA,EAAI1B,EAAQ1D,OAAQoF,IAAK,CACvC,IAAIJ,EAAItB,EAAQ0B,GAEhB,GAAIJ,EAAG,CACL,IAAIiN,EAAQlU,EAAK,QAAUkB,EAAO,IAAM+F,EAAEmL,GAAa,KAEnD+B,EAASlN,EAAEmN,SAAYnN,EAAEoN,aAAe,OAAS,MAAS,KAE1DF,GAAU1N,EAAOyN,KACnBD,EAAKC,GAASC,IAKf5R,EAAQ0R,IACXvU,EAAS,CACPI,KAAM,mBACNC,QAAS,IAAKkU,EAAMnN,CAAC9G,EAAK,UAAYkB,EAAM,OAAO,MAIzD,IACA,CAACyE,IAGH,IAAK2O,EAAcC,GAAmBzP,EAASE,IAE1CwP,EAASC,GAAc3P,EAASoO,GAEjCxT,EAAWyF,IAMXuP,EAAoBlX,IACtByV,EAAYzD,OAAOhS,EAAMO,OAAOC,QAEhC0B,EAAS,CACPI,KAAM,mBACNC,QAAS,CACP+G,CAAC9G,EAAK,QAAUkB,EAAM,MAAOsO,OAAOhS,EAAMO,OAAOC,OACjD8I,CAAC9G,EAAK,QAAUkB,EAAM,MAAOsT,MAK/BG,EAAmBnX,IACrB,IAAIqV,EAAOrV,EAAMO,OAAOC,MAAQwR,OAAOhS,EAAMO,OAAOC,OAAS,EAE7D4W,EAAe/B,IAGbgC,EAAoB7C,EAAkBE,EAEtC4C,EAAwB9C,GAAmB,EAE3C+C,EAAiB,KACnBH,EAAeJ,EAAU,IAGvBQ,EAAqB,KACvBJ,EAAeJ,EAAU,IAGvBI,EAAkBpL,IACpBiL,EAAWjL,IA0Bb,OAvBAwK,EACE,KACEhB,EAASwB,GACT9U,EAAS,CACPI,KAAM,mBACNC,QAAS,CACP+G,CAAC9G,EAAK,QAAUkB,EAAM,MAAOiS,EAC7BrM,CAAC9G,EAAK,QAAUkB,EAAM,MAAOsT,MAInC,IACA,CAACA,IAGHxN,EAAU,KACJuN,IAAoBvP,EACtB+D,WAAW,IAAMwL,EAAgBvP,GAAU,KAE3CuP,EAAgBvP,IAEjB,CAACA,IAEAzC,EAAQrB,GACHjE,mDAIPA,2BACEA,uBAAKiC,UAAU,gBAAgB4E,MAAO,CAAEmR,SAAU,SAChDhY,gBAACgQ,OAEChQ,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAAS,IAAM8L,EAAe,GAC9BvS,UAAWyS,GAAyB9P,GAEpC/H,gBAACyN,IAAgBC,KAAMwK,MAGzBlY,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAASkM,EACT3S,UAAWyS,GAAyB9P,GAEpC/H,gBAACyN,IAAgBC,KAAMyK,MAGzBnY,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBC,KAAM0K,gBAAwB,KAGjDpY,gBAACmG,EAAKC,SACJS,MAAO,CAAEuJ,WAAY,OAAQiI,YAAa,OAAQC,SAAU,IAC5DzV,KAAK,SACL4P,IAAK,EACLE,IAAKsC,EACLlU,MAAOwW,EACPpV,SAAUuV,IAGZ1X,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBC,KAAM6K,kBAA0B,KAGnDvY,gBAACmG,EAAKC,SACJvD,KAAK,SACL4P,IAAK,EACL5L,MAAO,CAAEuJ,WAAY,OAAQiI,YAAa,OAAQC,SAAU,IAC5D3F,IAAK,GACL5R,MAAOmV,EACP/T,SAAUsV,IAGZzX,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAASiM,EACT1S,UAAWwS,GAAqB7P,GAEhC/H,gBAACyN,IAAgBC,KAAM8K,MAEzBxY,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAAS,IAAM8L,EAAe1C,GAC9B7P,UAAWwS,GAAqB7P,GAEhC/H,gBAACyN,IAAgBC,KAAM+K,QAK7BzY,uBAAKiC,UAAU,yBACbjC,8BAAS0T,EAAaqB,EAAiB,aAAmB,IAC1D/U,8BAAS0T,EAAauB,EAAiB,mBAAyB,MAChEjV,8BAAS0T,EAAa0B,EAAiB,aAGzCpV,gBAAC0Y,uBACQ,CAAEnE,OAAQ,EAAGoE,OAAQ,6DAMxBlD,KAEJzV,6BACG2V,EAAazI,IAAK0L,GACjB5Y,qBAAQ4Y,EAAYC,sBACjBD,EAAYlQ,QAAQwE,IAAKoH,GACxBtU,0CACS,CACL8Y,QAAS,UACTC,UAAW,sBAETzE,EAAO0E,kBAEXhZ,sBAASsU,EAAO2E,uBACdjZ,wBACE6G,MAAO,CACL2D,QAAS,iBAGV8J,EAAOzS,OAAO,WAEjB7B,wBACE6G,MAAO,CACL2D,QAAS,eACT0O,WAAY,SA1KF5E,CAAAA,GACvBA,EAAO6C,SAAY7C,EAAO8C,aAAe,KAAO,KAAQ,GA4K5C+B,CAAyB7E,KAG7BY,GAAuBlV,gBAACqU,IAAOC,OAAQA,SAOlDtU,wBAAW0V,IACRE,EAAK5Q,OAAS,IAAMqS,EACjBzB,EAAK1I,IAAKkM,IACRvD,EAAWuD,GAETpZ,gBAACA,EAAMqN,UAAS1K,IAAKyW,EAAIC,cAAc1W,KACrC3C,0BACGoZ,EAAIE,MAAMpM,IAAI,CAACqM,EAAMpM,IAElBnN,0CACS,CACL8Y,QAAS,UACTzR,MAAgB,GAAT8F,EAAa,OAAS,SAE3BoM,EAAKC,gBAERD,EAAK1X,OAAO,WAKpBuX,EAAIK,YACHzZ,0BACEA,sBACE6G,MAAO,CACLiS,QAAS,WAEXY,QAAS5D,EAAe9Q,QAEvB8P,EAAsBsE,QAOnCzD,EAAazI,IAAK0L,GAChB5Y,0BACEA,sBACE6G,MAAO,CACLiS,QAAS,SACTa,UAAW,UAEbD,QAASd,EAAYlQ,QAAQ1D,QAE5BqS,EAAe,eAAiB,sBAO/CrX,uBAAKiC,UAAU,yBACbjC,8BAAS0T,EAAaqB,EAAiB,aAAmB,IAC1D/U,8BAAS0T,EAAauB,EAAiB,mBAAyB,MAChEjV,8BAAS0T,EAAa0B,EAAiB,aAEzCpV,uBAAKiC,UAAU,gBAAgB4E,MAAO,CAAEmR,SAAU,SAChDhY,gBAACgQ,OACChQ,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAAS,IAAM8L,EAAe,GAC9BvS,UAAWyS,GAAyB9P,GAEpC/H,gBAACyN,IAAgBC,KAAMwK,MAGzBlY,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAASkM,EACT3S,UAAWyS,GAAyB9P,GAEpC/H,gBAACyN,IAAgBC,KAAMyK,MAGzBnY,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBC,KAAM0K,gBAAwB,KAGjDpY,gBAACmG,EAAKC,SACJS,MAAO,CAAEuJ,WAAY,OAAQiI,YAAa,OAAQC,SAAU,IAC5DzV,KAAK,SACL4P,IAAK,EACLE,IAAKsC,EACLlU,MAAOwW,EACPpV,SAAUuV,IAGZ1X,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBC,KAAM6K,kBAA0B,KAGnDvY,gBAACmG,EAAKC,SACJvD,KAAK,SACL4P,IAAK,EACL5L,MAAO,CAAEuJ,WAAY,OAAQiI,YAAa,OAAQC,SAAU,IAC5D3F,IAAK,GACL5R,MAAOmV,EACP/T,SAAUsV,IAGZzX,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAASiM,EACT1S,UAAWwS,GAAqB7P,GAEhC/H,gBAACyN,IAAgBC,KAAM8K,MAEzBxY,gBAACuN,GACC1G,MAAO,CAAEoR,OAAQ,QACjBzK,QAAQ,UACR3B,QAAS,IAAM8L,EAAe1C,GAC9B7P,UAAWwS,GAAqB7P,GAEhC/H,gBAACyN,IAAgBC,KAAM+K,SC5dnC,SAASmB,GAAUzZ,GACjB,IAAK0Z,EAASC,GAAcjS,GAAS,IAEhC1E,EAAMwR,GAAW9M,EAAS,KAE1BkS,EAAMC,GAAWnS,EAAS,KAE1BoS,EAAMC,GAAWrS,EAAS,KAE1BsS,EAAeC,GAAoBvS,GAAS,IAE5CwS,EAAeC,GAAoBzS,GAAS,GAM7CpF,EAAWyF,IAIX3F,GAFYmF,EAAapF,GAAUA,EAAME,KAAKmF,WAEtCD,EAAapF,GAAUA,EAAME,KAAKD,QAAU,IAEpDwK,EAAOrF,EAAapF,GAAUA,EAAM2F,KAAK8E,OAAS,GAElDvD,EAAS9B,EAAapF,GAAUA,EAAME,KAAKgH,SAAW,GAEtD+Q,EAAaxX,EAAK,YAAc5C,EAAM8D,KAAM,KAE5CkR,EAAahV,EAAMgV,WAAahV,EAAMgV,WAAa,KAmDnDqF,EAAiB,CACnBnM,OAAQ,IACR5I,GAAI,SACJ4B,MAAO,OACPoT,KAAOrB,IACL,IAAIsB,EAAchT,EAAapF,GAAUA,EAAME,KAAKD,OAEhDsN,GAAU,EAEd,IAEIA,EADsB,UAApB1P,EAAMwa,WAENjW,EAAc6V,EAAYG,IAC1BtB,EAAIA,IAAIwB,SAASzF,GAGjB0F,EAAUnW,EAAc6V,EAAYG,GAAc,SAAUhO,GAC1D,OAAOA,GAAK0M,EAAIA,IAAIwB,SAASzF,MACzB,EAEV,MAAOvT,IAET,OACE5B,gBAACmG,EAAKwJ,OACJC,UACAnK,GAAI1C,EAAK5C,EAAM8D,KAAO,UAAYmV,EAAIA,IAAIwB,SAASzF,GAAa,KAChElR,KAAMlB,EACJ5C,EAAM8D,KAAO,UAAYmV,EAAIA,IAAIwB,SAASzF,GAC1C,KAEFtS,KAA0B,UAApB1C,EAAMwa,WAAyB,QAAU,WAC/C5Z,MAAO,EACP8O,QAASA,EACTzK,SAAUjF,EAAMkF,WAChBlD,SAAU,IAnFlB,SAAmB2Y,EAASvY,EAAOwY,GAAQ,GACzC,IAAIha,EAAQ+Z,EAAQ1B,IAAIwB,UAAY,GAEpC,GAAwB,UAApBza,EAAMwa,WACRlY,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,EACLxZ,MAAAA,KAIJ0B,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,EACLxZ,MAAOA,EAAMoU,UAGZ,CACL,IAAI6F,EAAY,GAEZD,EACFC,EACEC,EAAQvW,EAAc6V,EAAYhY,GAASmK,GAClCA,GAAK3L,GAASkS,SAASvG,IAAMuG,SAASlS,EAAMoU,MAC/C,IAER6F,EAAYtW,EAAc6V,EAAYhY,IAAU,GAE3C4H,EAAQ6Q,KACXA,EAAY,IAGdA,EAAUjW,KAAKhE,EAAMoU,KAGvB6F,EAAYE,EAAKF,GAEjBvY,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,EACLxZ,MAAOia,MAwCSG,CAAU/B,EAAKsB,EAAa7K,OAMhDuL,EAAUC,IAEVC,EAAYC,GAAaH,GAEzBI,EAAOlW,EAAQnF,EAAMwa,YAErB,IAAIxa,EAAM0U,SADV,CAAC2F,KAAmBra,EAAM0U,SAG9B,GAAI1U,EAAMsb,OAAQ,CAChB,IAAIC,EAAkB,CACpBrN,OAAQ,OACR5I,GAAI,QAAUtF,EAAM8D,KACpB0X,UAAU,EACVlB,KAAOrB,IACL,IAAIwC,EAAQlU,EAAapF,GAAUA,EAAME,KAAKmF,WAE1C4E,EAAM6M,EAAIA,IAAIwB,SAASzF,GAc3B,OACEnV,gBAAC6b,GACClZ,IAAK,YAAcxC,EAAM8D,KAAO,IAAMsI,EACtC/F,KAAK,KACLf,GAAI,YAActF,EAAM8D,KAAO,IAAMsI,EAErCuP,OAAQrX,EAAQmX,EAAMG,SAAUxP,GAChC3C,OAAQ,IAnBZ,SAAoBzG,GAClB,IAAI9B,EAAUoD,EAAQmX,EAAMG,SAAU5Y,GAAQ,KAAOA,EAErDV,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK,WACL5B,MAAOM,KAYK2a,CAAWzP,GACzBF,KAAM,MACNmB,QAAQ,UACRyO,MAAO,IAENhB,EAAQ9a,EAAMsb,OAAQ,SAAU/O,GAC/B,OAAOxG,EAAYwG,EAAEyB,OAASzB,EAAEyB,OAC/BjB,IAAI,CAACnM,EAAOoM,KACb,IAAI/H,IAAW8W,EAAUnb,EAAMqE,WAAYrE,EAAMqE,SAEjD,OACEpF,gBAACmc,EAASC,MACRzZ,IAAK,gBAAkBxC,EAAM8D,KAAO,IAAMsI,EAAM,IAAMY,EACtDtB,QAAS,IAAM9K,EAAM8K,QAAQuN,EAAIA,IAAIwB,UACrCxV,SAAUA,GAETrE,EAAM0J,YASrB+Q,EAAOlW,EAAQnF,EAAMwa,YAEjB,CAACe,KAAoBvb,EAAM0U,SAD3B,CAAC6G,EAAiBlB,KAAmBra,EAAM0U,SAoBjD,SAASwH,IACHxC,IACF1Z,EAAMkc,WACD3X,EAAc3B,EAAK,UAAY5C,EAAM8D,KAAM,KAAMuF,IACpD/G,EAAS,CACPI,KAAM,aACNC,QAAS,CACPH,IAAKI,EAAK,UAAY5C,EAAM8D,KAAM,KAClClD,OAAO,MAxBjBgJ,EAAU,KACJuR,GAAazB,GACfC,EAAWwB,KAIfvR,EAAU,KACRtH,EAAS,CACPI,KAAM,aACNC,QAAS,CACPH,IAAKI,EAAK,UAAY5C,EAAM8D,KAAM,KAClClD,OAAO,MAGV,IAiBHgW,EACE,KACM8C,GACFwC,KAGJ,IACA,CAACxC,IAGH9C,EAAYsF,EAAU,IAAM,CAC1B3X,EAAc3B,EAAK,WAAa5C,EAAM8D,KAAM,KAAMuF,GAClD9E,EAAc3B,EAAK,QAAU5C,EAAM8D,KAAM,KAAMuF,GAC/C9E,EAAc3B,EAAK,QAAU5C,EAAM8D,KAAM,KAAMuF,GAC/C9E,EAAc3B,EAAK,UAAY5C,EAAM8D,KAAM,KAAMuF,KAyCnDuN,EACE,KACEiD,EAASpX,GAAQ0Z,EAAO,IAAI1Z,KAAQO,GAAOgS,IACvCzQ,EAAc6V,EAAYhY,IAzClC,WACE,IAAIga,EAAgB,KAEhBvB,EAAY,KAEhB,GAAwB,UAApB7a,EAAMwa,WACR4B,EAAgBA,EACd/M,EAAKuK,EAAOrN,GACHA,GAAKuG,SAASvG,EAAEyI,KAAgB6F,IACnC,GAERA,EAAYtW,EAAc6V,EAAYhY,IAAU,SAC3C,CACLga,EAAgB,GAEhBvB,EAAYtW,EAAc6V,EAAYhY,IAAU,GAEhD,IAAK,IAAI6H,EAAI,EAAGA,EAAI4Q,EAAUhW,OAAQoF,IAAK,CACzC,IAAIoS,EACFhN,EAAKuK,EAAOrN,GACHA,GAAKuG,SAASvG,EAAEyI,KAAgB6F,EAAU5Q,KAC7C,GAEH9E,EAAQkX,IACXD,EAAcxX,KAAKyX,IAKzB/Z,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,EACLxZ,MAAOwb,KASPE,IAGJ,IACA,CAAC/X,EAAc6V,EAAYhY,GAAQiH,IAGrCuN,EACE,KACE,IACEpC,EAAQxU,EAAMgD,KAAKA,MAAQ,IAC3B,MAAOvB,IAEToY,EAASpX,GAAQ0Z,EAAO,IAAI1Z,KAAQO,GAAOgS,IAE3C,IACE+E,EAAQ/Z,EAAMgD,KAAK8W,MAAQ,IAC3B,MAAOrY,MAEX,IACA,CAACzB,EAAMgD,OAGT,IAAI0R,EAAU7U,EAAM0c,QAAQ,IAAMlB,EAAK,IAEnCmB,GAAQ,EAEZ,IACEA,EAAqB,SAAb5P,EAAK6P,KACb,MAAOhb,IAET,OACE5B,gBAAC8T,IAAeI,UAAW/T,EAAM+T,WAC/BlU,uBAAK6G,MAAO,CAAEiS,QAAS,YAAchX,IAAKsZ,GACxCpb,uBACE6G,MAAO,CAAEgW,aAAc,SAGvB7c,gBAAC8c,OACC9c,gBAAC+c,GAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAC7Bnd,2BAGGG,EAAMid,aAAejd,EAAMid,aAAe,QAKjDpd,gBAAC8c,GAAIjW,MAAO,CAAEwW,eAAgB,aAsC5Brd,gBAAC+c,GAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAC7Bnd,2BACGG,EAAMmd,cACLtd,2BACEA,gBAACgQ,OACChQ,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBC,KAAMC,MAGzB3N,gBAACmG,EAAKC,SACJX,GAAI1C,EAAK,WAAa5C,EAAM8D,KAAM,KAClCtB,IAAKI,EAAK,WAAa5C,EAAM8D,KAAM,KACnC4C,MAAO,CAAEuJ,WAAY,QACrBnO,UAAU,eACVlB,MAAO2D,EACL3B,EAAK,WAAa5C,EAAM8D,KAAM,KAC9BuF,GAEFrH,SAAWP,IACTa,EAAS,CACPI,KAAM,mBACNC,QAAS,CACP+G,CAAC9G,EAAK,WAAa5C,EAAM8D,KAAM,MAC7BrC,EAAEd,OAAOC,MACX8I,CAAC9G,EAAK,QAAU5C,EAAM8D,KAAM,MAAO,EACnCsZ,QAAQ,MAId1a,KAAK,OACL4C,GAAI1C,EAAK,WAAawX,GACtBtW,KAAK,UACLP,YAAY,cAGd1D,gBAACuN,GACC1G,MAAO,CAAE8R,OAAQ,GACjBnL,QAAQ,UACR3B,QAASwQ,EACTxZ,KAAK,SACLuC,SAAUjF,EAAM+T,WAEhBlU,gBAACyN,IAAgBC,KAAM8P,GAAQC,KAAMtd,EAAM+T,cAG3C/T,EAAMud,QAAUvd,EAAMwd,SACtB3d,gBAACA,EAAMqN,cACJlN,EAAMud,QACL1d,gBAACuN,GACC9H,GAAG,aACHoB,MAAO,CAAE8R,OAAQ,GACjBnL,QAAQ,UACRvL,UAAU,OACV4J,QAAS1L,EAAMyd,aACf/a,KAAK,SACLuC,SAAUjF,EAAM0d,gBAEhB7d,gBAACyN,IAAgBC,KAAMoQ,KAEvB9d,gBAAC+d,SACCC,UAAU,MACVlC,OAAQ3B,EACR8D,UAAU,EACVnd,OAAO,aACP8I,OA5ZX,IAAMwQ,GAAkBD,eAkalBha,EAAMwd,QACL3d,gBAACuN,GACC9H,GAAG,aACHoB,MAAO,CAAE8R,OAAQ,GACjBnL,QAAQ,UACRvL,UAAU,OACV4J,QAAS1L,EAAM+d,aACfrb,KAAK,SACLuC,SAAUjF,EAAM0d,gBAEhB7d,gBAACyN,IAAgBC,KAAMyQ,KACvBne,gBAAC+d,SACCC,UAAU,MACVlC,OAAQzB,EACR4D,UAAU,EACVnd,OAAO,aACP8I,OApbX,IAAM0Q,GAAkBD,sBAocrCra,gBAAC4U,IACC3Q,KAAMlB,EAAK5C,EAAM8D,KAAM,KACvB4Q,QAASA,EACT1R,KAAMA,EACNgS,WAAYA,EACZD,oBAAqB/U,EAAM+U,oBAC3BkJ,UAAW/B,EACXtU,QAAS5H,EAAM+T,UACfkB,gBAAiB6E,IAAS3U,EAAQ2U,GAAQA,EAAKoE,MAAQ,EACvDpJ,gBAAiBgF,IAAS3U,EAAQ2U,GAAQA,EAAKqE,UAAY,EAC3DtJ,eACEiF,IAAS3U,EAAQ2U,GACbA,EAAKsE,SACL7Z,EAAc3B,EAAK,QAAU5C,EAAM8D,KAAM,KAAMuF,GAC/C9E,EAAc3B,EAAK,QAAU5C,EAAM8D,KAAM,KAAMuF,GAC/C,GAENuL,gBACEkF,IAAS3U,EAAQ2U,GACbA,EAAKuE,aACL9Z,EAAc3B,EAAK,QAAU5C,EAAM8D,KAAM,KAAMuF,GAC/C9E,EAAc3B,EAAK,QAAU5C,EAAM8D,KAAM,KAAMuF,GAC/C,MC5hBhB,SAASiV,GAAMte,GACb,IAAIqL,EAAU,GAEd,GAAIrB,EAAQhK,EAAMue,cAChB,IAAK,IAAItU,EAAI,EAAGA,EAAIjK,EAAMue,aAAa1Z,OAAQoF,IAAK,CAClD,IAAImC,EAAMpM,EAAMue,aAAatU,GAE7B,GAAID,EAAQoC,GACV,IAAK,IAAI8C,EAAI,EAAGA,EAAI9C,EAAIvH,OAAQqK,IAC9B7D,EAAQzG,KAAKwH,EAAI8C,SAGnB7D,EAAQzG,KAAKwH,QAIjBf,EAAQzG,KAAK5E,EAAMue,cAGrB,OACE1e,gBAACmG,EAAKwY,OAAMC,GAAI9B,GACd9c,gBAACmG,EAAK0Y,OAAMvK,UAAO4I,GAAI/c,EAAM2e,UAAY3e,EAAM2e,UAAY,GACxD3e,EAAMsK,MAAQtK,EAAMsK,MAAQ,QAC5BtK,EAAM4e,YAAc/e,wBAAMiC,UAAU,qBACpC9B,EAAM6e,MACLhf,yBAAOiC,UAAU,wBAAwB9B,EAAM6e,OAGnDhf,gBAAC+c,GAAIG,GAAI/c,EAAM8e,UAAY9e,EAAM8e,UAAY,GAC1C9e,EAAMiU,SACPpU,gBAACmG,EAAK8J,MAAKhO,UAAU,eAClBuJ,EAAQxG,OAAS,GAAKwG,EAAQmB,KAAK,SCjB9C,MAAMoD,GAAe5P,GAEjBH,gBAACgQ,GAAWxJ,KAAK,MACfxG,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBjH,KAAK,KAAKkH,KAAMyC,MAEnCnQ,gBAACmG,EAAKC,SACJS,MAAO,CACLuJ,WAAY,OACZiI,YAAa,OACbhI,WAAY,UACZC,SAAU,WAEZzN,KAAK,OACLZ,UAAU,eACVmD,SAAUjF,EAAMiF,SAChBnB,KAAM9D,EAAM8D,KACZlD,MAAOZ,EAAMY,OAAS,GACtB8K,QAAS1L,EAAM0L,UAEjB7L,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBjH,KAAK,KAAKkH,KAAMwR,OAqTzC,OAAe7c,EAfUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,KAGDE,KAC1BC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,OAKAP,CA/Sf,cAA4BrC,EAAMC,UAChCC,YAAYC,GACVC,MAAMD,GADWE,KAsDnB4C,kBAAqBE,IACnBA,EAAOsD,GAAOtD,GAAMoN,UAChB9J,GAAOtD,GAAMkI,OAAO,uBACpB,KAEJhL,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAMd,GAErC9C,KAAK6O,kBAGPsB,uBAA0BrN,IACxBA,EAAOsD,GAAOtD,GAAMoN,UAChB9J,GAAOtD,GAAMkI,OAAO,uBACpB,KAEJhL,KAAKF,MAAMuC,SAAS,SAAWrC,KAAKF,MAAM8D,KAAMd,GAEhD9C,KAAK6O,kBAGPuB,qBAAwBtN,IACtBA,EAAOsD,GAAOtD,GAAMoN,UAChB9J,GAAOtD,GAAMkI,OAAO,0BACpB,KAEJhL,KAAKF,MAAMuC,SAAS,OAASrC,KAAKF,MAAM8D,KAAMd,GAE9C9C,KAAK6O,kBAsCPwB,cAAiBC,IACf,MAAM3G,EAAIvD,GAAOkK,GAAMtF,OAAO,KAE9B,OAAY,GAALrB,GAAe,GAALA,EAAS,gBAAa4G,GAvHvCvQ,KAAKiC,MAAQ,CACXuO,SAAU,KACVC,eAAgB,KAChBC,aAAc,MAGhB1Q,KAAK6O,UAAYiQ,EAAEhQ,SAAS9O,KAAK6O,UAAUhK,KAAK7E,MAAO,KAGzD6O,YACE,GAAI7O,KAAKF,MAAM6Q,QAAS,CACtB,IAAIF,EAAiB,KAEjBC,EAAe,KAEnB,IACED,EAAiBzQ,KAAKF,MAAM2Q,eACxBrK,GAAOpG,KAAKF,MAAM2Q,gBAAgBG,SAClCvM,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OACrDkE,GACE/B,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACrD0O,SACF,KACJ,MAAOrP,IAET,IACEmP,EAAe1Q,KAAKF,MAAM4Q,aACtBtK,GAAOpG,KAAKF,MAAM4Q,cAAcE,SAChCvM,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OACnDkE,GACE/B,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACnD0O,SACF,KACJ,MAAOrP,IAETvB,KAAKkD,SAAS,CAAEuN,eAAAA,EAAgBC,aAAAA,QAC3B,CACL,IAAIF,EAAW,KAEf,IACEA,EAAWxQ,KAAKF,MAAM0Q,SAClBpK,GAAOpG,KAAKF,MAAM0Q,UAAUI,SAC5BvM,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OAC1CkE,GAAO/B,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAQ0O,SACzD,KACJ,MAAOrP,IAETvB,KAAKkD,SAAS,CAAEsN,SAAAA,KAkCpB1P,oBACEd,KAAK6O,YAGP5K,mBAAmBC,EAAWC,GAEzBnE,KAAKF,MAAM6Q,SACZtM,EAAcrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QACvCmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAC5CmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAUlC,KAAKiC,MAAMuO,UAE/DxQ,KAAK6O,YAIL7O,KAAKF,MAAM6Q,SACXtM,EAAc,SAAWrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QAClDmC,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACvDmC,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACnDlC,KAAKiC,MAAMwO,gBAEbzQ,KAAK6O,YAIL7O,KAAKF,MAAM6Q,SACXtM,EAAc,OAASrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QAChDmC,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACrDmC,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACjDlC,KAAKiC,MAAMyO,cAEb1Q,KAAK6O,YAUTrN,SACE,OAAIxB,KAAKF,MAAM6Q,QACT3Q,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAElCrF,uBAAKiC,UAAU,+BACZwE,GAAOpG,KAAKiC,MAAMwO,gBAAgBP,UAC/B9J,GAAOpG,KAAKiC,MAAMwO,gBAAgBzF,OAAO,uBACzC,KAEJrL,wBAAM6G,MAAO,CAAEqJ,WAAY,oBAC1BzJ,GAAOpG,KAAKiC,MAAMyO,cAAcR,UAC7B9J,GAAOpG,KAAKiC,MAAMyO,cAAc1F,OAAO,uBACvC,MAMRrL,uBACEiC,UAAU,8BACV4E,MAAO,CAAEqJ,WAAY,SAErBlQ,gBAACoR,IACCC,QACEhR,KAAKF,MAAMkR,QAAU5K,GAAOpG,KAAKF,MAAMkR,SAASJ,SAAW,KAE7DK,QACEjR,KAAKF,MAAMmR,QAAU7K,GAAOpG,KAAKF,MAAMmR,SAASL,SAAW,KAE7DC,WACE7Q,KAAKF,MAAM+Q,WACP7Q,KAAKF,MAAM+Q,WACX,sBAENxN,YACErD,KAAKF,MAAMuD,YACPrD,KAAKF,MAAMuD,YACX,kBAENmN,SAAUxQ,KAAKiC,MAAMwO,eACrBS,aAAa,EACbC,YACExR,gBAAC+P,IACChP,MAAOV,KAAKiC,MAAMwO,eAClB7M,KAAM,SAAW5D,KAAKF,MAAM8D,OAGhC9B,SAAU9B,KAAKmQ,uBACf4O,eAAe,WACfC,iBACA5N,gBACAC,iBACAC,cACAC,qBACAC,oBACA5N,KAAM,SAAW5D,KAAKF,MAAM8D,KAC5B8N,YAAa,WACbC,aAAc3R,KAAKqQ,cACnBuB,aAAa,SACbE,UAAW9R,KAAKiC,MAAMwO,eACtBsB,QAAS/R,KAAKiC,MAAMyO,aACpBsB,qBAAqB,IAEvBrS,wBAAMiC,UAAU,oBAAoB4E,MAAO,CAAEqJ,WAAY,kBAGzDlQ,gBAACoR,IACCC,QACEhR,KAAKiC,MAAMwO,eACPzQ,KAAKiC,MAAMwO,eACXzQ,KAAKF,MAAMkR,QACX5K,GAAOpG,KAAKF,MAAMkR,SAASJ,SAC3B,KAENK,QACEjR,KAAKF,MAAMmR,QAAU7K,GAAOpG,KAAKF,MAAMmR,SAASL,SAAW,KAE7DC,WACE7Q,KAAKF,MAAM+Q,WACP7Q,KAAKF,MAAM+Q,WACX,sBAENxN,YACErD,KAAKF,MAAMuD,YACPrD,KAAKF,MAAMuD,YACX,kBAENmN,SAAUxQ,KAAKiC,MAAMyO,aACrBQ,aAAa,EACbtN,KAAM,OAAS5D,KAAKF,MAAM8D,KAC1BqO,cACA8M,eAAe,WACfC,iBACA7N,YACExR,gBAAC+P,IACChP,MAAOV,KAAKiC,MAAMyO,aAClB9M,KAAM,OAAS5D,KAAKF,MAAM8D,OAG9B9B,SAAU9B,KAAKoQ,qBACfiB,iBACAC,cACAC,qBACAC,oBACAG,aAAc3R,KAAKqQ,cACnBqB,YAAa,WACbE,aAAa,SACbE,UAAW9R,KAAKiC,MAAMwO,eACtBsB,QAAS/R,KAAKiC,MAAMyO,aACpBsB,qBAAqB,KAMzBhS,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAElCrF,uBAAKiC,UAAU,+BACZwE,GAAOpG,KAAKiC,MAAMuO,UAAUN,UACzB9J,GAAOpG,KAAKiC,MAAMuO,UAAUxF,OAAO,uBACnC,MAMRrL,gBAACoR,IACCC,QACEhR,KAAKF,MAAMkR,QAAU5K,GAAOpG,KAAKF,MAAMkR,SAASJ,SAAW,KAE7DK,QACEjR,KAAKF,MAAMmR,QAAU7K,GAAOpG,KAAKF,MAAMmR,SAASL,SAAW,KAE7DC,WACE7Q,KAAKF,MAAM+Q,WAAa7Q,KAAKF,MAAM+Q,WAAa,sBAElDxN,YACErD,KAAKF,MAAMuD,YAAcrD,KAAKF,MAAMuD,YAAc,kBAEpDmN,SAAUxQ,KAAKiC,MAAMuO,SACrBU,aAAa,EACb9L,GAAIpF,KAAKF,MAAM8D,KACfhC,UAAU,eACVuP,YACExR,gBAAC+P,IAAYhP,MAAOV,KAAKiC,MAAMuO,SAAU5M,KAAM5D,KAAKF,MAAM8D,OAE5D+N,aAAc3R,KAAKqQ,cACnBvO,SAAU9B,KAAK4C,kBACfyO,iBACA0N,eAAe,WACfC,iBACA1N,cACAC,qBACAC,oBACAE,YAAa,WACbE,aAAa,SACbI,qBAAqB,OCjT7B,SAASiN,KACP,OACEtf,gBAACyN,IACC5G,MAAO,CAAE0Y,SAAU,WAAYC,KAAM,EAAGC,IAAK,GAC7C/R,KAAMwR,GACN1Y,KAAK,OAPDC,KAgNV,OAAepE,EAfUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,KAGDE,KAC1BC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,OAKAP,CApMf,cAAwBrC,EAAMC,UAC5BC,YAAYC,GACVC,MAAMD,GADWE,KAuFnB4C,kBAAqBE,IACnBA,EAAOA,EAAOsD,GAAOtD,GAAMkI,OAvGd,YAuGmC,KAEhDhL,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAMd,GAErC9C,KAAK6O,kBAGPsB,uBAA0BrN,IACxBA,EAAOA,EAAOsD,GAAOtD,GAAMkI,OA/Gd,YA+GmC,KAEhDhL,KAAKF,MAAMuC,SAAS,SAAWrC,KAAKF,MAAM8D,KAAMd,GAEhD9C,KAAK6O,kBAGPuB,qBAAwBtN,IACtBA,EAAOA,EAAOsD,GAAOtD,GAAMkI,OAvHd,YAuHmC,KAEhDhL,KAAKF,MAAMuC,SAAS,OAASrC,KAAKF,MAAM8D,KAAMd,GAE9C9C,KAAK6O,aAzGL7O,KAAKiC,MAAQ,CACXuO,SAAU,KACVC,eAAgB,KAChBC,aAAc,MAGhB1Q,KAAK6O,UAAYC,EAAS9O,KAAK6O,UAAUhK,KAAK7E,MAAO,KAGvDiE,mBAAmBC,EAAWC,GAEzBnE,KAAKF,MAAM6Q,SACZtM,EAAcrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QACvCmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAC5CmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAUlC,KAAKiC,MAAMuO,UAE/DxQ,KAAK6O,YAIL7O,KAAKF,MAAM6Q,SACXtM,EAAc,SAAWrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QAClDmC,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACvDmC,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACnDlC,KAAKiC,MAAMwO,gBAEbzQ,KAAK6O,YAIL7O,KAAKF,MAAM6Q,SACXtM,EAAc,OAASrE,KAAKF,MAAM8D,KAAMM,EAAUhC,QAChDmC,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACrDmC,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QACjDlC,KAAKiC,MAAMyO,cAEb1Q,KAAK6O,YAITA,YACE,GAAI7O,KAAKF,MAAM6Q,QAAS,CACtB,IAAIF,EAAiBrK,KAEjBsK,EAAetK,KAEnB,IACEqK,EAAiBzQ,KAAKF,MAAM2Q,eACxBrK,GAAOpG,KAAKF,MAAM2Q,eAlEb,YAmELpM,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OACrDkE,GACE/B,EAAc,SAAWrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OArElD,YAwEL,KACJ,MAAOX,IAET,IACEmP,EAAe1Q,KAAKF,MAAM4Q,aACtBtK,GAAOpG,KAAKF,MAAM4Q,aA7Eb,YA8ELrM,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OACnDkE,GACE/B,EAAc,OAASrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OAhFhD,YAmFL,KACJ,MAAOX,IAETvB,KAAKkD,SAAS,CAAEuN,eAAAA,EAAgBC,aAAAA,QAC3B,CACL,IAAIF,EAAWpK,KAEf,IACEoK,EAAWxQ,KAAKF,MAAM0Q,SAClBpK,GAAOpG,KAAKF,MAAM0Q,SA5Fb,YA6FLnM,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OAC1CkE,GAAO/B,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,OA9F5C,YA+FL,KACJ,MAAOX,IAETvB,KAAKkD,SAAS,CAAEsN,SAAAA,KA4BpB1P,oBACEd,KAAK6O,YAGPrN,SACE,OAAIxB,KAAKF,MAAM6Q,QACT3Q,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAElCrF,uBAAKiC,UAAU,+BACZwE,GAAOpG,KAAKiC,MAAMwO,gBAAgBP,UAC/B9J,GAAOpG,KAAKiC,MAAMwO,gBAAgBzF,OAxIjC,YAyID,GAEJrL,wBAAM6G,MAAO,CAAEqJ,WAAY,oBAC1BzJ,GAAOpG,KAAKiC,MAAMyO,cAAcR,UAC7B9J,GAAOpG,KAAKiC,MAAMyO,cAAc1F,OA7I/B,YA8ID,IAMRrL,uBAAKiC,UAAU,+BACbjC,gBAAC0f,IACC3e,MAAOV,KAAKiC,MAAMwO,eAClB1L,SAAU/E,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAE5Csa,UAAW3f,gBAACsf,SACZjU,OA1JK,WA2JLlJ,SAAU9B,KAAKmQ,yBAEjBxQ,wBAAMiC,UAAU,oBAAoB4E,MAAO,CAAEqJ,WAAY,kBAGzDlQ,gBAAC0f,IACC3e,MAAOV,KAAKiC,MAAMyO,aAClB3L,SAAU/E,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAC5Csa,UAAW3f,gBAACsf,SAEZjU,OArKK,WAsKLlJ,SAAU9B,KAAKoQ,wBAMnBpQ,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAElCrF,uBAAKiC,UAAU,+BACZwE,GAAOpG,KAAKiC,MAAMuO,UAAUN,UACzB9J,GAAOpG,KAAKiC,MAAMuO,UAAUxF,OAhLzB,YAiLH,IAMRrL,gBAAC0f,IACC3e,MAAOV,KAAKiC,MAAMuO,SAClBzL,SAAU/E,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,WAE5Csa,UAAW3f,gBAACsf,SACZjU,OA5LS,WA6LTlJ,SAAU9B,KAAK4C,0BCvERZ,EAfUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,KAGDE,KAC1BC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,OAKAP,CA5Hf,cAAuBrC,EAAMC,UAC3BC,YAAYC,GACVC,MAAMD,GAENE,KAAKiC,MAAQ,CACXsd,KAAM,GACNC,YAAa,GACbC,UAAW,KAGbzf,KAAK0f,UAAY/f,EAAMiB,YAGzB+M,SAAS5D,GACP,IAAIwV,EAAOvf,KAAKiC,MAAMsd,KAAKI,MAAM,GAEjCJ,EAAKK,OAAO7V,EAAG,GAEf/J,KAAKkD,SAAS,CAAEqc,KAAAA,IAEZvf,KAAKF,MAAM8D,MACb5D,KAAKF,MAAMuC,SACTrC,KAAKF,MAAM8D,KACXkb,EAAEjS,IAAI0S,EAAM,QAAQjT,KAAKtM,KAAKiC,MAAMwd,YAK1CI,WAAWC,GACT,IAAIP,EAAO,GAAGQ,OAAO/f,KAAKiC,MAAMsd,KAAMO,GAEtC9f,KAAKkD,SAAS,CAAEqc,KAAMT,EAAE7C,OAAOsD,EAAM,UAEjCvf,KAAKF,MAAM8D,MACb5D,KAAKF,MAAMuC,SACTrC,KAAKF,MAAM8D,KACXkb,EAAEjS,IAAI0S,EAAM,QAAQjT,KAAKtM,KAAKiC,MAAMwd,YAK1CO,QAAQF,IAERG,WAAWH,GACT,OAAOhB,EAAEtE,UAAUxa,KAAKiC,MAAMsd,KAAM,CAAC,OAAQO,EAAIlc,OAAS,EAG5D9C,oBACE,IAAI0e,EAAc,GAEdD,EAAO,GAEX,IAAK,IAAIxV,EAAI,EAAGA,EAAI/J,KAAKF,MAAMuF,QAAQV,OAAQoF,IAAK,CAClD,IAAImC,EAAMlM,KAAKF,MAAMuF,QAAQ0E,GAExB+U,EAAE7Z,QAAQiH,EAAIlM,KAAKF,MAAM8O,eAC5B4Q,EAAY9a,KAAK,CAAEd,KAAMsI,EAAIlM,KAAKF,MAAM8O,eAI5C,IAAIlO,EAAQ,GAEZ,IACEA,EAAQV,KAAKF,MAAMY,MACfV,KAAKF,MAAMY,MACXV,KAAKF,MAAMoC,MAAMlC,KAAKF,MAAM8D,MAC5B5D,KAAKF,MAAMoC,MAAMlC,KAAKF,MAAM8D,MAC5B,GACJ,MAAOrC,IAET,IAAI2e,EAAIxf,EAAQiC,OAAOjC,GAAO4I,MAAMtJ,KAAKiC,MAAMwd,WAAa,GAE5D,IAAK,IAAI1V,EAAI,EAAGA,EAAImW,EAAEvb,OAAQoF,IAAK,CACjC,IAAImC,EAAMgU,EAAEnW,GAEP+U,EAAE7Z,QAAQiH,IACbqT,EAAK7a,KAAK,CAAEd,KAAMsI,IAItBlM,KAAKkD,SAAS,CAAEsc,YAAAA,EAAaD,KAAAA,IAG/B/d,SACE,OACE7B,gBAACwgB,IACCC,eAAgB,EAChBC,kBAAmB,mBACnB5e,IAAKzB,KAAK0f,UACVH,KAAMvf,KAAKiC,MAAMsd,KACjBna,GAAIpF,KAAKF,MAAM8D,KACf0c,iBAAiB,uBACjB3c,WAAY,CAAC,QAAS,OACtB4c,gBACEvgB,KAAKF,MAAMuD,YACPrD,KAAKF,MAAMuD,YACX,+BAENmd,SAAUxgB,KAAKF,MAAM2gB,aACrBjB,YAAaxf,KAAKiC,MAAMud,YACxB7R,SAAU3N,KAAK2N,SAAS9I,KAAK7E,MAC7BigB,WAAYjgB,KAAKigB,WAAWpb,KAAK7E,MACjCggB,QAAShgB,KAAKggB,QAAQnb,KAAK7E,MAC3B6f,WAAY7f,KAAK6f,WAAWhb,KAAK7E,cCsL1BgC,EAfUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,KAGDE,KAC1BC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,OAKAP,CA9Qf,cAA0BrC,EAAMC,UAC9BC,YAAYC,GACVC,MAAMD,GADWE,KAYnBoO,cAAiBC,IACf,IAAKpJ,EAAQoJ,GAAS,CACpB,GAAIvE,EAAQ9J,KAAKF,MAAMwO,aAAc,CACnC,IAAIlE,EAAQ,GAERqV,EAAYzf,KAAKF,MAAM2f,UAAYzf,KAAKF,MAAM2f,UAAY,MAE9D,IAAK,IAAI1V,EAAI,EAAGA,GAAK/J,KAAKF,MAAMwO,YAAY3J,OAAS,EAAGoF,IACtDK,EAAM1F,KAAK2J,EAAOrO,KAAKF,MAAMwO,YAAYvE,KAG3C,OAAOK,EAAMkC,KAAKmT,GAElB,OAAOpR,EAAOrO,KAAKF,MAAMwO,aAI7B,kBAgEFxM,SAAYyM,IACV,GAAIvO,KAAKF,MAAM8D,KACb,IAEI5D,KAAKF,MAAMuC,SACTrC,KAAKF,MAAM8D,KAFX5D,KAAKF,MAAMoK,WAGX2C,EAAI0B,EAAgBvO,KAAKF,MAAM8O,aAK/BL,EAAevO,KAAKF,MAAM8O,cAG9B,MAAOrN,GACPvB,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAM,MAGzC5D,KAAK6O,kBAGP6R,UAAY,KACV1gB,KAAKkD,SAAS,CAAE4K,MAAO9N,KAAKiC,MAAM6L,QAhHlC9N,KAAKiC,MAAQ,CACXwM,aAAc,KACdpJ,QAAS,GACTyI,MAAM,GAGR9N,KAAK6O,UAAYC,EAAS9O,KAAK6O,UAAUhK,KAAK7E,MAAO,KAuBvD6O,YACE,IAAItM,EAAM,KAENkM,EAAe,KAEnB,GAAIzO,KAAKF,MAAMY,MACb6B,EAAMvC,KAAKF,MAAMY,WAIjB,GAFA6B,EAAM8B,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAU,GAEtDlC,KAAKF,MAAMoK,WAAY,CACzBuE,EAAe,GAEf,IAAK,IAAI1E,EAAI,EAAGA,EAAI/J,KAAKF,MAAMuF,QAAQV,OAAQoF,IAC7C,IAAK,IAAIiF,EAAI,EAAGA,EAAIzM,EAAIoC,OAAQqK,IAAK,CACnC,IAAIC,EAAMjP,KAAKF,MAAMuF,QAAQ0E,GAEzBmF,EAAM3M,EAAIyM,GAEVrM,OAAOsM,EAAIjP,KAAKF,MAAM8O,eAAiBjM,OAAOuM,IAChDT,EAAa/J,KAAKuK,SAKxBR,EAAeU,EACbnP,KAAKF,MAAMuF,QACX,SAAUgH,GACR,OAAO1J,OAAO0J,EAAErM,KAAKF,MAAM8O,eAAiBrM,GAC5CsC,KAAK7E,OAKbyO,EACG5I,EAAY4I,IAAkBM,EAAON,GAA+B,KAAfA,EAExDzO,KAAKkD,SAAS,CACZuL,aAAAA,IAIJxK,mBAAmBC,EAAWC,GAEzBC,EACCC,EAAcrE,KAAKF,MAAM8D,KAAMM,EAAUhC,OACzCmC,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,SAE3CkC,EACCpE,KAAKiC,MAAMwM,aACXpK,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,SAG5ClC,KAAK6O,YAIT/N,oBACEd,KAAK6O,YA4BPrN,SACE,IAAI6D,EAAU,GACd,IACE,IAAK,IAAI0E,EAAI,EAAGA,EAAI/J,KAAKF,MAAMuF,QAAQV,OAAQoF,IAAK,CAClD,IAAIiF,EAAIhP,KAAKF,MAAMuF,QAAQ0E,GAEvB/J,KAAKF,MAAM2P,SACbT,EAAEhP,KAAKF,MAAM8D,MAAQsB,EAAMvC,OAAOqM,EAAEhP,KAAKF,MAAM8D,SAEjDyB,EAAQX,KAAKsK,IAEf,MAAOzN,IAET,OAAIvB,KAAKF,MAAMiF,UAAY/E,KAAKF,MAAMkF,gBACxBoJ,cAAcpO,KAAKiC,MAAMwM,cAGnCzO,KAAKF,MAAM6gB,UAEXhhB,gBAACA,EAAMqN,cACLrN,gBAAC8c,UACGzc,KAAKF,MAAMkF,YACXrF,gBAAC+c,KAAII,GAAG,IAAID,GAAG,IAAID,GAAG,IAAID,GAAG,KAC3Bhd,gBAACuN,QACC1K,KAAK,SACLZ,UAAU,kCACV4J,QAASxL,KAAK0gB,WAEd/gB,gBAACyN,IAAgBjH,KAAK,KAAKkH,KAAMC,gBAKvC3N,gBAAC+c,KAAII,GAAG,KAAKD,GAAG,KAAKD,GAAG,IAAID,GAAG,OAC5B3c,KAAKiC,MAAMwM,cACX5I,EAAY7F,KAAKiC,MAAMwM,eACvBxJ,EAAQjF,KAAKiC,MAAMwM,cAEhB,GADAzO,KAAKoO,cAAcpO,KAAKiC,MAAMwM,gBAItC9O,gBAACkO,OAAM1H,KAAK,KAAK2H,KAAM9N,KAAKiC,MAAM6L,KAAMC,OAAQ/N,KAAK0gB,WACnD/gB,gBAACihB,aAAY3S,eAAY1E,OAAQvJ,KAAK0gB,WACpC/gB,gBAACkO,MAAMK,WAAOlO,KAAKF,MAAMuD,aAAe,UAE1C1D,gBAACkhB,eACClhB,gBAACmhB,IACC5P,eACA9L,GAAIpF,KAAKF,MAAMsF,GAAKpF,KAAKF,MAAMsF,GAAKpF,KAAKF,MAAM8D,KAC/CqZ,gBACAxN,OAAQzP,KAAKF,MAAM2P,OACnBsR,QAAS/gB,KAAKF,MAAMoK,WACpB7G,YACErD,KAAKF,MAAMuD,YAAcrD,KAAKF,MAAMuD,YAAc,QAEpD2d,eAAgBhhB,KAAKoO,cACrB6S,eAAiB5S,GAAWA,EAAOrO,KAAKF,MAAM8O,aAC9CsS,iBAAkB,IAAM,uBACxBxgB,MAAOV,KAAKiC,MAAMwM,aAClB3M,SAAU9B,KAAK8B,SACfuD,QAASA,EACT8b,WAAYnhB,KAAKF,MAAMiF,cAQjCpF,gBAACmhB,IACCM,iBAAkBC,SAASC,KAC3BC,aAAa,QACbC,OAAQ,CACNC,WAAaC,QACRA,EACH1R,WAAY,UACZC,SAAU,UACVqI,OAAQ,OAEVqJ,KAAOC,QACFA,EACH5R,WAAY,UACZC,SAAU,UACVqI,OAAQ,oBAEVuJ,iBAAmBH,QACdA,EACHxb,MAAO,UAEP4b,OAAQ,YAEVze,YAAcqe,QACTA,EACH1R,WAAY,UACZC,SAAU,YAEZ8R,WAAaL,QACRA,EACH7R,WAAY,SAEdmS,gBAAkBN,QACbA,EACH1R,WAAY,UACZC,SAAU,YAEZ5B,OAASqT,QACJA,EACH1R,WAAY,UACZC,SAAU,YAEZgS,eAAgB,CAACP,EAAMzf,SAClByf,EACHI,OAAQ,UACR5b,MAAyB,aAG7BtE,UAAU,oBAEVsP,eACA9L,GAAIpF,KAAKF,MAAMsF,GAAKpF,KAAKF,MAAMsF,GAAKpF,KAAKF,MAAM8D,KAC/CqZ,gBACAxN,OAAQzP,KAAKF,MAAM2P,OACnBsR,QAAS/gB,KAAKF,MAAMoK,WACpB7G,YAAarD,KAAKF,MAAMuD,YAAcrD,KAAKF,MAAMuD,YAAc,QAC/D2d,eAAgBhhB,KAAKoO,cACrB6S,eAAiB5S,GAAWA,EAAOrO,KAAKF,MAAM8O,aAC9CsS,iBAAkB,IAAM,uBACxBxgB,MAAOV,KAAKiC,MAAMwM,aAClB3M,SAAU9B,KAAK8B,SACfuD,QAASA,EACT8b,WAAYnhB,KAAKF,MAAMiF,uBCpPtBmd,GAAcpiB,GACrB,IAAKqiB,EAASC,GAAc5a,GAAS,IAEhC6a,EAAaC,GAAkB9a,GAAS,IAExC+a,EAAeC,GAAoBhb,GAAS,IAE5Cib,EAAiBC,GAAsBlb,GAAS,GAEjDI,EAAOP,EAAapF,GAAUA,EAAM2F,OAAS,GAE7C1F,EAAQmF,EAAapF,GAAUA,EAAME,KAAKD,QAAU,GAEpDygB,EAAatb,EAAapF,GAAUA,EAAME,KAAKwgB,aAAe,GAI9DxZ,GAFY9B,EAAapF,GAAUA,EAAME,KAAKmF,WAErCD,EAAapF,GAAUA,EAAME,KAAKgH,SAAW,IAEtD/G,EAAWyF,KAEV+a,EAAMC,GAAWrb,EAAS,KAE1Bsb,EAAUC,GAAevb,EAAS,CACrCsb,SAAU,GACVvG,KAAM,GACN9T,SAAU,MAGRua,cACFA,EADEnP,UAEFA,EAFEoP,SAGFA,EAHEC,SAIFA,EAJEle,WAKFA,EALEme,SAMFA,EANE/d,GAOFA,EAPEge,SAQFA,GACEtjB,GAECgE,EAAUuf,GAAe7b,EAASxC,GAqNvC,OAnNA0E,EAAU,KACR2Z,EAAYre,IACX,CAACA,IA0BJ0E,EAAU,MAoGV,WACE,IAAIzB,EAAMtB,QAAQC,IAAIC,kBAAoB,oBAEtCxB,EAAU,CACZvC,KAAMoF,EAAW,CACfib,SAAAA,EACA/d,GAAAA,IAEFgD,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,GAGFya,GAAmB,GAEnBna,EAAMlD,GACHmD,KAAMC,IACL,IAAI6a,EAAc7a,EAAS3F,KAAKA,MAAQ,GAEpCsgB,IACFE,EAAY7a,SAAWmS,EAAQ0I,EAAY7a,SAAU,SAAU4D,GAC7D,MAAiB,SAAVA,EAAEkX,QAIbR,EAAYO,GAEZZ,GAAmB,KAEpB7Z,MAAOC,IACN0a,EAAmB1a,EAAO1G,GAE1BsgB,GAAmB,KAnIvBe,IACC,IAEH/Z,EAAU,KACR,IAAIga,EAAe,GAEnB,IACEA,EAAeZ,EAASvG,KAAKjT,MAAM,KACnC,MAAO/H,IAET,IAAIoiB,EAAY,GAEhB,IACEA,EAAY/b,EAAK8E,KAAK6P,KAAKjT,MAAM,KACjC,MAAO/H,IAET,IAAIqiB,GAAa,EAEbC,GAAW,EAEf,IAAK,IAAI9Z,EAAI,EAAGA,EAAI4Z,EAAUhf,OAAQoF,KAEjC8Z,GACDF,EAAU5Z,IACV3F,EAAQzB,OAAOghB,EAAU5Z,IAAI+Z,OAAOvgB,cAAe,WAEnDsgB,GAAW,EAEXD,GAAa,EAEbxhB,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK,gBACL5B,MAAOiC,OAAOghB,EAAU5Z,IAAI+Z,OAAOvgB,kBAM3C,IAAKsgB,EACH,IAAK,IAAI9Z,EAAI,EAAGA,EAAI2Z,EAAa/e,OAAQoF,IACvC,IAAK,IAAIiF,EAAI,EAAGA,EAAI2U,EAAUhf,OAAQqK,IAElC0U,EAAa3Z,IACb4Z,EAAU3U,IACVrM,OAAO+gB,EAAa3Z,IAAI+Z,OAAOvgB,eAC7BZ,OAAOghB,EAAU3U,IAAI8U,OAAOvgB,gBAC7BqgB,IAEDA,GAAa,EAEbxhB,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK,gBACL5B,MAAOiC,OAAOghB,EAAU3U,IAAI8U,OAAOvgB,mBAS5C0B,EAAQ6d,EAASA,WAAaA,EAASra,SAAS9D,OAAS,GAAKif,GAElD9f,IAAakB,GAC1Bqe,GAAY,GAEZjhB,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAK,WAAY5B,MAAOoiB,EAASA,SAASS,SAGvDF,GAAY,IAEb,CAACP,IAEJpZ,EAAU,KACJ6Y,IAAkBtd,EAAQ0d,IAC5BH,GAAiB,IAElB,CAACG,IAEJjZ,EAAU,MACJ6Y,GAAkB1O,GAAcsO,IAClCK,GAAiB,GAEbvd,EAAQ0d,IACVK,GAAiBA,MAGpB,CAACb,EAASQ,EAAY9O,IAyFrB4O,EAAwB9iB,gBAACqG,SAG3BrG,gBAAC8T,IAAeI,UAAWA,GAAa0O,GACtC5iB,gBAACokB,OACCpkB,gBAACokB,EAAK5V,UACJxO,gBAACokB,EAAK7V,OAAM4R,IAAI,MACbgD,EAASA,SAASlf,MAAQ,wBAE7BjE,gBAACokB,EAAKnU,WACF9L,GACAnE,gBAAC8c,OACC9c,gBAAC+c,GAAII,GAAG,KACNnd,gBAACmG,EAAKwY,OAAMC,GAAI9B,GACd9c,gBAAC+c,GAAII,GAAG,KACNnd,gBAACmG,EAAK0Y,qBACG7e,wBAAMiC,UAAU,sBAG3BjC,gBAAC+c,GAAII,GAAG,KACNnd,gBAACqkB,IACCpgB,KAAK,oBACLyB,QAASyd,EAASra,SAClBgX,UAAU,MACVnR,YAAa,CAAC,QACdM,YAAY,WAKlBjP,gBAACmG,EAAKwY,OAAMC,GAAI9B,GACd9c,gBAAC+c,GAAII,GAAG,KACNnd,gBAACmG,EAAK0Y,wBAGR7e,gBAAC+c,GAAII,GAAG,KACNnd,gBAACuH,IACCxG,MAAOwB,EAAM+hB,WACbrgB,KAAK,sBACLwB,GAAG,2BAMXzF,gBAAC+c,GAAII,GAAG,KACNnd,gBAACmG,EAAKwY,OAAMC,GAAI9B,GACd9c,gBAAC+c,GAAII,GAAG,IAAItW,MAAO,CAAEgW,aAAc,KACjC7c,gBAACmG,EAAK0Y,wBAGR7e,gBAAC+c,GAAII,GAAG,KACNnd,gBAACukB,IACC1hB,KAAK,WACL2hB,YACAvgB,KAAK,mBACLwB,GAAG,mBACHE,KAAK,UAQjB3F,gBAAC4Z,IACCzW,KAAM8f,EACN/O,UAAWwO,EACXze,KAAMlB,EAAK5C,EAAMqjB,SAAU,KAC3BrO,WAAW,KACXmI,cAAc,EACdpI,qBAAqB,EACrBmH,SAvHZ,WACE,IAAI/T,EAAMtB,QAAQC,IAAIC,kBAAoB,aAEtC2N,EAAU,CACZ,OACA,OACA,WACA,UACA,eACA,iBACA,gBAGE4P,EAAI,GAER,IACEA,EAAIC,EAAkBlb,EAAQqL,EAAS9R,EAAK5C,EAAMqjB,SAAU,MAC5D,MAAO5hB,IAET,IAAI2K,EAAM,CACRiX,SAAAA,EACA/d,GAAAA,KACGgf,GAGD/e,EAAU,CACZvC,KAAMoF,EAAWgE,GACjB9D,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,GAGFqa,GAAe,GAEf/Z,EAAMlD,GACHmD,KAAMC,IACLoa,EAAQpa,EAAS3F,KAAKA,MAEtBwf,GAAe,KAEhBzZ,MAAOC,IACN0a,EAAmB1a,EAAO1G,GAE1BkgB,GAAe,MA6ET9N,QAAS,CACP,CACExG,OAAQ,OACR5I,GAAI,OACJkf,SAAWjb,GAAMA,EAAEqD,MAErB,CACEsB,OAAQ,UACR5I,GAAI,OACJkf,SAAWjb,GAAMA,EAAEkT,MAErB,CACEvO,OAAQ,YACR5I,GAAI,WACJkf,SAAWjb,GAAMA,EAAEyZ,UAErB,CACE9U,OAAQ,SACR5I,GAAI,WACJkf,SAAWjb,GAAMA,EAAEZ,UAErB,CACEuF,OAAQ,WACR5I,GAAI,UACJkf,SAAWjb,GAAMA,EAAEkb,SAErB,CACEvW,OAAQ,UACR5I,GAAI,eACJkf,SAAWjb,GACTA,EAAEmb,cACFpe,GAAOiD,EAAEmb,cAAcxZ,OAAO,qBAElC,CACEgD,OAAQ,QACR5I,GAAI,iBACJkf,SAAWjb,GACTA,EAAEob,gBACFre,GAAOiD,EAAEob,gBAAgBzZ,OAAO,qBAGpC,CACEgD,OAAQ,UACR5I,GAAI,eACJkf,SAAWjb,GACTA,EAAEqb,cACFte,GAAOiD,EAAEqb,cAAc1Z,OAAO,qBAElC,CACEgD,OAAQ,WACR5I,GAAI,aACJkf,SAAWjb,GAAM1J,gBAACuH,IAAUxG,MAAO2I,EAAE4a,WAAYjf,qBAKzDrF,gBAAC8c,GAAI7a,UAAU,QACbjC,gBAAC+c,OACC/c,gBAACuN,GACC1K,KAAK,SACLZ,UAAU,6CACV4J,QA7Nd,SAAgBtL,GACdgjB,GAAYA,kBAgOApf,GACAnE,gBAACuN,GACC1K,KAAK,SACLZ,UAAU,8CACV4J,QA7VhB,SAAgBtL,IACTgC,EAAMyiB,mBAAqB1f,EAAQ/C,EAAMyiB,mBAC5CviB,EAAS,CACPI,KAAM,cACNC,QAAS,wBAUX+f,GAAiB,GAEjBJ,GAAW,GAEX3W,WAAW,IAAM2W,GAAW,GAAQ,KAEpCa,GAAYA,sBC9FlB,SAAS2B,GAAU9kB,GACjB,OAAOH,gBAACklB,oBAAc/kB,yBCCxB,MAAMglB,GAAWC,iBAAI;;;;;;IASrB,SAAS/e,KACN,OAAOrG,gBAACsG,IAAWC,MAAO,OAAQ6e,IAAKD,GAAU3e,KAAM,KCkG1D,OAAenE,EAxBUC,KACvBC,MAAOD,EAAME,KAAKD,OAAS,GAC3BoF,UAAWrF,EAAME,KAAKmF,WAAa,KAGTlF,KAC1BC,SAAU,CAACC,EAAKC,IACdH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,KAGbyiB,aAAc,CAAC1iB,EAAKC,IAClBH,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAKI,EAAKC,OAAOL,GAAM,KACvB5B,MAAO6B,OAKAP,CAtGf,cAAmBrC,EAAMC,UACvBC,YAAYC,GACVC,MAAMD,GADWE,KAQnB4C,kBAAqBE,IACnB9C,KAAKF,MAAMuC,SAASrC,KAAKF,MAAM8D,KAAMd,EAAKmiB,KAE1CjlB,KAAKF,MAAMklB,aAAa,YAAchlB,KAAKF,MAAM8D,KAAMd,SAYzDyG,OAAS,KACPvJ,KAAKkD,SAAS,CAAEyF,MAAO3I,KAAKiC,MAAM0G,QArBlC3I,KAAKiC,MAAQ,CACX0G,MAAM,GAUV7H,oBACE,IACEd,KAAKF,MAAMuC,SACTrC,KAAKF,MAAM8D,KACX5D,KAAKF,MAAMwH,UAAU,YAActH,KAAKF,MAAM8D,MAAMqhB,KAEtD,MAAO1jB,KAOXC,SACE,IAAIe,EAAM,GAEV,IACEA,EAAM8B,EAAcrE,KAAKF,MAAM8D,KAAM5D,KAAKF,MAAMoC,QAAU,GAC1D,MAAOX,IAET,OAGE5B,gBAACA,EAAMqN,cACJhN,KAAKiC,MAAM0G,KACVhJ,uBACE6G,MAAO,CACL0Y,SAAU,QACVE,IAAK,MACL8F,MAAO,MACPC,OAAQ,MACRhG,KAAM,MACN7G,OAAO,MAGT3Y,gBAACylB,IACClf,MAAO3D,EACP8iB,iBAAkBrlB,KAAK4C,oBAEzBjD,gBAACuN,GACC1G,MAAO,CAAE8e,UAAU,GAAIC,gBAAiBhjB,EAAKqV,OAAQ,GACrDhW,UAAU,kBACV4J,QAASxL,KAAKuJ,OACd/G,KAAK,oBAMT7C,gBAACuN,GACC1G,MAAO,CAAE8R,OAAQ,EAAGiN,gBAAiBhjB,EAAKqV,OAAQ,GAClDhW,UAAU,kBACV4J,QAASxL,KAAKuJ,OACd/G,KAAK,gCCtCRgjB,GAAS1lB,GAChB,IAAKyC,EAAKkjB,GAAUje,EAAS,KAExBE,EAASC,GAAcH,GAAS,IAEjC0C,WACFA,EADEoE,YAGFA,EAHEmR,UAIFA,EAJE3K,WAKFA,EALE1P,GAMFA,EANEmW,MAOFA,GACEzb,EAEAqD,EAAaT,EAAK5C,EAAM8D,KAAM,KAE9BsW,EAAaxX,EAAK,YAAcS,EAAY,KAE5Cf,EAAWyF,IAEXD,EAAOP,EAAapF,GAAUA,EAAM2F,OAAS,GAE7C1F,EAAQmF,EAAapF,GAAUA,EAAME,KAAKD,QAAU,GAEpDiH,EAAS9B,EAAapF,GAAUA,EAAME,KAAKgH,SAAW,GAEtD7B,EAAYD,EAAapF,GAAUA,EAAME,KAAKmF,YAAc,GA2HhE,OAvGAoC,EAAU,KACR,IAAIzB,EAAMtB,QAAQC,IAAIC,kBAAoB,IAAM/G,EAAMmI,KAElDyd,QAAEA,GAAYrB,EAAkBlb,EAAQ,GAAIhG,GAE5CL,EAAOoF,EAAW,CACpByd,KAAM7Q,EACNtE,SAAU,CAACpL,GACXsgB,QAAAA,EACAE,KAAM,EACNrQ,KAAM,KACHgG,IAGDlW,EAAU,CACZ+C,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,EACAnF,KAAAA,GAEF6E,GAAW,GAEXY,EAAMlD,GACHmD,KAAMqd,IACLJ,EAAOI,EAAK/iB,KAAKA,KAAKA,KAAK,IAC3B6E,GAAW,KAEZkB,MAAOC,IACNnB,GAAW,MAEd,CAACvC,IA0EFzF,gBAACA,EAAMqN,eACJzK,GAAQsD,EAAYtD,IAAS0C,EAAQ1C,GAclCmF,EACF/H,gBAACqG,SAED,GAhBA,CA5HN,SAAuBqI,GACrB,GAAIvE,EAAQwE,GAAc,CACxB,IAAIlE,EAAQ,GAEZqV,EAAYA,GAAa,MAEzB,IAAK,IAAI1V,EAAI,EAAGA,GAAKuE,EAAY3J,OAAS,EAAGoF,IACvCsE,EAAOC,EAAYvE,MAAQlE,EAAYwI,EAAOC,EAAYvE,MAC5DK,EAAM1F,KAAK2J,EAAOC,EAAYvE,KAIlC,OAAOK,EAAMkC,KAAKmT,GAElB,OAAOpR,EAAOC,GAAeD,EAAOC,GAAe,GA+G/CF,CAAc7L,IACbzC,EAAMkF,YACLrF,gBAACuN,GACCC,QAAQ,OACRhH,KAAK,KACLqF,QAhFZ,SAAoBnC,GAclB,GAbAoc,EAAO,MAEHK,EAAShmB,EAAM8O,cACjBmX,OAAOC,KAAKlmB,EAAM8O,aAAa/B,IAAI,SAAUvK,EAAKwK,GAGhD1K,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAJHxC,EAAM8O,YAAYtM,GAIL5B,MAAO,UAK9BwJ,EAAY,CACd,IAAIyQ,EAAYC,EAAQvW,EAAclB,EAAYjB,GAAQ,SAAUmK,GAClE,OAAOA,GAAKhD,IAGV4c,EAAgBrL,EAClBvW,EAAc6V,EAAYhY,GAC1B,SAAUmK,GACR,OAAOA,GAAKhD,IAIZ6S,EAAgBtB,EAClBvW,EAAc6V,EAAY5S,GAC1B,SAAU+E,GACR,OAAOA,EAAEyI,IAAezL,IAI5BjH,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKa,EAAYzC,MAAOia,KAGrCvY,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAK4X,EAAYxZ,MAAOulB,KAGrC7jB,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,EACLxZ,MAAOwb,UAIX9Z,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAKa,EAAYzC,MAAO,QAGrC0B,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAK4X,EAAYxZ,MAAO,QAGrC0B,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,EACLxZ,MAAO,OAeiBmE,KAAK,KAAMtC,EAAIuS,IACnCtO,MAAO,CAAE0f,aAAc,MAEvBvmB,gBAACyN,IAAgBjH,KAAK,KAAKD,MAAM,UAAUmH,KAAMO,QAa/D,SAASuY,GAAiBrmB,GACxB,IAAIoK,WAAEA,EAAFuE,aAAcA,EAAdH,YAA4BA,EAA5BmR,UAAyCA,GAAc3f,EAEvDsC,EAAWyF,IAEXD,EAAOP,EAAapF,GAAUA,EAAM2F,OAAS,GAE7C1F,EAAQmF,EAAapF,GAAUA,EAAME,KAAKD,QAAU,GAEpDiH,EAAS9B,EAAapF,GAAUA,EAAME,KAAKgH,SAAW,GAEtD7B,EAAYD,EAAapF,GAAUA,EAAME,KAAKmF,YAAc,IAE3DkS,EAASC,GAAcjS,GAAS,IAEhCsG,EAAMsY,GAAW5e,GAAS,IAE1BE,EAASC,GAAcH,GAAS,IAEhC6a,EAAaC,GAAkB9a,GAAS,IAIxC6e,EAAgBC,GAAqB9e,EAAS,KAE9C9G,EAAO+G,GAAYD,EAAS0C,EAAa,GAAK,KAE9Cqc,EAAMC,GAAWhf,EAAS,IAE1BmB,EAAMC,IAAWpB,GAAS,IAE1Bif,GAAaC,IAAkBlf,EAAS,GAEzCrE,GAAaT,EAAK5C,EAAM8D,KAAM,KAE9BsW,GAAaxX,EAAK,YAAcS,GAAY,MAE3CiH,GAAOuc,IAAYnf,EACtB1H,EAAMsK,MAAQtK,EAAMsK,MAAQ/F,EAAclB,GAAYjB,IAGpD6Y,GAAUC,IAEVC,GAAYC,GAAaH,KAExBjY,GAAMwR,IAAW9M,EAAS,KAE1BoS,GAAMC,IAAWrS,EAAS,IAE3BsN,GAAahV,EAAMgV,WAAahV,EAAMgV,WAAa,KAEvD,SAAS1G,GAAcC,GACrB,IAAIjE,EAAQ,GAIZ,GAFAqV,EAAYA,GAAa,MAErB3V,EAAQwE,GAAc,CACxB,IAAK,IAAIvE,EAAI,EAAGA,GAAKuE,EAAY3J,OAAS,EAAGoF,IACvCsE,EAAOC,EAAYvE,MAAQlE,EAAYwI,EAAOC,EAAYvE,MAC5DK,EAAM1F,KAAK2J,EAAOC,EAAYvE,KAIlC,OAAOK,EAAMkC,KAAKmT,GAElB,OAAOpR,EAAOC,GAAeD,EAAOC,GAAe,GAsDvD,IAoDI6M,GAAM,CApDW,CACnBnN,OAAQ,IACR5I,GAAIjC,GAAa,SACjBiX,KAAOrB,IACL,IAAIsB,EAAchT,EAAapF,GAAUA,EAAME,KAAKD,OAEhDsN,GAAU,EAEVjN,EAAM8B,EAAc6V,GAAYG,GAEpC,IAII7K,EAHGtF,EAIDsQ,EAAUjY,EAAK,SAAU8J,GACvB,OAAOA,IAAM0M,EAAIA,IAAIwB,SAASzF,OAC1B,EALEvS,IAAQwW,EAAIA,IAAIwB,SAASzF,IAOrC,MAAOvT,IAET,OAAKwX,EAAIA,IAAIwB,SAASzF,IAKpBnV,gBAACmG,EAAKwJ,OACJC,UACAnK,GAAI1C,EAAKS,GAAa,UAAY4V,EAAIA,IAAIwB,SAASzF,IAAa,KAChElR,KAAMlB,EACJS,GAAa,UAAY4V,EAAIA,IAAIwB,SAASzF,IAC1C,KAEFtO,MAAO,CAAE8R,OAAQ,KACjB9V,KAAO0H,EAAuB,WAAV,QACpBxJ,MAAO,EACP8O,QAASA,EACTzK,SAAUjF,EAAMkF,WAChBlD,SAAU,IAxFlB,SAAmB2Y,EAASJ,EAAaK,GAAQ,GAC/C,IAAIkM,EAASnM,EAAQ1B,IAAIwB,UAAY,GAErC,GAAKrQ,EAQE,CACL,IAAIyQ,EAAY,GAEZkM,EAAexiB,EAAc6V,GAAYG,GAEzCK,EACFC,EACEC,EAAQiM,EAAexa,GACdA,GAAKua,GAAUjkB,OAAO0J,IAAM1J,OAAOikB,EAAO9R,OAC7C,IAER6F,EAAYkM,GAAgB,GAEvB/c,EAAQ6Q,KACXA,EAAY,IAGViM,EAAO9R,KACT6F,EAAUjW,KAAKkiB,EAAO9R,MAI1B6F,EAAYE,EAAKF,GAEjBA,EACEC,EAAQD,EAAYtO,IACV0C,EAAO1C,KAAOxG,EAAYwG,KAC9B,GAERjK,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAOia,UAxCXvY,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAOkmB,EAAO9R,OAgFEgG,CAAU/B,EAAKsB,EAAa7K,YAOlD,CACExB,OAAQ,aACR5I,GAAI,QACJkf,SAAWjb,GAAM+E,GAAc/E,KAMnC,SAAS2S,KACHrT,GACFme,KAIJpQ,EAQA,WACE,GAAKxM,EAsDE,CACL,IAAIyQ,EACFC,EAAQvW,EAAc6V,GAAYhY,GAAQ,SAAUmK,GAClD,OAAQ0C,EAAO1C,KAAOxG,EAAYwG,MAC9B,GAER,GAAIsO,EAAUhW,OAAS,EAAG,CACxB,IAAIsD,EAAMtB,QAAQC,IAAIC,kBAAoB,IAAM/G,EAAMmI,KAElDyd,QAAEA,GAAYrB,EAAkBlb,EAAQ,GAAIhG,IAE5CL,EAAOoF,EAAW,CACpByd,KAAM7Q,GACNtE,SAAUmK,EACV+K,QAAAA,EACAE,KAAMjL,EAAUhW,OAChB4Q,KAAM,KACHzV,EAAMwH,YAGPjC,EAAU,CACZ+C,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,EACAnF,KAAAA,GAGF6E,GAAW,GAEXY,EAAMlD,GACHmD,KAAMqd,IACLzjB,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAOmlB,EAAK/iB,KAAKA,KAAKA,QAI1BF,GAAkBijB,EAAK/iB,KAAKA,KAAKA,MAEjC6E,GAAW,KAEZkB,MAAOC,IACNnB,GAAW,UAGfvF,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAO,YAzGE,CACf,IAAIia,EAAYtW,EAAc6V,GAAYhY,IAAU,KAEpD,GAAIyY,EAAW,CACb,IAAI1S,EAAMtB,QAAQC,IAAIC,kBAAoB,IAAM/G,EAAMmI,KAElDyd,QAAcA,GAAYrB,EAAkBlb,EAAQ,GAAIhG,IAExDL,EAAOoF,EAAW,CACpByd,KAAM7Q,GACNtE,SAAU,CAACmK,GACX+K,QAAAA,EACAE,KAAM,EACNrQ,KAAM,KACHzV,EAAMwH,YAGPjC,EAAU,CACZ+C,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,EACAnF,KAAAA,GAGF6E,GAAW,GAEXY,EAAMlD,GACHmD,KAAMqd,IACL,IAAI3J,EAAgB2J,EAAK/iB,KAAKA,KAAKA,KAAK,IAAM,GAE9CV,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAOwb,KAIXtZ,GAAkBsZ,GAElBvU,GAAW,KAEZkB,MAAOC,IACNnB,GAAW,UAGfvF,EAAS,CACPI,KAAM,gBACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAO,UA3DU,IAAK,CAAC2D,EAAc6V,GAAYhY,KAE3DwU,EAAYsF,GAAU,IAAK,CACzB3X,EAAc,WAAalB,GAAYgG,GACvC9E,EAAc,QAAUlB,GAAYgG,GACpC9E,EAAc,QAAUlB,GAAYgG,KAoHtC,IAAIqL,GAAU7U,EAAM0c,QAAQ,IAAMlB,GAAK,IA4BvC,SAAS4L,KACPne,IAAQ,GA+FV,SAASke,KACP,IAAI7e,EAAMtB,QAAQC,IAAIC,kBAAoB,IAAM/G,EAAMmI,KAElDsN,KAAEA,EAAFqQ,KAAQA,EAARF,QAAcA,EAAdsB,OAAuBA,EAAvBC,OAA+BA,GAAW5C,EAC5Clb,EACA,GACAhG,IAGEL,EAAOoF,EAAW,CACpByd,KAAM7Q,GACNS,KAAAA,EACAqQ,KAAAA,EACAF,QAAAA,EACAsB,OAAAA,EACAC,OAAAA,KACGnnB,EAAMwH,YAGPjC,EAAU,CACZ+C,OAAQ,OACRC,QAASC,EAAcV,GACvBK,IAAAA,EACAnF,KAAAA,GAKF,OAFAwf,GAAe,GAER/Z,EAAMlD,GACVmD,KAAMqd,IACL,IAAIqB,EAAerB,EAAK/iB,MAAQ,GAEhC,QAAsC,IAA3BokB,EAAapkB,KAAKA,KAAsB,CACjD0jB,EAAQU,EAAapkB,KAAK8W,KAAKqE,WAE/B,IACE3J,GAAQ4S,EAAapkB,KAAKA,MAAQ,IAClC,MAAOvB,IAET,IACEsY,GAAQqN,EAAapkB,KAAK8W,MAAQ,IAClC,MAAOrY,kBAC6B,IAAtB2lB,EAAapkB,KAAsB,CACnD0jB,EAAQU,EAAatN,KAAKqE,WAE1B,IACE3J,GAAQ4S,EAAapkB,MAAQ,IAC7B,MAAOvB,IAET,IACEsY,GAAQqN,EAAatN,MAAQ,IAC7B,MAAOrY,KAGX+gB,GAAe,KAEhBzZ,MAAOC,IACNwZ,GAAe,KAgFrB,SAAS1f,GAAkB1C,GACrBgK,EA7EN,SAA+BhK,GAC7B,GAAI4lB,EAAShmB,EAAM8O,aACjBmX,OAAOC,KAAKlmB,EAAM8O,aAAa/B,IAAI,SAAUvK,EAAKwK,GAChD,IAAImI,EAAInV,EAAM8O,YAAYtM,GAEtB4d,EAAI,KAER,GAAIhgB,EACF,IACEggB,EAAIrF,EAAKhO,EAAI3M,EAAOoC,IACpB,MAAOf,IAGN6C,EAAQC,EAAc4Q,EAAG/S,GAAQge,IACpC9d,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAK2S,EAAGvU,MAAOwf,WAI3B,CACL,IAAIjL,EAAI9R,GAEJ+c,EAAI,KAEJhgB,IACFggB,EAAIrF,EAAKhO,EAAI3M,EAAO4U,MAGjB1Q,EAAQC,EAAc4Q,EAAG/S,GAAQge,IACpC9d,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAK2S,EAAGvU,MAAOwf,MA8C9BiH,CAAsBjnB,GAxC1B,SAAuBA,GACrB,GAAI4lB,EAAShmB,EAAM8O,aACjBmX,OAAOC,KAAKlmB,EAAM8O,aAAa/B,IAAI,SAAUvK,EAAKwK,GAChD,IAAImI,EAAInV,EAAM8O,YAAYtM,GAEtB4d,EAAI,KAER,GAAIhgB,EACF,IACEggB,EAAIhgB,EAAMoC,GACV,MAAOf,IAGN6C,EAAQC,EAAc4Q,EAAG/S,GAAQge,IACpC9d,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAK2S,EAAGvU,MAAOwf,WAI3B,CACL,IAAIjL,EAAI9R,GAEJ+c,EAAI,KAEJhgB,IACFggB,EAAIhgB,EAAM4U,KAGP1Q,EAAQC,EAAc4Q,EAAG/S,GAAQge,IACpC9d,EAAS,CACPI,KAAM,YACNC,QAAS,CAAEH,IAAK2S,EAAGvU,MAAOwf,MAU9BkH,CAAclnB,GAvQlBwJ,EAAU,KACHtF,EAAQtE,EAAMwH,UAAW+e,KAC5BC,EAAkBxmB,EAAMwH,WAExB0U,MAGEf,IAAazB,GACfC,EAAWwB,MAuFfvR,EAjEA,WACE,GAAI8P,EAAS,CAGX,IAAIjX,EAAM,KAEV,IACM2H,GACF3H,EAAMsK,EAAI4B,EAAc,SAExBlM,EACEqY,EAAQrY,EAAM8J,GACLA,IACH,IAER9J,EAAMkM,EAAa/N,OAAS,KAE9B,MAAOa,IAET,IAAI8lB,EAAShjB,EAAc6V,GAAYhY,IAAU,KAI5CkC,EAAQ7B,EAAK8kB,KACZtY,EAAOxM,KAASwM,EAAOsY,GACzBjlB,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAO2mB,MAIDtY,EAAOxM,IAAQwM,EAAOsY,GAChCjlB,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAO6B,KAIDwM,EAAOxM,IAASwM,EAAOsY,GAUjCjlB,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAO,QAbX0B,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAO6B,QAkBC,CAACiX,IAErB9P,EAAU,KACR,IAAInH,EAAM,KAEV,IAEIA,EADE2H,EAEA0Q,EAAQ/N,EAAI4B,EAAc,SAAWpC,GAC5BA,IACH,KAEFoC,EAAa/N,OAAS,KAE9B,MAAOa,IAELgB,GACFH,EAAS,CACPI,KAAM,YACNC,QAAS,CACPH,IAAK4X,GACLxZ,MAAO6B,MAIZ,IAmJH,IAAI2J,GAAM,GAENmb,GAAShjB,EAAc6V,GAAYhY,GAEvC,IAEIgK,GADEhC,EACIJ,EAAQud,IAAUA,GAAS,GAE3BA,GAAS,CAACA,IAAU,GAE5B,MAAO9lB,IAET,IAAI+lB,GAAajjB,EAAc6V,GAAY5S,GAEvCigB,GAAY,KAEhB,IAEIA,GADErd,EACUJ,EAAQwd,IAAcA,GAAa,GAEnCxB,EAASwB,IAAcA,GAAa,GAElD,MAAO/lB,IAET,OACE5B,uBAAK8B,IAAKsZ,IACRpb,gBAAC8c,QACG3c,EAAMkF,YACNrF,gBAAC+c,GAAII,GAAG,IAAID,GAAG,IAAID,GAAG,IAAID,GAAG,MAC3Bhd,gBAACuN,GACC/G,KAAK,KACLgH,QAAQ,UACR3K,KAAK,SACLZ,UAAU,WACV4J,QAjSZ,WACEpJ,EAAS,CACPI,KAAM,aACNC,QAAS,CACPH,IAAKI,EAAK,QAAUS,GAAY,KAChCzC,MAAO,KAIXkI,GAAS9F,IAAUA,GAEnBgkB,OAwRUnnB,gBAACyN,IAAgBC,KAAMC,OAK7B3N,gBAAC+c,GAAII,GAAG,KAAKD,GAAG,KAAKD,GAAG,IAAID,GAAG,MAC5BjV,EACC/H,gBAACqG,SAEDkG,GAAIW,IAAI,CAACtK,EAAKuK,IAEVnN,gBAACA,EAAMqN,cACLrN,gBAAC6lB,IACCxgB,WAAYlF,EAAMkF,WAClBpB,KAAMT,GACNmL,YAAaA,EACbmR,UAAWA,EACXlE,MAAOzb,EAAMwH,UACbW,IAAKnI,EAAMmI,IACX6M,WAAYA,GACZ5K,WAAYA,EACZ9E,GAAI7C,IAELzC,EAAMkF,WACHkH,GAAIvH,OAAS,GAAKmI,EAChB,KACA,KACF,SAOhBnN,gBAACkO,GAAM1H,KAAK,KAAK2H,KAAMnF,EAAMoF,OAAQgZ,IACnCpnB,gBAACkO,EAAMG,QAAOD,OAAQgZ,GAAY9Y,gBAChCtO,gBAACkO,EAAMK,WAAOpO,EAAMuD,aAAe,UAErC1D,gBAACkO,EAAMM,UACLxO,gBAAC8T,IAAeI,UAAWwO,GACzB1iB,2BACEA,gBAACgQ,GAAWnJ,MAAO,CAAEgW,aAAc,KACjC7c,gBAACgQ,EAAWC,MAAKpJ,MAAO,CAAEqJ,WAAY,SACpClQ,gBAACyN,IAAgBC,KAAMC,MAEzB3N,gBAACmG,EAAKC,SACJS,MAAO,CAAEuJ,WAAY,QACrBnO,UAAU,eACVlB,MAAO2D,EAAc,WAAalB,GAAYgG,GAC9CrH,SAAWP,IACTa,EAAS,CACPI,KAAM,mBACNC,QAAS,CACP+G,CAAC,WAAarG,IAAa5B,EAAEd,OAAOC,MACpC8I,CAAC,QAAUrG,IAAa,MAI9BX,KAAK,OACL4C,GAAI,UAAY8U,GAChBtW,KAAK,SACLP,YAAY,cAGd1D,gBAACuN,GACC1G,MAAO,CAAE8R,OAAQ,GACjBnL,QAAQ,UACR3B,QAASwQ,GACTxZ,KAAK,SACLuC,SAAUjF,EAAM+T,WAEhBlU,gBAACyN,IAAgBC,KAAM8P,GAAQC,KAAMtd,EAAM+T,eAI7CwO,GACA1iB,gBAAC4U,IACC3Q,KAAMT,GACNqR,QAASA,GACT1R,KAAMA,GACNgS,WAAYA,GACZD,qBAAqB,EACrBkJ,UAAW/B,GACXtU,QAAS2a,EACTtN,gBAAiB6E,KAAS3U,EAAQ2U,IAAQA,GAAKoE,MAAQ,EACvDpJ,gBAAiBgF,KAAS3U,EAAQ2U,IAAQA,GAAKqE,UAAY,EAC3DtJ,eACEiF,KAAS3U,EAAQ2U,IACbA,GAAKsE,SACL/U,EAAO,QAAUhG,IACjBgG,EAAO,QAAUhG,IACjB,EAENuR,gBACEkF,KAAS3U,EAAQ2U,IACbA,GAAKuE,aACLhV,EAAO,QAAUhG,IACjBgG,EAAO,QAAUhG,IACjB,OAOZkf,GACA1iB,uBAAK6G,MAAO,CAAE8e,UAAW,KACvB3lB,uCACC+H,GAAW/H,gBAACqG,SACbrG,0BACGuK,EACGqd,IACAA,GAAU1a,IAAI,CAACtK,EAAKuK,IAEhBnN,0BACIkG,EAAYtD,IAAS0C,EAAQ1C,GAE3B,GADA6L,GAAc7L,KAKxBglB,IACE5nB,0BACIkG,EAAY0hB,KAAetiB,EAAQsiB,IAEjC,GADAnZ,GAAcmZ,UCl6B1C,SAASC,GAAM1nB,GACb,IAAIuF,EAAU,CAAEoiB,MAAO,CAAEzgB,MAAO,SAE5B0gB,EAAS5nB,EAAM4nB,QAAU,GAE7B,IACG7hB,EAAY/F,EAAM4nB,SACjB3Y,EAAOjP,EAAM4nB,UACZ5d,EAAQhK,EAAM4nB,UACjB5d,EAAQhK,EAAMuF,WACbQ,EAAY/F,EAAM8O,eAClBG,EAAOjP,EAAM8O,aAEd,IAAK,IAAI7E,EAAI,EAAGA,EAAIjK,EAAMuF,QAAQV,OAAQoF,IACxC,GAAI/B,EAASlI,EAAM8O,aACjB8Y,EAAOhjB,KAAK5E,EAAMuF,QAAQ0E,GAAGjK,EAAM8O,sBAC1B+Y,EAAc7nB,EAAM8O,aAAc,CAC3C,IAAI1C,EAAM,GACV6Z,OAAOC,KAAKlmB,EAAM8O,aAAa/B,IAAI,CAACvK,EAAKwK,KACvCZ,EAAIpM,EAAM8O,YAAYtM,IAAQxC,EAAMuF,QAAQ0E,GAAGzH,KAEjDolB,EAAOhjB,KAAKwH,WACHpC,EAAQhK,EAAM8O,aAAc,CACrC,IAAI1C,EAAM,GACV,IAAK,IAAI0b,EAAK,EAAGA,EAAK9nB,EAAM8O,YAAYjK,OAAQijB,IAC9C1b,EAAIxH,KAAK5E,EAAMuF,QAAQ0E,GAAGjK,EAAM8O,YAAYgZ,KAE9CF,EAAOhjB,KAAKwH,GAMfrG,EAAY/F,EAAM+nB,aAClB9Y,EAAOjP,EAAM+nB,cACdF,EAAc7nB,EAAM+nB,cAEpBxiB,EAAQwiB,WAAa/nB,EAAM+nB,YAG7B,IAAIpI,EAAY,IAUhB,GAPG5Z,EAAY/F,EAAM2f,YAClB1Q,EAAOjP,EAAM2f,aACdkI,EAAc7nB,EAAM2f,aAEpBA,EAAY3f,EAAM2f,WAIjB5Z,EAAY/F,EAAMgoB,SAClB/Y,EAAOjP,EAAMgoB,UACdhe,EAAQhK,EAAMgoB,YAIdhe,EAAQhK,EAAMuF,WACbQ,EAAY/F,EAAMwO,eAClBS,EAAOjP,EAAMwO,aAId,IAFAjJ,EAAQyiB,OAAS,GAER/d,EAAI,EAAGA,EAAIjK,EAAMuF,QAAQV,OAAQoF,IACxC,GAAI/B,EAASlI,EAAMwO,aACjBjJ,EAAQyiB,OAAOpjB,KAAK5E,EAAMuF,QAAQ0E,GAAGjK,EAAMwO,sBAClCxE,EAAQhK,EAAMwO,aAAc,CACrC,IAAIpC,EAAM,GACV,IAAS0b,EAAK,EAAGA,EAAK9nB,EAAMwO,YAAY3J,OAAQijB,IAC9C1b,EAAIxH,KAAK5E,EAAMuF,QAAQ0E,GAAGjK,EAAMwO,YAAYsZ,KAE9CviB,EAAQyiB,OAAOpjB,KAAKwH,EAAII,KAAKmT,UAhBjCpa,EAAQyiB,OAAShoB,EAAMgoB,OAqBzB,GACGjiB,EAAY/F,EAAMioB,SAClBhZ,EAAOjP,EAAMioB,UACdje,EAAQhK,EAAMioB,YAIdje,EAAQhK,EAAMuF,WACbQ,EAAY/F,EAAMkoB,eAClBjZ,EAAOjP,EAAMkoB,cACdhgB,EAASlI,EAAMkoB,aAIf,IAFA3iB,EAAQ0iB,OAAS,GAERhe,EAAI,EAAGA,EAAIjK,EAAMuF,QAAQV,OAAQoF,IACxC1E,EAAQ0iB,OAAOrjB,KAAK5E,EAAMuF,QAAQ0E,GAAGjK,EAAMkoB,mBAV7C3iB,EAAQ0iB,OAASjoB,EAAMioB,OA4UzB,OA7TGliB,EAAY/F,EAAMmoB,UAClBlZ,EAAOjP,EAAMmoB,WACdne,EAAQhK,EAAMmoB,WAEd5iB,EAAQoiB,MAAMQ,QAAUnoB,EAAMmoB,SAG3BpiB,EAAY/F,EAAM0C,OAAUuM,EAAOjP,EAAM0C,QAASwF,EAASlI,EAAM0C,QACpE6C,EAAQoiB,MAAMjlB,KAAO1C,EAAM0C,MAI1BqD,EAAY/F,EAAMooB,aAClBnZ,EAAOjP,EAAMooB,cACdP,EAAc7nB,EAAMooB,cAEpB7iB,EAAQoiB,MAAMS,WAAapoB,EAAMooB,YAIhCriB,EAAY/F,EAAM+P,aAClBd,EAAOjP,EAAM+P,cACd7H,EAASlI,EAAM+P,cAEfxK,EAAQoiB,MAAM5X,WAAa/P,EAAM+P,YAIhChK,EAAY/F,EAAMqoB,QAClBpZ,EAAOjP,EAAMqoB,SACdR,EAAc7nB,EAAMqoB,SAEpB9iB,EAAQoiB,MAAMU,MAAQroB,EAAMqoB,OAI3BtiB,EAAY/F,EAAMsoB,gBAClBrZ,EAAOjP,EAAMsoB,iBACdpgB,EAASlI,EAAMsoB,iBAEf/iB,EAAQoiB,MAAMW,cAAgBtoB,EAAMsoB,eAInCviB,EAAY/F,EAAMuoB,aAClBtZ,EAAOjP,EAAMuoB,cACdV,EAAc7nB,EAAMsoB,iBAEpB/iB,EAAQoiB,MAAMY,WAAavoB,EAAMuoB,YAIhCxiB,EAAY/F,EAAMkQ,aAClBjB,EAAOjP,EAAMkQ,cACdhI,EAASlI,EAAMkQ,cAEf3K,EAAQoiB,MAAMzX,WAAalQ,EAAMkQ,YAIhCnK,EAAY/F,EAAMwoB,YAClBvZ,EAAOjP,EAAMwoB,aACdtgB,EAASlI,EAAMwoB,aAEfjjB,EAAQoiB,MAAMa,UAAYxoB,EAAMwoB,WAI/BziB,EAAY/F,EAAMyoB,QAClBxZ,EAAOjP,EAAMyoB,SACdvgB,EAASlI,EAAMyoB,SAEfljB,EAAQoiB,MAAMc,MAAQzoB,EAAMyoB,OAI3B1iB,EAAY/F,EAAM0oB,SAClBzZ,EAAOjP,EAAM0oB,UACdb,EAAc7nB,EAAM0oB,UAEpBnjB,EAAQoiB,MAAMe,OAAS1oB,EAAM0oB,QAI5B3iB,EAAY/F,EAAMmH,SAClB8H,EAAOjP,EAAMmH,UACbe,EAASlI,EAAMmH,UAAWwhB,EAAS3oB,EAAMmH,UAE1C5B,EAAQoiB,MAAMxgB,OAASnH,EAAMmH,QAG1BpB,EAAY/F,EAAMsF,KAAQ2J,EAAOjP,EAAMsF,MAAO4C,EAASlI,EAAMsF,MAChEC,EAAQoiB,MAAMriB,GAAK1C,EAAK5C,EAAMsF,KAG3BS,EAAY/F,EAAM8D,OAAUmL,EAAOjP,EAAM8D,QAASoE,EAASlI,EAAM8D,QACpEyB,EAAQoiB,MAAMriB,GAAK1C,EAAK5C,EAAM8D,OAI7BiC,EAAY/F,EAAM4oB,UAClB3Z,EAAOjP,EAAM4oB,WACdD,EAAS3oB,EAAM4oB,WAEfrjB,EAAQoiB,MAAMiB,QAAU5oB,EAAM4oB,SAI7B7iB,EAAY/F,EAAM6oB,UAClB5Z,EAAOjP,EAAM6oB,WACdF,EAAS3oB,EAAM6oB,WAEftjB,EAAQoiB,MAAMkB,QAAU7oB,EAAM6oB,SAI7B9iB,EAAY/F,EAAM8oB,qBAClB7Z,EAAOjP,EAAM8oB,sBACdH,EAAS3oB,EAAM8oB,sBAEfvjB,EAAQoiB,MAAMmB,mBAAqB9oB,EAAM8oB,oBAIxC/iB,EAAY/F,EAAM+oB,uBAClB9Z,EAAOjP,EAAM+oB,wBACdhN,EAAU/b,EAAM+oB,wBAEhBxjB,EAAQoiB,MAAMoB,qBAAuB/oB,EAAM+oB,sBAI1ChjB,EAAY/F,EAAMgpB,uBAClB/Z,EAAOjP,EAAMgpB,wBACdjN,EAAU/b,EAAMgpB,wBAEhBzjB,EAAQoiB,MAAMqB,qBAAuBhpB,EAAMgpB,sBAI1CjjB,EAAY/F,EAAMipB,YAClBha,EAAOjP,EAAMipB,aACdpB,EAAc7nB,EAAMipB,aAEpB1jB,EAAQoiB,MAAMsB,UAAYjpB,EAAMipB,WAI/BljB,EAAY/F,EAAMkpB,YAClBja,EAAOjP,EAAMkpB,aACdnN,EAAU/b,EAAMkpB,aAEhB3jB,EAAQoiB,MAAMuB,UAAYlpB,EAAMkpB,WAI/BnjB,EAAY/F,EAAMmpB,UAClBla,EAAOjP,EAAMmpB,WACdpN,EAAU/b,EAAMmpB,WAEhB5jB,EAAQoiB,MAAMwB,QAAUnpB,EAAMmpB,SAI7BpjB,EAAY/F,EAAMopB,YAClBna,EAAOjP,EAAMopB,aACdlhB,EAASlI,EAAMopB,aAEf7jB,EAAQoiB,MAAMyB,UAAYppB,EAAMopB,WAI/BrjB,EAAY/F,EAAMmB,UAClB8N,EAAOjP,EAAMmB,WACd0mB,EAAc7nB,EAAMmB,WAEpBoE,EAAQoiB,MAAMxmB,QAAUnB,EAAMmB,SAI7B4E,EAAY/F,EAAMkH,QAClB+H,EAAOjP,EAAMkH,SACbgB,EAASlI,EAAMkH,SAAUyhB,EAAS3oB,EAAMkH,SAEzC3B,EAAQoiB,MAAMzgB,MAAQlH,EAAMkH,OAI3BnB,EAAY/F,EAAMqpB,OAClBpa,EAAOjP,EAAMqpB,QACdxB,EAAc7nB,EAAMqpB,QAEpB9jB,EAAQoiB,MAAM0B,KAAOrpB,EAAMqpB,MAI1BtjB,EAAY/F,EAAMspB,OAClBra,EAAOjP,EAAMspB,QACdzB,EAAc7nB,EAAMspB,QAEpB/jB,EAAQ+jB,KAAOtpB,EAAMspB,MAIpBvjB,EAAY/F,EAAMupB,qBAClBta,EAAOjP,EAAMupB,sBACd1B,EAAc7nB,EAAMupB,sBAEpBhkB,EAAQgkB,mBAAqBvpB,EAAMupB,oBAIlCxjB,EAAY/F,EAAMwpB,OAClBva,EAAOjP,EAAMwpB,QACd3B,EAAc7nB,EAAMwpB,QAEpBjkB,EAAQikB,KAAOxpB,EAAMwpB,MAIpBzjB,EAAY/F,EAAMypB,SAClBxa,EAAOjP,EAAMypB,UACd5B,EAAc7nB,EAAMypB,UAEpBlkB,EAAQkkB,OAASzpB,EAAMypB,QAItB1jB,EAAY/F,EAAM0pB,UAClBza,EAAOjP,EAAM0pB,WACd7B,EAAc7nB,EAAM0pB,WAEpBnkB,EAAQmkB,QAAU1pB,EAAM0pB,SAIvB3jB,EAAY/F,EAAM2pB,SAClB1a,EAAOjP,EAAM2pB,UACd9B,EAAc7nB,EAAM2pB,UAEpBpkB,EAAQokB,OAAS3pB,EAAM2pB,QAItB5jB,EAAY/F,EAAM4pB,SAClB3a,EAAOjP,EAAM4pB,UACd/B,EAAc7nB,EAAM4pB,UAEpBrkB,EAAQqkB,OAAS5pB,EAAM4pB,QAItB7jB,EAAY/F,EAAM6pB,SAClB5a,EAAOjP,EAAM6pB,UACdhC,EAAc7nB,EAAM6pB,UAEpBtkB,EAAQskB,OAAS7pB,EAAM6pB,QAItB9jB,EAAY/F,EAAM8pB,WAClB7a,EAAOjP,EAAM8pB,YACdjC,EAAc7nB,EAAM8pB,YAEpBvkB,EAAQukB,SAAW9pB,EAAM8pB,UAIxB/jB,EAAY/F,EAAM+pB,QAClB9a,EAAOjP,EAAM+pB,SACdlC,EAAc7nB,EAAM+pB,SAEpBxkB,EAAQwkB,MAAQ/pB,EAAM+pB,OAIrBhkB,EAAY/F,EAAM8b,QAClB7M,EAAOjP,EAAM8b,SACd+L,EAAc7nB,EAAM8b,SAEpBvW,EAAQuW,MAAQ9b,EAAM8b,OAIrB/V,EAAY/F,EAAMgqB,UAClB/a,EAAOjP,EAAMgqB,WACdnC,EAAc7nB,EAAMgqB,WAEpBzkB,EAAQykB,QAAUhqB,EAAMgqB,SAIvBjkB,EAAY/F,EAAMiqB,QAClBhb,EAAOjP,EAAMiqB,SACdpC,EAAc7nB,EAAMiqB,SAEpB1kB,EAAQ0kB,MAAQjqB,EAAMiqB,OAIrBlkB,EAAY/F,EAAMkqB,QAClBjb,EAAOjP,EAAMkqB,SACdrC,EAAc7nB,EAAMkqB,SAEpB3kB,EAAQ2kB,MAAQlqB,EAAMkqB,OAIrBnkB,EAAY/F,EAAMmqB,cAClBlb,EAAOjP,EAAMmqB,eACdtC,EAAc7nB,EAAMmqB,eAEpB5kB,EAAQ4kB,YAAY5kB,EAAQoiB,MAAMjlB,MAAQ1C,EAAMmqB,aAGlDC,QAAQC,IAAI,QAASrqB,EAAOuF,EAASqiB,GAGnC/nB,gBAACyqB,IAAW/kB,QAASA,EAASqiB,OAAQA,EAAQllB,KAAM6C,EAAQoiB,MAAMjlB,OC1atE,SAAS6nB,GAAUvqB,GACjB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,UCDhC,SAASwqB,GAASxqB,GAChB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,SCDhC,SAASyqB,GAAUzqB,GACjB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,UCDhC,SAAS0qB,GAAiB1qB,GACxB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,iBCDhC,SAAS2qB,GAAa3qB,GACpB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,aCDhC,SAAS4qB,GAAa5qB,GACpB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,aCDhC,SAAS6qB,GAAS7qB,GAChB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,UCDhC,SAAS8qB,GAAW9qB,GAClB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,WCDhC,SAAS+qB,GAAW/qB,GAClB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,WCDhC,SAAS+qB,GAAW/qB,GAClB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,cCDhC,SAASgrB,GAAYhrB,GACnB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,YCDhC,SAASirB,GAAejrB,GACtB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,eCDhC,SAASkrB,GAAYlrB,GACnB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,eCDhC,SAASmrB,GAAanrB,GACpB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,aCDhC,SAASorB,GAAaprB,GACpB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY,aCDhC,SAASqrB,GAAerrB,GACtB,OAAOH,gBAAC6nB,oBAAU1nB,QAAY"}