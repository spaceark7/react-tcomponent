{"version":3,"file":"index.js","sources":["../src/InputText.js","../src/Loading.js","../src/InputFile.js","../src/InputChoose.js","../src/InputDate.js","../src/InputNumber.js","../src/LoadingOverlay.js","../src/DataTableContainer.js","../src/DataTable.js","../src/InputDateTime.js","../src/InputTime.js","../src/InputTag.js","../src/InputSelect.js","../src/InputYear.js","../src/LoadingPage.js","../src/InputColor.js","../src/InputSelectFetch.js","../src/Chart.jsx","../src/ChartArea.jsx","../src/ChartBar.jsx","../src/ChartBoxPlot.jsx","../src/ChartBubble.jsx","../src/ChartCandleStick.jsx","../src/ChartDonut.jsx","../src/ChartHeatMap.jsx","../src/ChartHistogram.jsx","../src/ChartLine.jsx","../src/ChartPie.jsx","../src/ChartPolarArea.jsx","../src/ChartRadar.jsx","../src/ChartRadial.jsx","../src/ChartRange.jsx","../src/ChartScatter.jsx","../src/ChartTreeMap.jsx","../src/Field.js","../src/InputWorkflow.js"],"sourcesContent":["import React, { useState, useRef, createRef, useEffect } from 'react'\n\nimport Cleave from 'cleave.js/react'\n\nimport { isEmpty, isUndefined, isNull, isEqual } from 'lodash'\n\nimport PhoneInput from 'react-phone-number-input'\n\nimport JoditEditor from 'jodit-react'\n\nimport Mousetrap from 'mousetrap'\n\nimport './InputText.module.css'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport parse from 'html-react-parser'\n\nimport { Form, Modal } from 'react-bootstrap'\n\nimport * as MathType from '@wiris/mathtype-generic'\n\nimport ContentEditable from 'react-contenteditable'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nclass WirisEquationEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    // this.toolbarRef = props.toolbarRef;\n    this.equationEditorRef = React.createRef()\n    this.toolbarRef = React.createRef()\n  }\n\n  componentDidMount() {\n    let { toolbarRef } = this.props\n\n    try {\n      let genericIntegrationProperties = {}\n\n      genericIntegrationProperties.target = this.equationEditorRef.current\n\n      genericIntegrationProperties.toolbar = this.toolbarRef.current\n\n      let genericIntegrationInstance =\n        new window.WirisPlugin.GenericIntegration(genericIntegrationProperties)\n\n      genericIntegrationInstance.init()\n\n      genericIntegrationInstance.listeners.fire('onTargetReady', {})\n    } catch (e) {}\n  }\n\n  handleEquationChange = (event) => {\n    let { onEquationInput } = this.props\n    let mathFormat = window.WirisPlugin.Parser.endParse(event.target.value)\n    let equationImage = event.target.value\n    onEquationInput(equationImage, mathFormat)\n  }\n\n  render() {\n    let { value } = this.props || {}\n    return (\n      <div>\n        <div ref={this.toolbarRef} />\n        <ContentEditable\n          suppressContentEditableWarning={true}\n          className='form-control'\n          innerRef={this.equationEditorRef}\n          onChange={this.handleEquationChange}\n          html={value || ''}\n        />\n      </div>\n    )\n  }\n}\n\nfunction InputText(props) {\n  const dispatch = useDispatch()\n\n  const propsName = !isUndefined(props?.name)\n    ? slug(String(props?.name), '_')\n    : ''\n\n  const [placeholder, setPlaceholder] = useState(props?.placeholder || '')\n\n  const type = !isUndefined(props?.type) ? String(props?.type) : ''\n\n  const [open, setOpen] = useState(false)\n\n  const [optionsCleave, setOptionsCleave] = useState({})\n\n  const [config, setConfig] = useState({\n    readonly: false,\n    placeholder: ' ',\n    toolbarButtonSize: 'small'\n  })\n\n  const input = useSelector((state) => state.core?.input) || {}\n\n  const toolbarRef = useRef()\n\n  const editorRef = useRef()\n\n  // const toolbarRef = React.createRef()\n\n  // const editorRef = React.createRef()\n\n  let defaultType = type === 'text' || isUndefined(type) ? 'search' : type\n\n  let value = findArrayName(propsName, input) || ''\n\n  useEffect(() => {\n    let default_placeholder = props?.placeholder || ''\n\n    let options_cleave = {}\n\n    if (type.toLowerCase() == 'nik') {\n      options_cleave = {\n        delimiter: ' ',\n        blocks: [2, 2, 2, 6, 4],\n        numericOnly: true\n      }\n      default_placeholder = props?.placeholder || 'Nomor Induk Kependudukan'\n    } else if (type.toLowerCase() == 'kip') {\n      options_cleave = {\n        delimiter: ' ',\n        blocks: [4, 4, 4, 4]\n      }\n      default_placeholder = props?.placeholder || 'Kartu Indonesia Pintar'\n    } else if (type.toLowerCase() == 'npwp') {\n      options_cleave = {\n        delimiters: ['.', '.', '.', '-', '.'],\n        blocks: [2, 3, 3, 1, 3, 3],\n        numericOnly: true\n      }\n      default_placeholder = props?.placeholder || 'Nomor Pokok Wajib Pajak'\n    } else if (type.toLowerCase() == 'postcode') {\n      options_cleave = {\n        blocks: [5],\n        delimiter: ' ',\n        numericOnly: true\n      }\n      default_placeholder = props?.placeholder || 'Kode Pos'\n    } else if (type.toLowerCase() == 'phone') {\n      default_placeholder = props?.placeholder || 'Telepon'\n    }\n    setPlaceholder(default_placeholder)\n    setOptionsCleave(options_cleave)\n  }, [type])\n\n  useEffect(() => {\n    if (!isUndefined(props?.value)) {\n      onChange(props?.value)\n    }\n  }, [props?.value])\n\n  useEffect(() => {\n    if (props?.disableCopy || props?.disablePaste || props?.disableSelectAll) {\n      let comb = []\n\n      if (props?.disableCopy) {\n        comb.push('command+c')\n        comb.push('ctrl+c')\n      }\n\n      if (props?.disablePaste) {\n        comb.push('command+v')\n        comb.push('ctrl+v')\n      }\n\n      if (props?.disableSelectAll) {\n        comb.push('command+a')\n        comb.push('ctrl+a')\n      }\n\n      if (comb.length > 0) {\n        Mousetrap.bind(comb, function () {\n          return false\n        })\n      }\n    }\n  }, [])\n\n  function setInput(key, val) {\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n  }\n\n  function handleInputChange(event) {\n    event.preventDefault()\n\n    let data = event.target.value ? String(event.target.value) : ''\n\n    if (\n      type == 'nik' ||\n      type == 'kip' ||\n      type == 'npwp' ||\n      type == 'postcode'\n    ) {\n      data = data.replace(/\\D/g, '')\n    }\n\n    if (props?.maxlength) {\n      data = data.substring(0, props?.maxlength)\n    }\n\n    onChange(data)\n  }\n\n  function openModal() {\n    setOpen(true)\n  }\n\n  function closeModal() {\n    setOpen(false)\n  }\n\n  function onChange(data) {\n    setInput(propsName, data)\n  }\n\n  if (!propsName) return 'Name is Required'\n\n  if (props?.disabled || props?.isReadonly) {\n    return !isEmpty(value) && parse(String(value))\n  } else if (\n    type == 'nik' ||\n    type == 'kip' ||\n    type == 'npwp' ||\n    type == 'postcode'\n  ) {\n    return (\n      <Cleave\n        placeholder={placeholder}\n        id={props?.id}\n        name={propsName}\n        value={value}\n        onChange={handleInputChange}\n        options={optionsCleave}\n        className='form-control'\n      />\n    )\n  } else if (type == 'textarea') {\n    return (\n      <textarea\n        id={props?.id}\n        rows={props?.rows || 3}\n        className='form-control no-resize mousetrap'\n        onChange={handleInputChange}\n        name={propsName}\n        value={value}\n        placeholder={placeholder}\n      ></textarea>\n    )\n  } else if (type == 'phone') {\n    return (\n      <PhoneInput\n        international\n        defaultCountry='ID'\n        value={value ? String(value) : ''}\n        onChange={onChange}\n      />\n    )\n  } else if (type == 'texteditor') {\n    return (\n      <React.Fragment>\n        <div\n          className='form-control'\n          style={{ minHeight: 32 }}\n          onClick={openModal}\n        >\n          {!isEmpty(value) ? parse(String(value)) : ''}\n        </div>\n        <Modal size='lg' show={open} onHide={closeModal}>\n          <Modal.Header onHide={closeModal} closeButton>\n            <Modal.Title>{placeholder || 'Text Editor'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <JoditEditor\n              key={props?.name + '_editor'}\n              id={props?.id}\n              ref={editorRef}\n              value={!isEmpty(value) ? String(value) : ''}\n              config={config}\n              tabIndex={1}\n              onChange={onChange}\n            />\n          </Modal.Body>\n        </Modal>\n      </React.Fragment>\n    )\n  } else if (type == 'equation') {\n    return (\n      <React.Fragment>\n        <div\n          className='form-control'\n          style={{ minHeight: 32 }}\n          onClick={openModal}\n        >\n          {!isEmpty(value) ? parse(String(value)) : ''}\n        </div>\n        <Modal size='lg' show={open} onHide={closeModal}>\n          <Modal.Header onHide={closeModal} closeButton>\n            <Modal.Title>{placeholder || 'Equation Editor'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div id={props?.id}>\n              <WirisEquationEditor\n                id={props?.id}\n                onEquationInput={onChange}\n                toolbarRef={toolbarRef}\n                value={value}\n              />\n            </div>\n          </Modal.Body>\n        </Modal>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <Form.Control\n      id={props?.id}\n      type={defaultType}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleInputChange}\n      name={propsName}\n      className='form-control mousetrap'\n    />\n  )\n}\n\nexport default InputText\n","import React from 'react'\n\nimport PuffLoader from 'react-spinners/PuffLoader'\n\nfunction Loading() {\n  return <PuffLoader color={'#000'} size={25} />\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport DropzoneComponent from 'react-dropzone-component'\n\nimport { Player } from 'video-react'\n\nimport * as momentImported from 'moment'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { findArrayName, slug, setAuthHeader, secureData } from 'tcomponent'\n\nimport {\n  isNull,\n  isUndefined,\n  isEqual,\n  isEmpty,\n  filter,\n  isArray,\n  isString\n} from 'lodash'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  faTimes,\n  faSearch,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Loading from './Loading'\n\nimport { Form, Button, Modal, ButtonGroup } from 'react-bootstrap'\n\nlet moment = momentImported\n\nfunction Preview(props) {\n  try {\n    if (isEqual(props.type.type.substring(0, 5), 'image')) {\n      return (\n        <img\n          key={props.file}\n          className='img-responsive'\n          style={{ maxWidth: '100%' }}\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        />\n      )\n    } else if (isEqual(props.type.type.substring(0, 5), 'video')) {\n      return (\n        <Player\n          key={props.file}\n          autoPlay={false}\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        />\n      )\n    } else if (isEqual(props.type.type, 'application/pdf')) {\n      return (\n        <iframe\n          key={props.file}\n          width='100%'\n          height='480'\n          src={process.env.REACT_APP_API_URL + '/file/stream/' + props.file}\n        ></iframe>\n      )\n    }\n  } catch (e) {}\n\n  return null\n}\n\nfunction InputFile(props) {\n  let acceptedFiles = props.accept\n    ? props.accept\n    : 'image/*, video/*, audio/*, .docx, .xlsx, .pptx, .csv, .pdf'\n\n  let input = useSelector((state) => state.core.input)\n\n  let parameter = useSelector((state) => state.core.parameter)\n\n  let [type, setType] = useState({})\n\n  let [value, setValue] = useState([])\n\n  let [loading, setLoading] = useState(false)\n\n  let auth = useSelector((state) => state.auth)\n\n  let dispatch = useDispatch()\n\n  function onDelete(val) {\n    let url = process.env.REACT_APP_API_URL + '/file/delete'\n\n    let data = secureData({\n      token_file: val,\n      token: auth.token\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n\n    setLoading(true)\n\n    axios(options)\n      .then((response) => {\n        if (!isEmpty(response.data.message)) {\n          dispatch({\n            type: 'SET_MESSAGE',\n            payload: response.data.message\n          })\n        }\n\n        let isi = filter(value, (o) => {\n          return !isEqual(o, val)\n        })\n\n        setValue(isi)\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: isi }\n        })\n\n        setLoading(false)\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'SET_MESSAGE',\n          payload: 'Gagal menghapus lampiran'\n        })\n\n        let isi = filter(value, (o) => {\n          return !isEqual(o, val)\n        })\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: isi }\n        })\n\n        setValue(isi)\n\n        setLoading(false)\n      })\n  }\n\n  function fetchInfo(token) {\n    if (\n      isString(token) &&\n      !isEmpty(token) &&\n      token != 'null' &&\n      isEmpty(type[token])\n    ) {\n      let url = process.env.REACT_APP_API_URL + '/file/info'\n\n      let data = secureData({\n        token_file: token\n      })\n\n      let options = {\n        method: 'POST',\n        headers: setAuthHeader(auth),\n        url,\n        data\n      }\n\n      setLoading(true)\n\n      axios(options)\n        .then((response) => {\n          if (response.data.success) {\n            type[token] = response.data.data\n            setType(type)\n\n            open[token] = false\n            setOpen(open)\n          }\n          setLoading(false)\n        })\n        .catch((error) => {\n          type[token] = ''\n          setType(type)\n\n          open[token] = false\n          setOpen(open)\n        })\n    }\n  }\n\n  function reloadType(t) {\n    try {\n      if (isArray(t) && t.length > 0) {\n        for (let i = 0; i < t.length; i++) {\n          let kondisi = cekValidFile(t[i])\n\n          if (kondisi) {\n            fetchInfo(t[i])\n          }\n        }\n      } else {\n        let kondisi = cekValidFile(t)\n\n        if (kondisi) {\n          fetchInfo(t)\n        }\n      }\n    } catch (e) {}\n  }\n\n  function cekValidFile(h) {\n    return (\n      isString(h) && !isEmpty(h) && h != 'null'\n      //!isNull(h) && !isUndefined(h) && !isEmpty(h)\n      //&& isEqual(String(h).substring(0, 3), 'AT-')\n    )\n  }\n\n  function setValid(u) {\n    return filter(u, cekValidFile) || []\n  }\n\n  function setIsinya(d) {\n    let i = String(d).split('|')\n\n    return setValid(i)\n  }\n\n  useEffect(() => {\n    let x = props.value ? props.value : findArrayName(props.name, input)\n\n    if (x) {\n      let cek = setIsinya(x)\n\n      setValue(cek)\n    }\n  }, [])\n\n  useEffect(() => {\n    let cek = setIsinya(findArrayName(props.name, input))\n    if (!isEqual(cek, value)) {\n      setValue(cek)\n    }\n  }, [findArrayName(props.name, input)])\n\n  useEffect(() => {\n    reloadType(value)\n  }, [value])\n\n  useEffect(() => {\n    openFile(loading)\n  }, [loading])\n\n  function toggle(val) {\n    setOpen({ ...open, [val]: !open[val] })\n  }\n\n  function fileUpload(file, base64) {\n    let url = props.url || process.env.REACT_APP_API_URL + '/file/upload'\n\n    let _data = new FormData()\n\n    let _name = file.name\n\n    let _type = file.type\n\n    _data.append('type', _type)\n    _data.append('name', _name)\n    _data.append('file', file)\n    _data.append(\n      'lastModifiedDate',\n      moment(file.lastModifiedDate).format('YYYY-MM-DD HH:mm:ss')\n    )\n    _data.append('size', file.size)\n\n    setLoading(true)\n\n    axios\n      .post(url, _data, {\n        headers: setAuthHeader(\n          auth,\n          `multipart/form-data; boundary=${_data._boundary}`\n        )\n      })\n      .then((response) => {\n        if (!isEmpty(response.data.message)) {\n          dispatch({\n            type: 'SET_MESSAGE',\n            payload: response.data.message\n          })\n        }\n\n        if (response.data.success) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: props.name, value: response.data.data.token }\n          })\n\n          setValue([response.data.data.token])\n        } else {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: props.name, value: '' }\n          })\n        }\n\n        setLoading(false)\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: props.name, value: '' }\n        })\n\n        dispatch({\n          type: 'SET_MESSAGE',\n          payload: 'Gagal mengunggah lampiran'\n        })\n\n        setLoading(false)\n      })\n  }\n\n  function createfile(file) {\n    let reader = new FileReader()\n\n    reader.onload = (e) => {\n      fileUpload(file, e.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  function onChangeMultiple(file) {\n    let isi = JSON.parse(file.xhr.response)\n\n    let current = value || []\n\n    current.push(isi.data.token)\n\n    let t =\n      filter(current, function (o) {\n        return !isEmpty(o)\n      }) || []\n\n    dispatch({\n      type: 'SET_INPUT',\n      payload: { key: props.name, value: t.join('|') }\n    })\n\n    setValue(t)\n  }\n\n  function onDeleteMultiple(data) {}\n\n  function onInput(e) {\n    openFile(false)\n  }\n\n  function openFile(val) {\n    if (val != parameter.openFile) {\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: { key: 'openFile', value: val }\n      })\n    }\n  }\n\n  function onClick(e) {\n    openFile(true)\n\n    setTimeout(() => {\n      openFile(false)\n    }, 60000)\n  }\n\n  function onChange(e) {\n    let files = e.target.files || e.dataTransfer.files\n\n    if (!files.length) return\n\n    createfile(files[0])\n  }\n\n  function onDrop() {}\n\n  let [open, setOpen] = useState({})\n\n  let terisi = setValid(value)\n\n  if (!process.env.REACT_APP_API_URL) {\n    return <span>REACT_APP_API_URL is required for .env</span>\n  }\n\n  return (\n    <div>\n      {!loading && !props.isReadonly && (\n        <div>\n          {!props.isMultiple && (\n            <div style={{ display: 'inline-block' }}>\n              <Form.Control\n                className={props.className}\n                accept={acceptedFiles}\n                label={props.name}\n                type='file'\n                onChange={onChange}\n                onInput={onInput}\n                onClick={onClick}\n              />\n            </div>\n          )}\n\n          {!loading && props.isMultiple && (\n            <DropzoneComponent\n              config={{\n                showFiletypeIcon: true,\n                postUrl:\n                  process.env.REACT_APP_API_URL + '/file/upload_multiple',\n                uploadMultiple: true,\n                maxFiles: 5\n              }}\n              eventHandlers={{\n                drop: onDrop,\n                complete: onChangeMultiple,\n                removedfile: onDeleteMultiple\n              }}\n              djsConfig={{\n                acceptedFiles,\n                params: {\n                  token: auth.user.token\n                },\n                addRemoveLinks: true,\n                autoProcessQueue: true,\n                maxFiles: 5\n              }}\n            />\n          )}\n        </div>\n      )}\n\n      {!loading &&\n        terisi.length > 0 &&\n        terisi.map((val, index) => {\n          return (\n            <div style={{ display: 'inline-block' }} key={val}>\n              {props.preview && (\n                <React.Fragment>\n                  <Preview key={val} type={type[val]} file={val} />\n                  <br />\n                </React.Fragment>\n              )}\n              <ButtonGroup>\n                <Button variant='primary' size='sm' onClick={() => toggle(val)}>\n                  <FontAwesomeIcon icon={faSearch} /> Lihat\n                </Button>\n                <Button\n                  vendor='success'\n                  onClick={() =>\n                    (window.location.href =\n                      process.env.REACT_APP_API_URL + '/file/download/' + val)\n                  }\n                  size='sm'\n                >\n                  <FontAwesomeIcon icon={faDownload} /> Unduh\n                </Button>\n\n                {!props.isReadonly && (\n                  <Button\n                    variant='danger'\n                    onClick={() => onDelete(val)}\n                    size='sm'\n                  >\n                    <FontAwesomeIcon icon={faTimes} /> Hapus\n                  </Button>\n                )}\n              </ButtonGroup>\n              <Modal\n                size='lg'\n                id={'modal_' + val}\n                show={open[val]}\n                onHide={() => toggle(val)}\n              >\n                <Modal.Header closeButton onHide={() => toggle(val)}>\n                  <Modal.Title>Lampiran {val}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Preview key={val} type={type[val]} file={val} />\n                </Modal.Body>\n              </Modal>\n            </div>\n          )\n        })}\n\n      {loading && <Loading />}\n    </div>\n  )\n}\n\nexport default InputFile\n","import React from 'react'\n\nimport {\n  debounce,\n  isEmpty,\n  find,\n  isUndefined,\n  isNull,\n  isArray,\n  isEqual,\n  includes\n} from 'lodash'\n\nimport { Form } from 'react-bootstrap'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport InputFile from './InputFile'\n\nimport { connect } from 'react-redux'\n\nimport parse from 'html-react-parser'\n\nclass InputChoose extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultValue: null,\n      type: this.props.type || 'inline'\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    // console.log('onRefresh')\n\n    let val = null\n\n    let defaultValue = null\n\n    if (this.props.value) {\n      val = this.props.value\n    } else {\n      val = findArrayName(this.props.name, this.props.input) || null\n    }\n\n    if (!isNull(val)) {\n      if (this.props.isMultiple) {\n        defaultValue = []\n\n        for (let i = 0; i < this.props.options.length; i++) {\n          for (let y = 0; y < val.length; y++) {\n            let opt = this.props.options[i]\n\n            let cur = val[y]\n\n            if (String(opt[this.props.optionValue]) == String(cur)) {\n              defaultValue.push(opt[this.props.optionValue])\n            }\n          }\n        }\n      } else {\n        defaultValue = find(\n          this.props.options,\n          function (o) {\n            return String(o[this.props.optionValue]) == String(val)\n          }.bind(this)\n        )\n        // console.log(this.props.options, val, defaultValue)\n      }\n    }\n\n    defaultValue =\n      !isUndefined(defaultValue) && !isNull(defaultValue) ? defaultValue : null\n\n    this.setState({\n      defaultValue\n    })\n  }\n\n  labelGenerate = (option) => {\n    let label = []\n    if (isArray(this.props.optionLabel)) {\n      let separator = this.props.separator ? this.props.separator : ' | '\n\n      for (let i = 0; i <= this.props.optionLabel.length - 1; i++) {\n        let isi = option[this.props.optionLabel[i]]\n\n        label.push(isi)\n      }\n    } else {\n      label.push(option[this.props.optionLabel])\n    }\n\n    return label\n  }\n\n  onChange = (selectedOption) => {\n    // console.log('onChange', selectedOption)\n\n    if (!this.props.isReadonly && this.props.name) {\n      try {\n        if (this.props.isMultiple) {\n          let current_val = this.state.defaultValue || []\n\n          let removed = false\n\n          let new_val = []\n\n          for (let i = 0; i < current_val.length; i++) {\n            let isi = current_val[i]\n\n            if (isi == selectedOption[this.props.optionValue]) {\n              removed = true\n            } else {\n              new_val.push(isi)\n            }\n          }\n\n          if (!removed) {\n            new_val.push(selectedOption[this.props.optionValue])\n          }\n\n          this.props.setInput(this.props.name, new_val)\n        } else {\n          let val = findArrayName(this.props.name, this.props.input) || null\n\n          if (this.props.value) {\n            val = this.props.value\n          }\n\n          let new_val = null\n\n          if (val != selectedOption[this.props.optionValue]) {\n            new_val = selectedOption[this.props.optionValue]\n          }\n          this.props.setInput(this.props.name, new_val)\n          // console.log('NEW_VAL_SINGLE', new_val)\n        }\n      } catch (e) {\n        // console.log(e)\n        this.props.setInput(this.props.name, null)\n      }\n    }\n\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(\n        findArrayName(this.props.name, prevProps.input),\n        findArrayName(this.props.name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.defaultValue,\n        findArrayName(this.props.name, this.props.input)\n      )\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  render() {\n    let options = []\n\n    try {\n      options = this.props.options.length > 0 ? this.props.options : []\n    } catch (e) {}\n\n    return (\n      <div className='custom-controls-stacked'>\n        {options.map((value) => {\n          let isChecked = false\n\n          // console.log(value, this.state.defaultValue, this.props.optionValue)\n\n          try {\n            if (this.props.isMultiple) {\n              isChecked = includes(\n                this.state.defaultValue,\n                value[this.props.optionValue]\n              )\n            } else {\n              isChecked = isEqual(\n                value[this.props.optionValue],\n                this.state.defaultValue[this.props.optionValue]\n              )\n            }\n          } catch (e) {\n            // console.log(e)\n          }\n          // console.log(this.props.name, isChecked)\n          /*\n          if (this.props.disabled || this.props.isReadonly) {\n            if (isChecked) {\n              return this.labelGenerate(value).map((val, i) => {\n                if (isEqual(String(val).substring(0, 3), 'AT-')) {\n                  return (\n                    <InputFile value={val} isReadonly={true} preview={true} />\n                  )\n                } else {\n                  return this.props.isHtml ? parse(String(val)) : val\n                }\n              })\n            } else {\n              return null\n            }\n          } else {\n            */\n\n          return (\n            <React.Fragment>\n              <Form.Check\n                inline={this.state.type == 'inline'}\n                disabled={this.props.disabled || this.props.isReadonly}\n                type={this.props.isMultiple ? 'checkbox' : 'radio'}\n                // className='custom-control-input'\n                name={this.props.name}\n                onChange={this.onChange.bind(this, value)}\n                value={value}\n                checked={isChecked}\n                label={this.labelGenerate(value).map((val, i) => {\n                  if (isEqual(String(val).substring(0, 3), 'AT-')) {\n                    return (\n                      <InputFile value={val} isReadonly={true} preview={true} />\n                    )\n                  } else {\n                    return this.props.isHtml ? parse(String(val)) : val\n                  }\n                })}\n              />\n            </React.Fragment>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nlet mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key)),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputChoose)\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport './InputDate.module.css'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nlet formatDefault = 'YYYY-MM-DD'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n    </InputGroup>\n  )\n}\n\nclass InputDate extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault).toDate()\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    let x = moment(date).format('d')\n\n    return x == 0 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    let dateFormat = this.props.dateFormat\n      ? this.props.dateFormat\n      : this.props.yearOnly\n      ? 'yyyy'\n      : 'yyyy-MM-dd'\n\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          (moment(this.state.start_selected, formatDefault).isValid()\n            ? moment(this.state.start_selected, formatDefault).format(\n                'DD-MM-YYYY'\n              )\n            : '') +\n          ' - ' +\n          (moment(this.state.end_selected, formatDefault).isValid()\n            ? moment(this.state.end_selected, formatDefault).format(\n                'DD-MM-YYYY'\n              )\n            : '')\n        )\n      } else {\n        return (\n          <div className='input-daterange input-group'>\n            <DatePicker\n              minDate={\n                moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tanggal'\n              }\n              selected={this.state.start_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              customInput={\n                <CustomInput\n                  value={this.state.start_selected}\n                  name={'start_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeStart}\n              selectsStart={!this.props.yearOnly}\n              peekNextMonth={!this.props.yearOnly}\n              withPortal\n              showMonthDropdown={!this.props.yearOnly}\n              showYearDropdown={!this.props.yearOnly}\n              showYearPicker={this.props.yearOnly}\n              name={'start_' + this.props.name}\n              todayButton={this.props.yearOnly ? null : 'Hari ini'}\n              dayClassName={this.checkTglMerah}\n              dropdownMode='select'\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              shouldCloseOnSelect={false}\n            />\n            <span className='input-group-addon' style={{ background: 'none' }}>\n              &nbsp; - &nbsp;\n            </span>\n            <DatePicker\n              minDate={\n                moment(this.state.start_selected, formatDefault).isValid()\n                  ? moment(this.state.start_selected, formatDefault).toDate()\n                  : moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tanggal'\n              }\n              selected={this.state.end_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              name={'end_' + this.props.name}\n              selectsEnd\n              customInput={\n                <CustomInput\n                  value={this.state.end_selected}\n                  name={'end_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeEnd}\n              selectsStart={!this.props.yearOnly}\n              peekNextMonth={!this.props.yearOnly}\n              withPortal\n              showMonthDropdown={!this.props.yearOnly}\n              showYearDropdown={!this.props.yearOnly}\n              showYearPicker={this.props.yearOnly}\n              dayClassName={this.checkTglMerah}\n              todayButton={this.props.yearOnly ? null : 'Hari ini'}\n              dropdownMode='select'\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              shouldCloseOnSelect={false}\n            />\n          </div>\n        )\n      }\n    }\n\n    /*\n    if (this.props.yearOnly) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return moment(this.state.selected).format('YYYY')\n      } else {\n        return (\n          <DatePicker\n            dateFormat={dateFormat}\n            placeholder={\n              this.props.placeholder ? this.props.placeholder : 'Tahun'\n            }\n            selected={this.state.selected}\n            id={this.props.name}\n            showYearPicker\n            customInput={\n              <CustomInput value={this.state.selected} name={this.props.name} />\n            }\n            disabled={this.props.disabled || this.props.isReadonly}\n            readOnly={this.props.disabled || this.props.isReadonly}\n            onChange={this.handleInputChange}\n            shouldCloseOnSelect={false}\n          />\n        )\n      }\n    }\n    */\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return moment(this.props.input[this.props.name], formatDefault).isValid()\n        ? moment(this.props.input[this.props.name], formatDefault).format(\n            this.props.yearOnly ? 'YYYY' : 'DD-MM-YYYY'\n          )\n        : ''\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          moment(this.props.minDate, formatDefault).isValid()\n            ? moment(this.props.minDate, formatDefault).toDate()\n            : null\n        }\n        maxDate={\n          moment(this.props.maxDate, formatDefault).isValid()\n            ? moment(this.props.maxDate, formatDefault).toDate()\n            : null\n        }\n        dateFormat={dateFormat}\n        placeholder={\n          this.props.placeholder ? this.props.placeholder : 'Tanggal'\n        }\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        selected={this.state.selected}\n        isClearable={!this.props.disabled && !this.props.isReadonly}\n        id={this.props.name}\n        className='form-control'\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        selectsStart={!this.props.yearOnly}\n        peekNextMonth={!this.props.yearOnly}\n        withPortal\n        showMonthDropdown={!this.props.yearOnly}\n        showYearDropdown={!this.props.yearOnly}\n        showYearPicker={this.props.yearOnly}\n        todayButton={this.props.yearOnly ? null : 'Hari ini'}\n        dropdownMode='select'\n        disabled={this.props.disabled || this.props.isReadonly}\n        readOnly={this.props.disabled || this.props.isReadonly}\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputDate)\n","import React from 'react'\n\nimport Cleave from 'cleave.js/react'\n\nimport { isEmpty, debounce, isEqual, isUndefined, isNull } from 'lodash'\n\nimport InputRange from 'react-input-range'\n\nimport { findArrayName, slug, numberFormat } from 'tcomponent'\n\nimport { connect } from 'react-redux'\n\nclass InputNumber extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let options = this.props.enableNegative\n      ? {\n          numeral: true\n        }\n      : {\n          numeral: true,\n          numeralPositiveOnly: true\n        }\n\n    this.state = {\n      defaultValue: null,\n      options: {\n        numeral: true\n      },\n      event: null,\n      value: null,\n      props_name: slug(this.props.name, '_')\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  validate_min_max(val, min = 0, max = 100) {\n    if (this.props.enableNegative && val < 0) {\n      min = -max\n    }\n\n    if (isNaN(val)) {\n      val = min\n    }\n\n    val = parseFloat(val)\n\n    if (val >= max) {\n      val = max\n    } else if (val <= min) {\n      val = min\n    }\n\n    return val ? Number(val) : null\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!isEqual(this.props.type, prevProps.type)) {\n      this.checkType()\n    }\n    if (\n      !isEqual(\n        findArrayName(this.state.props_name, prevProps.input),\n        findArrayName(this.state.props_name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.value,\n        findArrayName(this.state.props_name, this.props.input)\n      )\n    ) {\n      this.setState({\n        rawValue:\n          findArrayName(this.state.props_name, this.props.input) || null,\n        value: findArrayName(this.state.props_name, this.props.input) || null\n      })\n      this.onRefresh()\n    }\n\n    if (\n      this.props.value &&\n      prevProps.value != this.props.value &&\n      this.props.value != this.state.value\n    ) {\n      let value = this.props.value || null\n\n      this.setState({\n        rawValue: value,\n        value: value\n      })\n\n      this.onRefresh()\n    }\n  }\n\n  handleInputChange = (event) => {\n    let val = null\n\n    if (this.props.type == 'decimal') {\n      val = Number(event.target.value.replace(/[^0-9.-]+/g, ''))\n    } else if (this.props.type == 'percent') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        0,\n        100\n      )\n    } else if (this.props.type == 'range_three') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        1,\n        3\n      )\n    } else if (this.props.type == 'range_hundred') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        1,\n        100\n      )\n    } else if (this.props.type == 'range_depend') {\n      val = this.validate_min_max(\n        event.target.value.replace(/[^0-9.-]+/g, ''),\n        0,\n        100\n      )\n    } else {\n      val = event.target.value.replace(/[^0-9.-]+/g, '')\n    }\n\n    let min = this.props.minValue ? Number(this.props.minValue) : null\n\n    let max = this.props.maxValue ? Number(this.props.maxValue) : null\n\n    if (max && min) {\n      val = this.validate_min_max(val, min, max)\n    } else if (!max && min) {\n      val = this.validate_min_max(val, min, 999999999999)\n    } else if (max && !min) {\n      val = this.validate_min_max(val, 0, max)\n    }\n\n    val = val ? val : 0\n\n    if (this.state.props_name) {\n      this.props.setInput(this.state.props_name, val)\n    }\n\n    let rawValue = event.target.rawValue || null\n\n    if (\n      !isNaN(parseFloat(rawValue)) &&\n      !isNaN(parseFloat(val)) &&\n      parseFloat(rawValue) !== parseFloat(val)\n    ) {\n      this.state.event.setRawValue(val)\n    }\n  }\n\n  onChange = (val) => {\n    this.setState({\n      value: val\n    })\n\n    if (this.state.props_name) {\n      this.props.setInput(this.state.props_name, val)\n    }\n  }\n\n  onRefresh = () => {\n    let val = ''\n\n    try {\n      let input_name = findArrayName(this.state.props_name, this.props.input)\n      val = this.props.value ? this.props.value : input_name\n    } catch (e) {}\n\n    let min = this.props.minValue ? Number(this.props.minValue) : null\n\n    let max = this.props.maxValue ? Number(this.props.maxValue) : null\n\n    let value = val ? parseInt(val) : min\n\n    if (this.props.type == 'decimal') {\n      value = val ? parseFloat(val) : min\n    } else if (\n      this.props.type == 'percent' ||\n      this.props.type == 'range_three' ||\n      max ||\n      min\n    ) {\n      value = val ? parseFloat(val) : min\n    }\n\n    if (isNaN(value)) {\n      value = min\n    }\n\n    this.setState({ value })\n\n    try {\n      let rawValue = this.state.event.lastInputValue || null\n\n      if (parseFloat(rawValue) !== parseFloat(value)) {\n        this.state.event.setRawValue(value)\n      }\n    } catch (e) {}\n  }\n\n  componentDidMount() {\n    this.checkType()\n  }\n\n  checkType = () => {\n    let options = {\n      numeral: true,\n      numeralPositiveOnly: true\n    }\n\n    if (\n      this.props.type == 'decimal' ||\n      this.props.type == 'percent' ||\n      this.props.type == 'range_three'\n    ) {\n    } else {\n      options.numeralThousandsGroupStyle = 'thousand'\n    }\n\n    this.setState({\n      options,\n      rawValue: findArrayName(this.state.props_name, this.props.input),\n      value: findArrayName(this.state.props_name, this.props.input)\n    })\n\n    this.onRefresh()\n  }\n\n  onInit(cleave) {\n    this.setState({ event: cleave })\n  }\n\n  render() {\n    if (this.props.disabled || this.props.isReadonly) {\n      return !isNull(this.state.value) && !isUndefined(this.state.value)\n        ? numberFormat(this.state.value, '')\n        : null\n    }\n\n    if (this.props.type == 'range') {\n      return (\n        <InputRange\n          maxValue={this.props.maxValue}\n          minValue={this.props.minValue}\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n      )\n    }\n    return (\n      <Cleave\n        placeholder={this.props.placeholder ? this.props.placeholder : ''}\n        id={this.state.props_name}\n        name={this.state.props_name}\n        onInit={this.onInit.bind(this)}\n        value={this.state.value}\n        onChange={this.handleInputChange}\n        options={this.state.options}\n        className='form-control'\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) => {\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputNumber)\n","import React from 'react'\n\nimport LoadingOverlay from 'react-loading-overlay'\n\nimport styled from 'styled-components'\n\nimport Loading from './Loading'\n\nconst StyledLoader = styled(LoadingOverlay)`\n  overflow: hidden;\n\n  ._loading_overlay_overlay {\n    background: rgba(255, 255, 255, 0.5);\n  }\n  &._loading_overlay_wrapper--active {\n    overflow: hidden;\n  }\n`\n\nfunction MyLoadingOvelay(props) {\n  return (\n    <StyledLoader\n      fadeSpeed={250}\n      active={props.isLoading}\n      spinner={<Loading />}\n    >\n      {props.children}\n    </StyledLoader>\n  )\n}\n\nexport default MyLoadingOvelay\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector, connect } from 'react-redux'\n\nimport { findArrayName, slug, useDebounce, numberFormat } from 'tcomponent'\n\nimport './DataTableContainer.module.css'\n\nimport Loading from './Loading'\n\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination\n} from 'react-table'\n\nimport { isEmpty, isNull, isUndefined } from 'lodash'\n\nimport { Form, InputGroup, Button, Table } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  faBars,\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faAngleRight,\n  faAngleLeft\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { faFile } from '@fortawesome/free-regular-svg-icons'\n\nexport const Filter = ({ column }) => {\n  return null\n  // return (\n  //   <div style={{ margin: '4px 0' }}>\n  //     {column.canFilter && column.render('Filter')}\n  //   </div>\n  // )\n}\n\nexport const DefaultColumnFilter = (props) => {\n  let filterValue = props.column.filterValue\n\n  let id = props.column.id\n\n  let name = props.name\n\n  let dispatch = useDispatch()\n\n  let [data, setData] = React.useState(filterValue)\n\n  let key = slug('search_' + name + '_' + id, '_')\n\n  let filter = useSelector((state) => state.core.filter)\n\n  useEffect(() => {\n    setData(filter[key])\n  }, [])\n\n  function onChange(e) {\n    e.preventDefault()\n\n    setData(e.target.value)\n\n    dispatch({\n      type: 'SET_MULTI_FILTER',\n      payload: {\n        [key]: e.target.value,\n        [slug('loaded_' + name, '_')]: false\n      }\n    })\n  }\n\n  return (\n    <Form.Control\n      key={key}\n      id={key}\n      name={key}\n      value={data}\n      style={{ zIndex: 0 }}\n      onChange={onChange}\n      placeholder={`Pencarian`}\n    />\n  )\n}\n\n/*\nexport let SelectColumnFilter = ({\n  column: { filterValue, setFilter, preFilteredRows, id }\n}) => {\n  let options = React.useMemo(() => {\n    let options = new Set()\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id])\n    })\n    return [...options.values()]\n  }, [id, preFilteredRows])\n\n  return (\n    <CustomInput\n      id='custom-select'\n      type='select'\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=''>All</option>\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </CustomInput>\n  )\n}\n*/\n\nfunction DataTableContainer({\n  columns,\n  data,\n  renderRowSubComponent,\n  customPageIndex,\n  customPageSize,\n  customPageCount,\n  loading,\n  isColumnsSearchable,\n  primaryKey,\n  name,\n  customPageTotal\n}) {\n  // console.log(customPageIndex)\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let sortBy = []\n\n  for (let i = 0; i < columns.length; i++) {\n    try {\n      let k = slug('sort_' + name + '_' + columns[i][primaryKey], '_')\n\n      let urut = filter[k]\n\n      if (!isEmpty(urut) && !isNull(urut) && !isUndefined(urut)) {\n        sortBy.push({\n          id: columns[i][primaryKey],\n          desc: urut == 'desc'\n        })\n      }\n    } catch (e) {}\n  }\n\n  let {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    visibleColumns,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize }\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: {\n        Filter: (props) => <DefaultColumnFilter {...props} name={name} />\n      },\n      initialState: {\n        pageIndex: customPageIndex,\n        pageSize: customPageSize,\n        sortBy\n      },\n      manualPagination: true,\n      pageCount: customPageCount,\n      manualSortBy: true,\n      defaultCanSort: true,\n      isMultiSortEvent: () => {}\n    },\n\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination\n  )\n\n  let headers = headerGroups[0].headers || []\n\n  useDebounce(\n    () => {\n      let sort = {}\n\n      for (let i = 0; i < headers.length; i++) {\n        let x = headers[i]\n\n        if (x) {\n          let mykey = slug('sort_' + name + '_' + x[primaryKey], '_')\n\n          let mysort = x.isSorted ? (x.isSortedDesc ? 'desc' : 'asc') : null\n\n          if (mysort != filter[mykey]) {\n            sort[mykey] = mysort\n          }\n        }\n      }\n\n      if (!isEmpty(sort)) {\n        dispatch({\n          type: 'SET_MULTI_FILTER',\n          payload: { ...sort, [slug('loaded_' + name, '_')]: false }\n        })\n      }\n    },\n    500,\n    [headers]\n  )\n\n  let [localLoading, setLocalLoading] = useState(loading)\n\n  let [curpage, setCurPage] = useState(pageIndex)\n\n  let dispatch = useDispatch()\n\n  let generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? ' ↓' : ' ↑') : ''\n  }\n\n  let onChangeInSelect = (event) => {\n    setPageSize(Number(event.target.value))\n\n    dispatch({\n      type: 'SET_MULTI_FILTER',\n      payload: {\n        [slug('load_' + name, '_')]: Number(event.target.value),\n        [slug('page_' + name, '_')]: curpage\n      }\n    })\n  }\n\n  let onChangeInInput = (event) => {\n    let page = event.target.value ? Number(event.target.value) : 0\n\n    customgotoPage(page)\n  }\n\n  let customcanNextPage = customPageIndex < customPageCount\n\n  let customcanPreviousPage = customPageIndex >= 2\n\n  let customnextPage = () => {\n    if (curpage < customPageCount) {\n      customgotoPage(curpage + 1)\n    }\n  }\n\n  let custompreviousPage = () => {\n    if (curpage >= 2) {\n      customgotoPage(curpage - 1)\n    }\n  }\n\n  let customgotoPage = (isi) => {\n    setCurPage(isi)\n  }\n\n  useDebounce(\n    () => {\n      gotoPage(curpage)\n      dispatch({\n        type: 'SET_MULTI_FILTER',\n        payload: {\n          [slug('load_' + name, '_')]: pageSize,\n          [slug('page_' + name, '_')]: curpage\n        }\n      })\n    },\n    500,\n    [curpage]\n  )\n\n  useEffect(() => {\n    if (setLocalLoading && !loading) {\n      setTimeout(() => setLocalLoading(loading), 500)\n    } else {\n      setLocalLoading(loading)\n    }\n  }, [loading])\n\n  if (isEmpty(name)) {\n    return <p>Props name is Required</p>\n  }\n\n  return (\n    <div>\n      <div className='custom-scroll' style={{ overflow: 'auto' }}>\n        <InputGroup>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(1)}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleLeft} />\n          </Button>\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={custompreviousPage}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleLeft} />\n          </Button>\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faFile} /> &nbsp; Hal :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            type='number'\n            min={1}\n            max={customPageCount}\n            value={curpage}\n            onChange={onChangeInInput}\n          />\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faBars} /> &nbsp; Lihat :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            type='number'\n            min={1}\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            max={50}\n            value={pageSize}\n            onChange={onChangeInSelect}\n          />\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={customnextPage}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleRight} />\n          </Button>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(customPageCount)}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </Button>\n        </InputGroup>\n      </div>\n\n      <div className='text-center mt-2 mb-2'>\n        <strong>{numberFormat(customPageIndex, '')}</strong> dari{' '}\n        <strong>{numberFormat(customPageCount, '')}</strong> hal. Total{' : '}\n        <strong>{numberFormat(customPageTotal, '')}</strong> baris\n      </div>\n\n      <Table\n        style={{ margin: 0, zIndex: 0 }}\n        responsive\n        bordered\n        hover\n        striped\n        vcenter\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  style={{\n                    padding: '4px 8px',\n                    borderTop: '1px solid #dee2e6'\n                  }}\n                  {...column.getHeaderProps()}\n                >\n                  <div {...column.getSortByToggleProps()}>\n                    <span\n                      style={{\n                        display: 'inline-block'\n                      }}\n                    >\n                      {column.render('Header')}\n                    </span>\n                    <span\n                      style={{\n                        display: 'inline-block',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      {generateSortingIndicator(column)}\n                    </span>\n                  </div>\n                  {isColumnsSearchable && <Filter column={column} />}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {page.length > 0 &&\n          !localLoading &&\n          parseInt(customPageIndex) === parseInt(curpage)\n            ? page.map((row) => {\n                prepareRow(row)\n                return (\n                  <React.Fragment key={row.getRowProps().key}>\n                    <tr>\n                      {row.cells.map((cell, index) => {\n                        return (\n                          <td\n                            style={{\n                              padding: '4px 8px',\n                              width: index == 0 ? '10px' : 'auto'\n                            }}\n                            {...cell.getCellProps()}\n                          >\n                            {cell.render('Cell')}\n                          </td>\n                        )\n                      })}\n                    </tr>\n                    {row.isExpanded && (\n                      <tr>\n                        <td\n                          style={{\n                            padding: '4px 8px'\n                          }}\n                          colSpan={visibleColumns.length}\n                        >\n                          {renderRowSubComponent(row)}\n                        </td>\n                      </tr>\n                    )}\n                  </React.Fragment>\n                )\n              })\n            : headerGroups.map((headerGroup) => (\n                <tr>\n                  <td\n                    style={{\n                      padding: '12px 0',\n                      textAlign: 'center'\n                    }}\n                    colSpan={headerGroup.headers.length}\n                  >\n                    {localLoading ||\n                    parseInt(customPageIndex) !== parseInt(curpage)\n                      ? 'Memproses'\n                      : 'Tidak ada data'}\n                  </td>\n                </tr>\n              ))}\n        </tbody>\n      </Table>\n\n      <div className='text-center mt-2 mb-2'>\n        <strong>{numberFormat(customPageIndex, '')}</strong> dari{' '}\n        <strong>{numberFormat(customPageCount, '')}</strong> hal. Total{' : '}\n        <strong>{numberFormat(customPageTotal, '')}</strong> baris\n      </div>\n      <div className='custom-scroll' style={{ overflow: 'auto' }}>\n        <InputGroup>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(1)}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleLeft} />\n          </Button>\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={custompreviousPage}\n            disabled={!customcanPreviousPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleLeft} />\n          </Button>\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faFile} /> &nbsp; Hal :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            type='number'\n            min={1}\n            max={customPageCount}\n            value={curpage}\n            onChange={onChangeInInput}\n          />\n\n          <InputGroup.Text style={{ background: 'none' }}>\n            <FontAwesomeIcon icon={faBars} /> &nbsp; Lihat :{' '}\n          </InputGroup.Text>\n\n          <Form.Control\n            type='number'\n            min={1}\n            style={{\n              borderLeft: 'none',\n              borderRight: 'none',\n              minWidth: 72,\n              zIndex: 0\n            }}\n            max={50}\n            value={pageSize}\n            onChange={onChangeInSelect}\n          />\n\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={customnextPage}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleRight} />\n          </Button>\n          <Button\n            style={{ border: 'none', zIndex: 0 }}\n            variant='primary'\n            onClick={() => customgotoPage(customPageCount)}\n            disabled={!customcanNextPage || loading}\n          >\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </Button>\n        </InputGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default DataTableContainer\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector, connect } from 'react-redux'\n\nimport { findArrayName, slug, useDebounce } from 'tcomponent'\n\nimport './DataTable.module.css'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport DataTableContainer from './DataTableContainer'\n\nimport { useIsVisible } from 'react-is-visible'\n\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useExpanded,\n  usePagination\n} from 'react-table'\n\nimport {\n  filter as _filter,\n  isArray,\n  uniq,\n  findIndex,\n  find,\n  isEmpty,\n  uniqBy,\n  isEqual,\n  isUndefined,\n  isBoolean\n} from 'lodash'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faSync, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faArrowAltCircleDown,\n  faArrowAltCircleUp\n} from '@fortawesome/free-regular-svg-icons'\n\nimport './DataTable.module.css'\n\nimport {\n  Row,\n  InputGroup,\n  Col,\n  Form,\n  Button,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n  Tooltip\n} from 'react-bootstrap'\n\nfunction DataTable(props) {\n  let [visible, setVisible] = useState(false)\n\n  let [link, setLink] = useState('')\n\n  let [data, setData] = useState([])\n\n  let [temp, setTemp] = useState([])\n\n  let [meta, setMeta] = useState({})\n\n  let [tooltipOpenEx, setTooltipOpenEx] = useState(false)\n\n  let [tooltipOpenIm, setTooltipOpenIm] = useState(false)\n\n  let toggleImport = () => setTooltipOpenIm(!tooltipOpenIm)\n\n  let toggleExport = () => setTooltipOpenEx(!tooltipOpenEx)\n\n  let dispatch = useDispatch()\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let user = useSelector((state) => state.auth.user) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let key_select = slug('selected_' + props.name, '_')\n\n  let primaryKey = props.primaryKey ? props.primaryKey : 'id'\n\n  function onChecked(rowInfo, input, exist = false) {\n    let value = rowInfo.row.original || {}\n\n    if (props.selectable == 'single') {\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value\n        }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: value[primaryKey]\n        }\n      })\n    } else {\n      let new_input = []\n\n      if (exist) {\n        new_input =\n          _filter(findArrayName(key_select, input), (o) => {\n            return o && value && parseInt(o) != parseInt(value[primaryKey])\n          }) || []\n      } else {\n        new_input = findArrayName(key_select, input) || []\n\n        if (!isArray(new_input)) {\n          new_input = []\n        }\n\n        new_input.push(value[primaryKey])\n      }\n\n      new_input = uniq(new_input)\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: new_input\n        }\n      })\n    }\n  }\n\n  let checkComponent = {\n    Header: '#',\n    id: 'select',\n    width: '10px',\n    Cell: (row) => {\n      let local_input = useSelector((state) => state.core.input)\n\n      let checked = false\n\n      try {\n        if (props.selectable == 'single') {\n          checked =\n            findArrayName(key_select, local_input) ==\n            row.row.original[primaryKey]\n        } else {\n          checked =\n            findIndex(findArrayName(key_select, local_input), function (o) {\n              return o == row.row.original[primaryKey]\n            }) > -1\n        }\n      } catch (e) {}\n\n      return (\n        <Form.Check\n          inline\n          id={slug(props.name + '_check_' + row.row.original[primaryKey], '_')}\n          name={slug(\n            props.name + '_check_' + row.row.original[primaryKey],\n            '_'\n          )}\n          type={props.selectable == 'single' ? 'radio' : 'checkbox'}\n          value={1}\n          checked={checked}\n          disabled={props.isReadonly}\n          onChange={() => onChecked(row, local_input, checked)}\n        />\n      )\n    }\n  }\n\n  let nodeRef = useRef()\n\n  let isVisible = useIsVisible(nodeRef)\n\n  let col = !isEmpty(props.selectable)\n    ? [checkComponent, ...props.columns]\n    : [...props.columns]\n\n  if (props.action) {\n    let actionComponent = {\n      Header: 'Aksi',\n      id: 'aksi_' + props.name,\n      sortable: false,\n      Cell: (row) => {\n        let param = useSelector((state) => state.core.parameter)\n\n        let isi = row.row.original[primaryKey]\n\n        function openToggle(data) {\n          let current = isEqual(param.dropdown, data) ? null : data\n\n          dispatch({\n            type: 'SET_PARAMETER',\n            payload: {\n              key: 'dropdown',\n              value: current\n            }\n          })\n        }\n\n        return (\n          <DropdownButton\n            key={'dropdown_' + props.name + '_' + isi}\n            size='sm'\n            id={'dropdown_' + props.name + '_' + isi}\n            // className='custom-scroll'\n            isOpen={isEqual(param.dropdown, isi)}\n            toggle={() => openToggle(isi)}\n            drop={'end'}\n            variant='primary'\n            title={''}\n          >\n            {_filter(props.action, function (o) {\n              return isUndefined(o.show) || o.show\n            }).map((value, index) => {\n              let disabled = isBoolean(value.disabled) ? value.disabled : false\n\n              return (\n                <Dropdown.Item\n                  key={'dropdownitem_' + props.name + '_' + isi + '_' + index}\n                  onClick={() => value.onClick(row.row.original)}\n                  disabled={disabled}\n                >\n                  {value.label}\n                </Dropdown.Item>\n              )\n            })}\n          </DropdownButton>\n        )\n      }\n    }\n\n    col = !isEmpty(props.selectable)\n      ? [actionComponent, checkComponent, ...props.columns]\n      : [actionComponent, ...props.columns]\n  }\n\n  useEffect(() => {\n    if (isVisible != visible) {\n      setVisible(isVisible)\n    }\n  })\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('loaded_' + props.name, '_'),\n        value: false\n      }\n    })\n  }, [])\n\n  function onReload() {\n    if (visible) {\n      setLink(window.location.href)\n\n      props.onReload()\n\n      if (!findArrayName(slug('loaded_' + props.name, '_'), filter)) {\n        dispatch({\n          type: 'SET_FILTER',\n          payload: {\n            key: slug('loaded_' + props.name, '_'),\n            value: true\n          }\n        })\n      }\n    }\n  }\n\n  useDebounce(\n    () => {\n      if (visible && (!isEqual(window.location.href, link) || isEmpty(link))) {\n        onReload()\n      }\n    },\n    500,\n    [visible, window.location.href]\n  )\n\n  useDebounce(onReload, 500, [\n    findArrayName(slug('keyword_' + props.name, '_'), filter),\n    findArrayName(slug('page_' + props.name, '_'), filter),\n    findArrayName(slug('load_' + props.name, '_'), filter),\n    findArrayName(slug('loaded_' + props.name, '_'), filter)\n  ])\n\n  function syncParameter() {\n    let new_parameter = null\n\n    let new_input = null\n\n    if (props.selectable == 'single') {\n      new_parameter = new_parameter =\n        find(temp, (o) => {\n          return o && parseInt(o[primaryKey]) == new_input\n        }) || {}\n\n      new_input = findArrayName(key_select, input) || null\n    } else {\n      new_parameter = []\n\n      new_input = findArrayName(key_select, input) || []\n\n      for (let i = 0; i < new_input.length; i++) {\n        let find_data =\n          find(temp, (o) => {\n            return o && parseInt(o[primaryKey]) == new_input[i]\n          }) || {}\n\n        if (!isEmpty(find_data)) {\n          new_parameter.push(find_data)\n        }\n      }\n    }\n\n    dispatch({\n      type: 'SET_PARAMETER',\n      payload: {\n        key: key_select,\n        value: new_parameter\n      }\n    })\n  }\n\n  useDebounce(\n    () => {\n      setTemp((val) => uniqBy([...val, ...data], primaryKey))\n      if (findArrayName(key_select, input)) {\n        syncParameter()\n      }\n    },\n    500,\n    [findArrayName(key_select, input), filter]\n  )\n\n  useDebounce(\n    () => {\n      try {\n        setData(props.data.data || [])\n      } catch (e) {}\n\n      setTemp((val) => uniqBy([...val, ...data], primaryKey))\n\n      try {\n        setMeta(props.data.meta || {})\n      } catch (e) {}\n    },\n    500,\n    [props.data]\n  )\n\n  let columns = React.useMemo(() => col, [])\n\n  let hapus = false\n\n  try {\n    hapus = user.role == 'admin'\n  } catch (e) {}\n\n  return (\n    <LoadingOverlay isLoading={props.isLoading}>\n      <div style={{ padding: '8px 12px' }} ref={nodeRef}>\n        <div\n          style={{ marginBottom: '12px' }}\n          //  className=\"card-header\"\n        >\n          <Row>\n            <Col xs='12' sm='12' md='8' lg='8'>\n              <div\n              // className={props.export || props.import ? \"col-7\" : \"col-9\"}\n              >\n                {props.renderFilter ? props.renderFilter : null}\n              </div>\n            </Col>\n          </Row>\n\n          <Row style={{ justifyContent: 'flex-end' }}>\n            {/* <Col xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\">\n  <div >\n  {(props.export || props.import) && (\n  <div className=\"col-2\">\n  <InputGroup>\n  {props.export && (\n  <InputGroupAddon>\n  <Button\n  style={{ zIndex: 0 }}\n  className=\"mr-1 btn btn-primary\"\n  onClick={props.exportReload}\n  type=\"button\"\n  disabled={props.disabledButton}\n  >\n  Export\n  </Button>\n  </InputGroupAddon>\n)}\n{props.import && (\n<InputGroupAddon>\n<Button\nstyle={{ zIndex: 0 }}\nclassName=\"mr-1 btn btn-primary\"\nonClick={props.importReload}\ntype=\"button\"\ndisabled={props.disabledButton}\n>\nImport\n</Button>\n</InputGroupAddon>\n)}\n</InputGroup>\n</div>\n)}\n</div>\n</Col> */}\n\n            <Col xs='12' sm='12' md='4' lg='4'>\n              <div>\n                {props.isSearchable && (\n                  <div>\n                    <InputGroup>\n                      <InputGroup.Text style={{ background: 'none' }}>\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n\n                      <Form.Control\n                        id={slug('keyword_' + props.name, '_')}\n                        key={slug('keyword_' + props.name, '_')}\n                        style={{ borderLeft: 'none' }}\n                        className='form-control'\n                        value={findArrayName(\n                          slug('keyword_' + props.name, '_'),\n                          filter\n                        )}\n                        onChange={(e) => {\n                          dispatch({\n                            type: 'SET_MULTI_FILTER',\n                            payload: {\n                              [slug('keyword_' + props.name, '_')]:\n                                e.target.value,\n                              [slug('page_' + props.name, '_')]: 1,\n                              loaded: false\n                            }\n                          })\n                        }}\n                        type='text'\n                        id={slug('keyword_' + key_select)}\n                        name={slug('keyword_' + props.name, '_')}\n                        placeholder='Pencarian'\n                      />\n\n                      <Button\n                        style={{ zIndex: 0 }}\n                        variant='primary'\n                        onClick={onReload}\n                        type='button'\n                        disabled={props.isLoading}\n                      >\n                        <FontAwesomeIcon icon={faSync} spin={props.isLoading} />\n                      </Button>\n\n                      {(props.export || props.import) && (\n                        <React.Fragment>\n                          {props.export && (\n                            <Button\n                              id='exportFile'\n                              style={{ zIndex: 0 }}\n                              variant='primary'\n                              className='mr-1'\n                              onClick={props.exportReload}\n                              type='button'\n                              disabled={props.disabledButton}\n                            >\n                              <FontAwesomeIcon icon={faArrowAltCircleDown} />\n\n                              <Tooltip\n                                placement='top'\n                                isOpen={tooltipOpenEx}\n                                autohide={false}\n                                target='exportFile'\n                                toggle={toggleExport}\n                              >\n                                Export\n                              </Tooltip>\n                            </Button>\n                          )}\n                          {props.import && (\n                            <Button\n                              id='importFile'\n                              style={{ zIndex: 0 }}\n                              variant='primary'\n                              className='mr-1'\n                              onClick={props.importReload}\n                              type='button'\n                              disabled={props.disabledButton}\n                            >\n                              <FontAwesomeIcon icon={faArrowAltCircleUp} />\n                              <Tooltip\n                                placement='top'\n                                isOpen={tooltipOpenIm}\n                                autohide={false}\n                                target='importFile'\n                                toggle={toggleImport}\n                              >\n                                Import\n                              </Tooltip>\n                            </Button>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </InputGroup>\n                  </div>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <DataTableContainer\n          name={slug(props.name, '_')}\n          columns={columns}\n          data={data}\n          primaryKey={primaryKey}\n          isColumnsSearchable={props.isColumnsSearchable}\n          fetchData={onReload}\n          loading={props.isLoading}\n          customPageTotal={meta && !isEmpty(meta) ? meta.total : 0}\n          customPageCount={meta && !isEmpty(meta) ? meta.last_page : 1}\n          customPageSize={\n            meta && !isEmpty(meta)\n              ? meta.per_page\n              : findArrayName(slug('load_' + props.name, '_'), filter)\n              ? findArrayName(slug('load_' + props.name, '_'), filter)\n              : 10\n          }\n          customPageIndex={\n            meta && !isEmpty(meta)\n              ? meta.current_page\n              : findArrayName(slug('page_' + props.name, '_'), filter)\n              ? findArrayName(slug('page_' + props.name, '_'), filter)\n              : 1\n          }\n        />\n      </div>\n    </LoadingOverlay>\n  )\n}\n\nexport default DataTable\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar, faClock } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nlet formatDefault = 'YYYY-MM-DD HH:mm:ss'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          borderRight: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faClock} />\n      </InputGroup.Text>\n    </InputGroup>\n  )\n}\n\nclass InputDateTime extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = _.debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault).toDate()\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    const x = moment(date).format('d')\n\n    return x == 5 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          <div className='input-daterange input-group'>\n            {moment(this.state.start_selected, formatDefault).isValid()\n              ? moment(this.state.start_selected, formatDefault).format(\n                  'DD-MM-YYYY HH:mm:ss'\n                )\n              : null}\n\n            <span style={{ background: 'none' }}>&nbsp; s/d &nbsp;</span>\n            {moment(this.state.end_selected, formatDefault).isValid()\n              ? moment(this.state.end_selected, formatDefault).format(\n                  'DD-MM-YYYY HH:mm:ss'\n                )\n              : null}\n          </div>\n        )\n      }\n\n      return (\n        <div\n          className='input-daterange input-group'\n          style={{ background: 'none' }}\n        >\n          <DatePicker\n            minDate={\n              moment(this.props.minDate, formatDefault).isValid()\n                ? moment(this.props.minDate, formatDefault).toDate()\n                : null\n            }\n            maxDate={\n              moment(this.props.maxDate, formatDefault).isValid()\n                ? moment(this.props.maxDate, formatDefault).toDate()\n                : null\n            }\n            dateFormat={\n              this.props.dateFormat\n                ? this.props.dateFormat\n                : 'yyyy-MM-dd HH:mm:ss'\n            }\n            placeholder={\n              this.props.placeholder\n                ? this.props.placeholder\n                : 'Tanggal & Waktu'\n            }\n            selected={this.state.start_selected}\n            isClearable={true}\n            customInput={\n              <CustomInput\n                value={this.state.start_selected}\n                name={'start_' + this.props.name}\n              />\n            }\n            onChange={this.handleInputChangeStart}\n            timeInputLabel='Waktu : '\n            showTimeInput\n            selectsStart\n            peekNextMonth\n            withPortal\n            showMonthDropdown\n            showYearDropdown\n            name={'start_' + this.props.name}\n            todayButton={'Hari ini'}\n            dayClassName={this.checkTglMerah}\n            dropdownMode='select'\n            startDate={this.state.start_selected}\n            endDate={this.state.end_selected}\n            shouldCloseOnSelect={false}\n          />\n          <span className='input-group-addon' style={{ background: 'none' }}>\n            &nbsp; - &nbsp;\n          </span>\n          <DatePicker\n            minDate={\n              moment(this.state.start_selected, formatDefault).isValid()\n                ? moment(this.state.start_selected, formatDefault).toDate()\n                : moment(this.props.minDate, formatDefault).isValid()\n                ? moment(this.props.minDate, formatDefault).toDate()\n                : null\n            }\n            maxDate={\n              moment(this.props.maxDate, formatDefault).isValid()\n                ? moment(this.props.maxDate, formatDefault).toDate()\n                : null\n            }\n            dateFormat={\n              this.props.dateFormat\n                ? this.props.dateFormat\n                : 'yyyy-MM-dd HH:mm:ss'\n            }\n            placeholder={\n              this.props.placeholder\n                ? this.props.placeholder\n                : 'Tanggal & Waktu'\n            }\n            selected={this.state.end_selected}\n            isClearable={true}\n            name={'end_' + this.props.name}\n            selectsEnd\n            timeInputLabel='Waktu : '\n            showTimeInput\n            customInput={\n              <CustomInput\n                value={this.state.end_selected}\n                name={'end_' + this.props.name}\n              />\n            }\n            onChange={this.handleInputChangeEnd}\n            peekNextMonth\n            withPortal\n            showMonthDropdown\n            showYearDropdown\n            dayClassName={this.checkTglMerah}\n            todayButton={'Hari ini'}\n            dropdownMode='select'\n            startDate={this.state.start_selected}\n            endDate={this.state.end_selected}\n            shouldCloseOnSelect={false}\n          />\n        </div>\n      )\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return (\n        <div className='input-daterange input-group'>\n          {moment(this.state.selected, formatDefault).isValid()\n            ? moment(this.state.selected, formatDefault).format(\n                'DD-MM-YYYY HH:mm:ss'\n              )\n            : null}\n        </div>\n      )\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          moment(this.props.minDate, formatDefault).isValid()\n            ? moment(this.props.minDate, formatDefault).toDate()\n            : null\n        }\n        maxDate={\n          moment(this.props.maxDate, formatDefault).isValid()\n            ? moment(this.props.maxDate, formatDefault).toDate()\n            : null\n        }\n        dateFormat={\n          this.props.dateFormat ? this.props.dateFormat : 'yyyy-MM-dd HH:mm:ss'\n        }\n        placeholder={\n          this.props.placeholder ? this.props.placeholder : 'Tanggal & Waktu'\n        }\n        selected={this.state.selected}\n        isClearable={true}\n        id={this.props.name}\n        className='form-control'\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        peekNextMonth\n        timeInputLabel='Waktu : '\n        showTimeInput\n        withPortal\n        showMonthDropdown\n        showYearDropdown\n        todayButton={'Hari ini'}\n        dropdownMode='select'\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputDateTime)\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport TimePicker from 'rc-time-picker'\n\nimport { connect } from 'react-redux'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport './InputTime.module.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faClock } from '@fortawesome/free-regular-svg-icons'\n\nlet formatDefault = 'HH:mm:ss'\n\nlet now = moment()\n\nfunction IconClock() {\n  return (\n    <FontAwesomeIcon\n      style={{ position: 'absolute', left: 6, top: 6 }}\n      icon={faClock}\n      size='sm'\n    />\n  )\n}\n\nclass InputTime extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = moment()\n\n      let end_selected = moment()\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault)\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            )\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault)\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            )\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = moment()\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault)\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            )\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  render() {\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          <div className='input-daterange input-group'>\n            {moment(this.state.start_selected, formatDefault).isValid()\n              ? moment(this.state.start_selected, formatDefault).format(\n                  formatDefault\n                )\n              : ''}\n\n            <span style={{ background: 'none' }}>&nbsp; s/d &nbsp;</span>\n            {moment(this.state.end_selected, formatDefault).isValid()\n              ? moment(this.state.end_selected, formatDefault).format(\n                  formatDefault\n                )\n              : ''}\n          </div>\n        )\n      }\n\n      return (\n        <div className='input-daterange input-group'>\n          <TimePicker\n            value={this.state.start_selected}\n            disabled={this.props.disabled || this.props.isReadonly}\n            // showSecond={false}\n            inputIcon={<IconClock />}\n            format={formatDefault}\n            onChange={this.handleInputChangeStart}\n          />\n          <span className='input-group-addon' style={{ background: 'none' }}>\n            &nbsp; - &nbsp;\n          </span>\n          <TimePicker\n            value={this.state.end_selected}\n            disabled={this.props.disabled || this.props.isReadonly}\n            inputIcon={<IconClock />}\n            // showSecond={false}\n            format={formatDefault}\n            onChange={this.handleInputChangeEnd}\n          />\n        </div>\n      )\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return (\n        <div className='input-daterange input-group'>\n          {moment(this.state.selected, formatDefault).isValid()\n            ? moment(this.state.selected, formatDefault).format(formatDefault)\n            : ''}\n        </div>\n      )\n    }\n\n    return (\n      <TimePicker\n        value={this.state.selected}\n        disabled={this.props.disabled || this.props.isReadonly}\n        // showSecond={false}\n        inputIcon={<IconClock />}\n        format={formatDefault}\n        onChange={this.handleInputChange}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTime)\n","import React from 'react'\n\nimport { map, uniqBy, findIndex, isEmpty } from 'lodash'\n\nimport './InputTag.module.css'\n\nimport ReactTags from 'react-tag-autocomplete'\n\nimport { connect } from 'react-redux'\n\nimport { slug } from 'tcomponent'\n\nclass InputTag extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tags: [],\n      suggestions: [],\n      separator: '|'\n    }\n\n    this.reactTags = React.createRef()\n  }\n\n  onDelete(i) {\n    let tags = this.state.tags.slice(0)\n\n    tags.splice(i, 1)\n\n    this.setState({ tags })\n\n    if (this.props.name) {\n      this.props.setInput(\n        this.props.name,\n        _.map(tags, 'name').join(this.state.separator)\n      )\n    }\n  }\n\n  onAddition(tag) {\n    let tags = [].concat(this.state.tags, tag)\n\n    this.setState({ tags: _.uniqBy(tags, 'name') })\n\n    if (this.props.name) {\n      this.props.setInput(\n        this.props.name,\n        _.map(tags, 'name').join(this.state.separator)\n      )\n    }\n  }\n\n  onFocus(tag) {}\n\n  onValidate(tag) {\n    return _.findIndex(this.state.tags, ['name', tag.name]) < 0\n  }\n\n  componentDidMount() {\n    let suggestions = []\n\n    let tags = []\n\n    for (let i = 0; i < this.props.options.length; i++) {\n      let isi = this.props.options[i]\n\n      if (!_.isEmpty(isi[this.props.optionValue])) {\n        suggestions.push({ name: isi[this.props.optionValue] })\n      }\n    }\n\n    let value = ''\n\n    try {\n      value = this.props.value\n        ? this.props.value\n        : this.props.input[this.props.name]\n        ? this.props.input[this.props.name]\n        : ''\n    } catch (e) {}\n\n    let v = value ? String(value).split(this.state.separator) : []\n\n    for (let i = 0; i < v.length; i++) {\n      let isi = v[i]\n\n      if (!_.isEmpty(isi)) {\n        tags.push({ name: isi })\n      }\n    }\n\n    this.setState({ suggestions, tags })\n  }\n\n  render() {\n    return (\n      <ReactTags\n        minQueryLength={1}\n        noSuggestionsText={'Tidak ada usulan'}\n        ref={this.reactTags}\n        tags={this.state.tags}\n        id={this.props.name}\n        removeButtonText='Klik untuk menghapus'\n        delimiters={['Enter', 'Tab']}\n        placeholderText={\n          this.props.placeholder\n            ? this.props.placeholder\n            : 'Dipisah dengan spasi / enter'\n        }\n        allowNew={this.props.isCreateable}\n        suggestions={this.state.suggestions}\n        onDelete={this.onDelete.bind(this)}\n        onValidate={this.onValidate.bind(this)}\n        onFocus={this.onFocus.bind(this)}\n        onAddition={this.onAddition.bind(this)}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTag)\n","import React from 'react'\n\nimport {\n  debounce,\n  isEmpty,\n  isArray,\n  isUndefined,\n  isNull,\n  find,\n  isEqual,\n  map\n} from 'lodash'\n\nimport './InputSelect.module.css'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport Select from 'react-select'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport { connect } from 'react-redux'\n\nimport parse from 'html-react-parser'\n\nclass InputSelect extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultValue: null,\n      options: [],\n      show: false\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  labelGenerate = (option) => {\n    if (!isEmpty(option)) {\n      if (isArray(this.props.optionLabel)) {\n        let label = []\n\n        let separator = this.props.separator ? this.props.separator : ' | '\n\n        for (let i = 0; i <= this.props.optionLabel.length - 1; i++) {\n          label.push(option[this.props.optionLabel[i]])\n        }\n\n        return label.join(separator)\n      } else {\n        return option[this.props.optionLabel]\n      }\n    }\n\n    return null\n  }\n\n  onRefresh() {\n    let val = null\n\n    let defaultValue = null\n\n    if (this.props.value) {\n      val = this.props.value\n    } else {\n      val = findArrayName(this.props.name, this.props.input) || []\n\n      if (this.props.isMultiple) {\n        defaultValue = []\n\n        for (let i = 0; i < this.props.options.length; i++) {\n          for (let y = 0; y < val.length; y++) {\n            let opt = this.props.options[i]\n\n            let cur = val[y]\n\n            if (String(opt[this.props.optionValue]) == String(cur)) {\n              defaultValue.push(opt)\n            }\n          }\n        }\n      } else {\n        defaultValue = find(\n          this.props.options,\n          function (o) {\n            return String(o[this.props.optionValue]) == val\n          }.bind(this)\n        )\n      }\n    }\n\n    defaultValue =\n      !isUndefined(defaultValue) && !isNull(defaultValue) ? defaultValue : null\n\n    this.setState({\n      defaultValue\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(\n        findArrayName(this.props.name, prevProps.input),\n        findArrayName(this.props.name, this.props.input)\n      ) &&\n      !isEqual(\n        this.state.defaultValue,\n        findArrayName(this.props.name, this.props.input)\n      )\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  onChange = (selectedOption) => {\n    if (this.props.name) {\n      try {\n        if (this.props.isMultiple) {\n          this.props.setInput(\n            this.props.name,\n            map(selectedOption, this.props.optionValue)\n          )\n        } else {\n          this.props.setInput(\n            this.props.name,\n            selectedOption[this.props.optionValue]\n          )\n        }\n      } catch (e) {\n        this.props.setInput(this.props.name, null)\n      }\n    }\n    this.onRefresh()\n  }\n\n  openModal = () => {\n    this.setState({ show: !this.state.show })\n  }\n\n  render() {\n    let options = []\n    try {\n      for (let i = 0; i < this.props.options.length; i++) {\n        let y = this.props.options[i]\n\n        if (this.props.isHtml) {\n          y[this.props.name] = parse(String(y[this.props.name]))\n        }\n        options.push(y)\n      }\n    } catch (e) {}\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return this.labelGenerate(this.state.defaultValue)\n    }\n\n    if (this.props.withModal)\n      return (\n        <React.Fragment>\n          <Row>\n            {!this.props.isReadonly && (\n              <Col lg='1' md='1' sm='3' xs='1'>\n                <Button\n                  type='button'\n                  className='btn btn-icon btn-primary btn-sm'\n                  onClick={this.openModal}\n                >\n                  <FontAwesomeIcon size='sm' icon={faSearch} /> Pilih\n                </Button>\n              </Col>\n            )}\n\n            <Col lg='11' md='11' sm='9' xs='11'>\n              {this.state.defaultValue &&\n              !isUndefined(this.state.defaultValue) &&\n              !isEmpty(this.state.defaultValue)\n                ? this.labelGenerate(this.state.defaultValue)\n                : ''}\n            </Col>\n          </Row>\n          <Modal size='lg' show={this.state.show} onHide={this.openModal}>\n            <ModalHeader closeButton toggle={this.openModal}>\n              <Modal.Title>{this.props.placeholder || 'Pilih'}</Modal.Title>\n            </ModalHeader>\n            <ModalBody>\n              <Select\n                isClearable\n                id={this.props.id ? this.props.id : this.props.name}\n                isSearchable\n                isHtml={this.props.isHtml}\n                isMulti={this.props.isMultiple}\n                placeholder={\n                  this.props.placeholder ? this.props.placeholder : 'Pilih'\n                }\n                getOptionLabel={this.labelGenerate}\n                getOptionValue={(option) => option[this.props.optionValue]}\n                noOptionsMessage={() => 'Data tidak ditemukan'}\n                value={this.state.defaultValue}\n                onChange={this.onChange}\n                options={options}\n                isDisabled={this.props.disabled}\n              />\n            </ModalBody>\n          </Modal>\n        </React.Fragment>\n      )\n\n    return (\n      <Select\n        menuPortalTarget={document.body}\n        menuPosition='fixed'\n        styles={{\n          menuPortal: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit',\n            zIndex: 9999\n          }),\n          menu: (provided) => ({\n            ...provided,\n            fontFamily: 'inherit',\n            fontSize: 'inherit',\n            zIndex: '9999 !important'\n          }),\n          multiValueRemove: (base) => ({\n            ...base,\n            color: '#db2828',\n\n            cursor: 'pointer'\n          }),\n          placeholder: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          multiValue: (base) => ({\n            ...base,\n            background: 'none'\n          }),\n          multiValueLabel: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          option: (base) => ({\n            ...base,\n            fontFamily: 'inherit',\n            fontSize: 'inherit'\n          }),\n          clearIndicator: (base, state) => ({\n            ...base,\n            cursor: 'pointer',\n            color: state.isFocused ? '#db2828' : '#db2828'\n          })\n        }}\n        className='tcomponent-select'\n        // menuPlacement='top'\n        isClearable\n        id={this.props.id ? this.props.id : this.props.name}\n        isSearchable\n        isHtml={this.props.isHtml}\n        isMulti={this.props.isMultiple}\n        placeholder={this.props.placeholder ? this.props.placeholder : 'Pilih'}\n        getOptionLabel={this.labelGenerate}\n        getOptionValue={(option) => option[this.props.optionValue]}\n        noOptionsMessage={() => 'Data tidak ditemukan'}\n        value={this.state.defaultValue}\n        onChange={this.onChange}\n        options={options}\n        isDisabled={this.props.disabled}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSelect)\n","import React from 'react'\n\nimport moment from 'moment'\n\nimport { debounce } from 'lodash'\n\nimport { findArrayName, slug } from 'tcomponent'\n\nimport DatePicker from 'react-datepicker'\n\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons'\n\nimport { InputGroup, Form } from 'react-bootstrap'\n\nlet formatDefault = 'YYYY'\n\nconst CustomInput = (props) => {\n  return (\n    <InputGroup size='sm'>\n      <InputGroup.Text style={{ background: 'none' }}>\n        <FontAwesomeIcon size='sm' icon={faCalendar} />\n      </InputGroup.Text>\n      <Form.Control\n        style={{\n          borderLeft: 'none',\n          fontFamily: 'inherit',\n          fontSize: 'inherit'\n        }}\n        type='text'\n        className='form-control'\n        disabled={props.disabled}\n        name={props.name}\n        value={props.value || ''}\n        onClick={props.onClick}\n      />\n    </InputGroup>\n  )\n}\n\nclass InputYear extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: null,\n      start_selected: null,\n      end_selected: null\n    }\n\n    this.onRefresh = debounce(this.onRefresh.bind(this), 200)\n  }\n\n  onRefresh() {\n    if (this.props.isRange) {\n      let start_selected = null\n\n      let end_selected = null\n\n      try {\n        start_selected = moment(\n          this.props.start_selected,\n          formatDefault\n        ).isValid()\n          ? moment(this.props.start_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('start_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      try {\n        end_selected = moment(this.props.end_selected, formatDefault).isValid()\n          ? moment(this.props.end_selected, formatDefault).toDate()\n          : moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName('end_' + this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ start_selected, end_selected })\n    } else {\n      let selected = null\n\n      try {\n        selected = moment(this.props.selected, formatDefault).isValid()\n          ? moment(this.props.selected, formatDefault).toDate()\n          : moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).isValid()\n          ? moment(\n              findArrayName(this.props.name, this.props.input),\n              formatDefault\n            ).toDate()\n          : null\n      } catch (e) {}\n\n      this.setState({ selected })\n    }\n  }\n\n  handleInputChange = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput(this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeStart = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('start_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  handleInputChangeEnd = (data) => {\n    data = moment(data, formatDefault).isValid()\n      ? moment(data, formatDefault).format(formatDefault)\n      : null\n\n    this.props.setInput('end_' + this.props.name, data)\n\n    this.onRefresh()\n  }\n\n  componentDidMount() {\n    this.onRefresh()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.isRange &&\n      findArrayName(this.props.name, prevProps.input) !=\n        findArrayName(this.props.name, this.props.input) &&\n      findArrayName(this.props.name, this.props.input) != this.state.selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('start_' + this.props.name, prevProps.input) !=\n        findArrayName('start_' + this.props.name, this.props.input) &&\n      findArrayName('start_' + this.props.name, this.props.input) !=\n        this.state.start_selected\n    ) {\n      this.onRefresh()\n    }\n\n    if (\n      this.props.isRange &&\n      findArrayName('end_' + this.props.name, prevProps.input) !=\n        findArrayName('end_' + this.props.name, this.props.input) &&\n      findArrayName('end_' + this.props.name, this.props.input) !=\n        this.state.end_selected\n    ) {\n      this.onRefresh()\n    }\n  }\n\n  checkTglMerah = (date) => {\n    let x = moment(date).format('d')\n\n    return x == 0 || x == 6 ? 'tglmerah' : undefined\n  }\n\n  render() {\n    let dateFormat = this.props.dateFormat ? this.props.dateFormat : 'yyyy'\n\n    if (this.props.isRange) {\n      if (this.props.disabled || this.props.isReadonly) {\n        return (\n          (moment(this.state.start_selected, formatDefault).isValid()\n            ? moment(this.state.start_selected, formatDefault).format('YYYY')\n            : '') +\n          ' - ' +\n          (moment(this.state.end_selected, formatDefault).isValid()\n            ? moment(this.state.end_selected, formatDefault).format('YYYY')\n            : '')\n        )\n      } else {\n        return (\n          <div className='input-daterange input-group'>\n            <DatePicker\n              minDate={\n                moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tahun'\n              }\n              selected={this.state.start_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              customInput={\n                <CustomInput\n                  value={this.state.start_selected}\n                  name={'start_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeStart}\n              withPortal\n              showYearPicker={true}\n              name={'start_' + this.props.name}\n              todayButton={null}\n              dayClassName={this.checkTglMerah}\n              dropdownMode='select'\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              shouldCloseOnSelect={false}\n            />\n            <span className='input-group-addon' style={{ background: 'none' }}>\n              &nbsp; - &nbsp;\n            </span>\n            <DatePicker\n              minDate={\n                moment(this.state.start_selected, formatDefault).isValid()\n                  ? moment(this.state.start_selected, formatDefault).toDate()\n                  : moment(this.props.minDate, formatDefault).isValid()\n                  ? moment(this.props.minDate, formatDefault).toDate()\n                  : null\n              }\n              maxDate={\n                moment(this.props.maxDate, formatDefault).isValid()\n                  ? moment(this.props.maxDate, formatDefault).toDate()\n                  : null\n              }\n              dateFormat={dateFormat}\n              placeholder={\n                this.props.placeholder ? this.props.placeholder : 'Tahun'\n              }\n              selected={this.state.end_selected}\n              isClearable={!this.props.disabled && !this.props.isReadonly}\n              name={'end_' + this.props.name}\n              selectsEnd\n              customInput={\n                <CustomInput\n                  value={this.state.end_selected}\n                  name={'end_' + this.props.name}\n                />\n              }\n              onChange={this.handleInputChangeEnd}\n              withPortal\n              showYearPicker={true}\n              dayClassName={this.checkTglMerah}\n              todayButton={null}\n              dropdownMode='select'\n              startDate={this.state.start_selected}\n              endDate={this.state.end_selected}\n              disabled={this.props.disabled || this.props.isReadonly}\n              readOnly={this.props.disabled || this.props.isReadonly}\n              shouldCloseOnSelect={false}\n            />\n          </div>\n        )\n      }\n    }\n\n    if (this.props.disabled || this.props.isReadonly) {\n      return moment(this.props.input[this.props.name], formatDefault).isValid()\n        ? moment(this.props.input[this.props.name], formatDefault).format(\n            'YYYY'\n          )\n        : ''\n    }\n\n    return (\n      <DatePicker\n        minDate={\n          moment(this.props.minDate, formatDefault).isValid()\n            ? moment(this.props.minDate, formatDefault).toDate()\n            : null\n        }\n        maxDate={\n          moment(this.props.maxDate, formatDefault).isValid()\n            ? moment(this.props.maxDate, formatDefault).toDate()\n            : null\n        }\n        dateFormat={dateFormat}\n        placeholder={this.props.placeholder ? this.props.placeholder : 'Tahun'}\n        customInput={\n          <CustomInput value={this.state.selected} name={this.props.name} />\n        }\n        selected={this.state.selected}\n        isClearable={!this.props.disabled && !this.props.isReadonly}\n        id={this.props.name}\n        className='form-control'\n        dayClassName={this.checkTglMerah}\n        onChange={this.handleInputChange}\n        withPortal\n        showYearPicker={true}\n        todayButton={null}\n        dropdownMode='select'\n        disabled={this.props.disabled || this.props.isReadonly}\n        readOnly={this.props.disabled || this.props.isReadonly}\n        shouldCloseOnSelect={false}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputYear)\n","import React from \"react\";\n\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\nimport {css} from \"@emotion/react\";\n\nconst override = css`\n   position: absolute;\n   top: 50%;\n   left: 50%;\n   margin-top: -25px;\n   margin-left: -50px;\n`;\n\n\nfunction Loading() {\n   return <PuffLoader color={\"#000\"} css={override} size={50} />;\n}\n\nexport default Loading;\n","import React from 'react'\n\nimport { SketchPicker } from 'react-color'\n\nimport { Button } from 'react-bootstrap'\n\nimport { connect } from 'react-redux'\n\nimport { slug, findArrayName } from 'tcomponent'\n\nimport { debounce } from 'lodash'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  handleInputChange = (data) => {\n    this.props.setInput(this.props.name, data.hex)\n\n    this.props.setParameter('selected_' + this.props.name, data)\n  }\n\n  componentDidMount() {\n    try {\n      this.props.setInput(\n        this.props.name,\n        this.props.parameter['selected_' + this.props.name].hex\n      )\n    } catch (e) {}\n  }\n\n  toggle = () => {\n    this.setState({ open: !this.state.open })\n  }\n\n  render() {\n    let val = ''\n\n    try {\n      val = findArrayName(this.props.name, this.props.input) || ''\n    } catch (e) {}\n\n    const isReadonly = this.props.disabled || this.props.isReadonly\n\n    return (\n      <React.Fragment>\n        {this.state.open ? (\n          <div\n            style={{\n              position: 'fixed',\n              top: '0px',\n              right: '0px',\n              bottom: '0px',\n              left: '0px',\n              zIndex:999\n            }}\n          >\n            <SketchPicker\n              color={val}\n              onChangeComplete={this.handleInputChange}\n            />\n            <Button\n              style={{ marginTop:10, backgroundColor: val, border: 0 }}\n              className='btn btn-primary'\n              onClick={this.toggle}\n              type='button'\n            >\n              Pilih\n            </Button>\n          </div>\n        ) : (\n          <Button\n            style={{ zIndex: 0, backgroundColor: val, border: 0 }}\n            className='btn btn-primary'\n            onClick={this.toggle}\n            type='button'\n          >\n            Pilih\n          </Button>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  input: state.core.input || {},\n  parameter: state.core.parameter || {}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setInput: (key, val) =>\n    dispatch({\n      type: 'SET_INPUT',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    }),\n  setParameter: (key, val) =>\n    dispatch({\n      type: 'SET_PARAMETER',\n      payload: {\n        key: slug(String(key), '_'),\n        value: val\n      }\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\n","import React, { useEffect, useState, useRef } from 'react'\n\nimport {\n  findIndex,\n  filter as _filter,\n  isNull,\n  isUndefined,\n  isEqual,\n  map,\n  isObject,\n  uniq,\n  isArray,\n  isEmpty\n} from 'lodash'\n\nimport {\n  slug,\n  findArrayName,\n  secureData,\n  setAuthHeader,\n  useDebounce,\n  defaultFilterData\n} from 'tcomponent'\n\nimport Loading from './Loading'\n\nimport axios from 'axios'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport { useIsVisible } from 'react-is-visible'\n\nimport { Button, Col, Row, Modal, Form, InputGroup } from 'react-bootstrap'\n\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faTimes, faSync, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport DataTableContainer from './DataTableContainer'\n\nfunction ShowData(props) {\n  let [val, setVal] = useState({})\n\n  let [loading, setLoading] = useState(false)\n\n  let {\n    isMultiple,\n    defaultValue,\n    optionLabel,\n    separator,\n    primaryKey,\n    id,\n    param\n  } = props\n\n  let props_name = slug(props.name, '_')\n\n  let key_select = slug('selected_' + props_name, '_')\n\n  let dispatch = useDispatch()\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  function labelGenerate(option) {\n    if (isArray(optionLabel)) {\n      let label = []\n\n      separator = separator || ' | '\n\n      for (let i = 0; i <= optionLabel.length - 1; i++) {\n        if (option[optionLabel[i]] && !isUndefined(option[optionLabel[i]])) {\n          label.push(option[optionLabel[i]])\n        }\n      }\n\n      return label.join(separator)\n    } else {\n      return option[optionLabel] ? option[optionLabel] : ''\n    }\n  }\n\n  useEffect(() => {\n    let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n    let { keyword } = defaultFilterData(filter, [], props_name)\n\n    let data = secureData({\n      pkey: primaryKey,\n      selected: [id],\n      keyword,\n      load: 1,\n      page: 1,\n      ...param\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n    setLoading(true)\n\n    axios(options)\n      .then((resp) => {\n        setVal(resp.data.data.data[0])\n        setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(false)\n      })\n  }, [id])\n\n  function deleteData(d) {\n    setVal(null)\n\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let val = props.optionValue[key]\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: val, value: null }\n        })\n      })\n    }\n\n    if (isMultiple) {\n      let new_input = _filter(findArrayName(props_name, input), function (o) {\n        return o != d\n      })\n\n      let new_input_key = _filter(\n        findArrayName(key_select, input),\n        function (o) {\n          return o != d\n        }\n      )\n\n      let new_parameter = _filter(\n        findArrayName(key_select, parameter),\n        function (o) {\n          return o[primaryKey] != d\n        }\n      )\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: props_name, value: new_input }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: key_select, value: new_input_key }\n      })\n\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value: new_parameter\n        }\n      })\n    } else {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: props_name, value: null }\n      })\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: key_select, value: null }\n      })\n\n      dispatch({\n        type: 'SET_PARAMETER',\n        payload: {\n          key: key_select,\n          value: {}\n        }\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {val && !isUndefined(val) && !isEmpty(val) ? (\n        [\n          labelGenerate(val),\n          !props.isReadonly && (\n            <Button\n              variant='link'\n              size='sm'\n              onClick={deleteData.bind(null, val[primaryKey])}\n              style={{ borderRadius: 100, zIndex: 0 }}\n            >\n              <FontAwesomeIcon size='sm' color='#db2828' icon={faTimes} />\n            </Button>\n          )\n        ]\n      ) : loading ? (\n        <Loading />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  )\n}\n\nfunction InputSelectFetch(props) {\n  let { isMultiple, defaultValue, optionLabel, separator } = props\n\n  let dispatch = useDispatch()\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let [visible, setVisible] = useState(false)\n\n  let [show, setShow] = useState(false)\n\n  let [loading, setLoading] = useState(false)\n\n  let [listLoading, setListLoading] = useState(false)\n\n  // let [localValue, setLocalValue] = useState(null)\n\n  let [localParameter, setLocalParameter] = useState({})\n\n  let [value, setValue] = useState(isMultiple ? [] : {})\n\n  let [last, setLast] = useState(0)\n\n  let [open, setOpen] = useState(false)\n\n  let [currentPage, setCurrentPage] = useState(1)\n\n  let props_name = slug(props.name, '_')\n\n  let key_select = slug('selected_' + props_name, '_')\n\n  let [label, setLabel] = useState(\n    props.label ? props.label : findArrayName(props_name, input)\n  )\n\n  let nodeRef = useRef()\n\n  let isVisible = useIsVisible(nodeRef)\n\n  let [data, setData] = useState([])\n\n  let [meta, setMeta] = useState({})\n\n  let primaryKey = props.primaryKey ? props.primaryKey : 'id'\n\n  function labelGenerate(option) {\n    let label = []\n\n    separator = separator || ' | '\n\n    if (isArray(optionLabel)) {\n      for (let i = 0; i <= optionLabel.length - 1; i++) {\n        if (option[optionLabel[i]] && !isUndefined(option[optionLabel[i]])) {\n          label.push(option[optionLabel[i]])\n        }\n      }\n\n      return label.join(separator)\n    } else {\n      return option[optionLabel] ? option[optionLabel] : ''\n    }\n  }\n\n  function onChecked(rowInfo, local_input, exist = false) {\n    let _value = rowInfo.row.original || {}\n\n    if (!isMultiple) {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: _value[primaryKey]\n        }\n      })\n    } else {\n      let new_input = []\n\n      let _local_input = findArrayName(key_select, local_input)\n\n      if (exist) {\n        new_input =\n          _filter(_local_input, (o) => {\n            return o && _value && String(o) != String(_value[primaryKey])\n          }) || []\n      } else {\n        new_input = _local_input || []\n\n        if (!isArray(new_input)) {\n          new_input = []\n        }\n\n        if (_value[primaryKey]) {\n          new_input.push(_value[primaryKey])\n        }\n      }\n\n      new_input = uniq(new_input)\n\n      new_input =\n        _filter(new_input, (o) => {\n          return !isNull(o) && !isUndefined(o)\n        }) || []\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: new_input\n        }\n      })\n    }\n  }\n\n  let checkComponent = {\n    Header: '#',\n    id: props_name + '_check',\n    Cell: (row) => {\n      let local_input = useSelector((state) => state.core.input)\n\n      let checked = false\n\n      let val = findArrayName(key_select, local_input)\n\n      try {\n        if (!isMultiple) {\n          checked = val === row.row.original[primaryKey]\n        } else {\n          checked =\n            findIndex(val, function (o) {\n              return o === row.row.original[primaryKey]\n            }) > -1\n        }\n      } catch (e) {}\n\n      if (!row.row.original[primaryKey]) {\n        return null\n      }\n\n      return (\n        <Form.Check\n          inline\n          id={slug(props_name + '_check_' + row.row.original[primaryKey], '_')}\n          name={slug(\n            props_name + '_check_' + row.row.original[primaryKey],\n            '_'\n          )}\n          style={{ zIndex: 100 }}\n          type={!isMultiple ? 'radio' : 'checkbox'}\n          value={1}\n          checked={checked}\n          disabled={props.isReadonly}\n          onChange={() => onChecked(row, local_input, checked)}\n        />\n      )\n    }\n  }\n\n  let _columns = [\n    {\n      Header: 'Keterangan',\n      id: 'label',\n      accessor: (d) => labelGenerate(d)\n    }\n  ]\n\n  let col = [checkComponent, ..._columns]\n\n  function onReload() {\n    if (open) {\n      loadOptions()\n    }\n  }\n\n  useDebounce(syncParameter, 500, [findArrayName(key_select, input)])\n\n  useDebounce(onReload, 500, [\n    findArrayName('keyword_' + props_name, filter),\n    findArrayName('page_' + props_name, filter),\n    findArrayName('load_' + props_name, filter)\n  ])\n\n  function syncParameter() {\n    if (!isMultiple) {\n      let new_input = findArrayName(key_select, input) || null\n\n      if (new_input) {\n        let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n        let { page, load, keyword } = defaultFilterData(filter, [], props_name)\n\n        let data = secureData({\n          pkey: primaryKey,\n          selected: [new_input],\n          keyword,\n          load: 1,\n          page: 1,\n          ...props.parameter\n        })\n\n        let options = {\n          method: 'POST',\n          headers: setAuthHeader(auth),\n          url,\n          data\n        }\n\n        setLoading(true)\n\n        axios(options)\n          .then((resp) => {\n            let new_parameter = resp.data.data.data[0] || {}\n\n            dispatch({\n              type: 'SET_PARAMETER',\n              payload: {\n                key: key_select,\n                value: new_parameter\n              }\n            })\n\n            handleInputChange(new_parameter)\n\n            setLoading(false)\n          })\n          .catch((error) => {\n            setLoading(false)\n          })\n      } else {\n        dispatch({\n          type: 'SET_PARAMETER',\n          payload: {\n            key: key_select,\n            value: null\n          }\n        })\n      }\n    } else {\n      let new_input =\n        _filter(findArrayName(key_select, input), function (o) {\n          return !isNull(o) && !isUndefined(o)\n        }) || []\n\n      if (new_input.length > 0) {\n        let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n        let { keyword } = defaultFilterData(filter, [], props_name)\n\n        let data = secureData({\n          pkey: primaryKey,\n          selected: new_input,\n          keyword,\n          load: new_input.length,\n          page: 1,\n          ...props.parameter\n        })\n\n        let options = {\n          method: 'POST',\n          headers: setAuthHeader(auth),\n          url,\n          data\n        }\n\n        setLoading(true)\n\n        axios(options)\n          .then((resp) => {\n            dispatch({\n              type: 'SET_PARAMETER',\n              payload: {\n                key: key_select,\n                value: resp.data.data.data\n              }\n            })\n\n            handleInputChange(resp.data.data.data)\n\n            setLoading(false)\n          })\n          .catch((error) => {\n            setLoading(false)\n          })\n      } else {\n        dispatch({\n          type: 'SET_PARAMETER',\n          payload: {\n            key: key_select,\n            value: null\n          }\n        })\n      }\n    }\n  }\n\n  let columns = React.useMemo(() => col, [])\n\n  useEffect(() => {\n    if (!isEqual(props.parameter, localParameter)) {\n      setLocalParameter(props.parameter)\n\n      onReload()\n    }\n\n    if (isVisible != visible) {\n      setVisible(isVisible)\n    }\n  })\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('show_' + props_name, '_'),\n        value: open\n      }\n    })\n  }, [open])\n\n  function openModal() {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: {\n        key: slug('page_' + props_name, '_'),\n        value: 1\n      }\n    })\n\n    setOpen((data) => !data)\n\n    loadOptions()\n  }\n\n  function closeModal() {\n    setOpen(false)\n  }\n\n  function reloader() {\n    if (visible) {\n      // setLocalValue(defaultValue)\n\n      let val = null\n\n      try {\n        if (isMultiple) {\n          val = map(defaultValue, 'value')\n\n          val =\n            _filter(val, (o) => {\n              return o\n            }) || []\n        } else {\n          val = defaultValue.value || null\n        }\n      } catch (e) {}\n\n      let _input = findArrayName(key_select, input) || null\n\n      // console.log('reloader',defaultValue,props_name, val, _input)\n\n      if (!isEqual(val, _input)) {\n        if (isNull(val) && !isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: _input\n            }\n          })\n          // console.log(props_name,'COND 1')\n        } else if (!isNull(val) && isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: val\n            }\n          })\n          // console.log(props_name,'COND 2')\n        } else if (!isNull(val) && !isNull(_input)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: val\n            }\n          })\n          // console.log(props_name,'COND 3')\n        } else {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: {\n              key: key_select,\n              value: null\n            }\n          })\n          // console.log(props_name,'COND 4')\n        }\n      }\n    }\n  }\n\n  useEffect(reloader, [visible])\n\n  useEffect(() => {\n    let val = null\n\n    try {\n      if (isMultiple) {\n        val =\n          _filter(map(defaultValue, 'value'), (o) => {\n            return o\n          }) || null\n      } else {\n        val = defaultValue.value || null\n      }\n    } catch (e) {}\n\n    if (val) {\n      dispatch({\n        type: 'SET_INPUT',\n        payload: {\n          key: key_select,\n          value: val\n        }\n      })\n    }\n  }, [])\n\n  function loadOptions() {\n    let url = process.env.REACT_APP_API_URL + '/' + props.url\n\n    let { page, load, keyword, sorted, search } = defaultFilterData(\n      filter,\n      [],\n      props_name\n    )\n\n    let data = secureData({\n      pkey: primaryKey,\n      page,\n      load,\n      keyword,\n      sorted,\n      search,\n      ...props.parameter\n    })\n\n    let options = {\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url,\n      data\n    }\n\n    setListLoading(true)\n\n    return axios(options)\n      .then((resp) => {\n        let responseJSON = resp.data || {}\n\n        if (typeof responseJSON.data.data !== 'undefined') {\n          setLast(responseJSON.data.meta.last_page)\n\n          try {\n            setData(responseJSON.data.data || [])\n          } catch (e) {}\n\n          try {\n            setMeta(responseJSON.data.meta || {})\n          } catch (e) {}\n        } else if (typeof responseJSON.data !== 'undefined') {\n          setLast(responseJSON.meta.last_page)\n\n          try {\n            setData(responseJSON.data || [])\n          } catch (e) {}\n\n          try {\n            setMeta(responseJSON.meta || {})\n          } catch (e) {}\n        }\n\n        setListLoading(false)\n      })\n      .catch((error) => {\n        setListLoading(false)\n      })\n  }\n\n  function generateInputMultiple(event) {\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let k = props.optionValue[key]\n\n        let v = null\n\n        if (event) {\n          try {\n            v = uniq(map(event, key))\n          } catch (e) {}\n        }\n\n        if (!isEqual(findArrayName(k, input), v)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: k, value: v }\n          })\n        }\n      })\n    } else {\n      let k = props_name\n\n      let v = null\n\n      if (event) {\n        v = uniq(map(event, primaryKey))\n      }\n\n      if (!isEqual(findArrayName(k, input), v)) {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: k, value: v }\n        })\n      }\n    }\n  }\n\n  function generateInput(event) {\n    if (isObject(props.optionValue)) {\n      Object.keys(props.optionValue).map(function (key, index) {\n        let k = props.optionValue[key]\n\n        let v = null\n\n        if (event) {\n          try {\n            v = event[key]\n          } catch (e) {}\n        }\n\n        if (!isEqual(findArrayName(k, input), v)) {\n          dispatch({\n            type: 'SET_INPUT',\n            payload: { key: k, value: v }\n          })\n        }\n      })\n    } else {\n      let k = props_name\n\n      let v = null\n\n      if (event) {\n        v = event[primaryKey]\n      }\n\n      if (!isEqual(findArrayName(k, input), v)) {\n        dispatch({\n          type: 'SET_INPUT',\n          payload: { key: k, value: v }\n        })\n      }\n    }\n  }\n\n  function handleInputChange(event) {\n    if (isMultiple) {\n      generateInputMultiple(event)\n    } else {\n      generateInput(event)\n    }\n  }\n\n  let isi = []\n\n  let _input = findArrayName(key_select, input)\n\n  try {\n    if (isMultiple) {\n      isi = isArray(_input) ? _input : []\n    } else {\n      isi = _input ? [_input] : []\n    }\n  } catch (e) {}\n\n  let _parameter = findArrayName(key_select, parameter)\n\n  let isi_param = null\n\n  try {\n    if (isMultiple) {\n      isi_param = isArray(_parameter) ? _parameter : []\n    } else {\n      isi_param = isObject(_parameter) ? _parameter : {}\n    }\n  } catch (e) {}\n\n  return (\n    <div ref={nodeRef}>\n      <Row>\n        {!props.isReadonly && (\n          <Col lg='2' md='2' sm='4' xs='12'>\n            <Button\n              style={{ zIndex: 0 }}\n              size='sm'\n              variant='primary'\n              type='button'\n              className='btn-icon'\n              onClick={openModal}\n            >\n              <FontAwesomeIcon icon={faSearch} />\n            </Button>\n          </Col>\n        )}\n\n        <Col lg='10' md='10' sm='8' xs='12'>\n          {loading ? (\n            <Loading />\n          ) : (\n            isi.map((val, index) => {\n              return (\n                <React.Fragment>\n                  <ShowData\n                    isReadonly={props.isReadonly}\n                    name={props_name}\n                    optionLabel={optionLabel}\n                    separator={separator}\n                    param={props.parameter}\n                    url={props.url}\n                    primaryKey={primaryKey}\n                    isMultiple={isMultiple}\n                    id={val}\n                  />\n                  {props.isReadonly\n                    ? isi.length - 1 == index\n                      ? null\n                      : ', '\n                    : null}\n                </React.Fragment>\n              )\n            })\n          )}\n        </Col>\n      </Row>\n      <Modal size='lg' show={open} onHide={closeModal}>\n        <Modal.Header onHide={closeModal} closeButton>\n          <Modal.Title>{props.placeholder || 'Pilih'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <LoadingOverlay isLoading={listLoading}>\n            <div>\n              <InputGroup style={{ marginBottom: 12 }}>\n                <InputGroup.Text style={{ background: 'none' }}>\n                  <FontAwesomeIcon icon={faSearch} />\n                </InputGroup.Text>\n                <Form.Control\n                  style={{ borderLeft: 'none', zIndex: 0 }}\n                  className='form-control'\n                  value={findArrayName('keyword_' + props_name, filter)}\n                  onChange={(e) => {\n                    dispatch({\n                      type: 'SET_MULTI_FILTER',\n                      payload: {\n                        ['keyword_' + props_name]: e.target.value,\n                        ['page_' + props_name]: 1\n                      }\n                    })\n                  }}\n                  type='text'\n                  id={'search_' + key_select}\n                  name={'search_' + props_name}\n                  placeholder='Pencarian'\n                />\n\n                <Button\n                  style={{ zIndex: 0 }}\n                  variant='primary'\n                  onClick={onReload}\n                  type='button'\n                  disabled={props.isLoading}\n                >\n                  <FontAwesomeIcon icon={faSync} spin={props.isLoading} />\n                </Button>\n              </InputGroup>\n\n              <DataTableContainer\n                name={props_name}\n                columns={columns}\n                data={data}\n                primaryKey={primaryKey}\n                isColumnsSearchable={true}\n                fetchData={onReload}\n                loading={listLoading}\n                customPageTotal={meta && !isEmpty(meta) ? meta.total : 0}\n                customPageCount={meta && !isEmpty(meta) ? meta.last_page : 1}\n                customPageSize={\n                  meta && !isEmpty(meta)\n                    ? meta.per_page\n                    : filter['load_' + props_name]\n                    ? filter['load_' + props_name]\n                    : 5\n                }\n                customPageIndex={\n                  meta && !isEmpty(meta)\n                    ? meta.current_page\n                    : filter['page_' + props_name]\n                    ? filter['page_' + props_name]\n                    : 1\n                }\n              />\n            </div>\n          </LoadingOverlay>\n\n          {!listLoading && (\n            <div style={{ marginTop: 12 }}>\n              <p>Dipilih : </p>\n              {loading && <Loading />}\n              <ul>\n                {isMultiple\n                  ? isi_param &&\n                    isi_param.map((val, index) => {\n                      return (\n                        <li>\n                          {!isUndefined(val) && !isEmpty(val)\n                            ? labelGenerate(val)\n                            : ''}\n                        </li>\n                      )\n                    })\n                  : isi_param && (\n                      <li>\n                        {!isUndefined(isi_param) && !isEmpty(isi_param)\n                          ? labelGenerate(isi_param)\n                          : ''}\n                      </li>\n                    )}\n              </ul>\n            </div>\n          )}\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\n\nexport default InputSelectFetch\n","import React, { useState, useEffect } from 'react'\nimport ApexCharts from 'react-apexcharts'\n\nimport { slug } from 'tcomponent'\n\nimport {\n  isUndefined,\n  isArray,\n  isPlainObject,\n  isString,\n  isNumber,\n  isBoolean,\n  isNull,\n  isEmpty\n} from 'lodash'\n\nfunction Chart(props) {\n  let options = { chart: { width: 'auto' } }\n\n  let series = props.series || []\n\n  if (\n    (isUndefined(props.series) ||\n      isNull(props.series) ||\n      !isArray(props.series)) &&\n    isArray(props.options) &&\n    !isUndefined(props.optionValue) &&\n    !isNull(props.optionValue)\n  ) {\n    for (var i = 0; i < props.options.length; i++) {\n      if (isString(props.optionValue)) {\n        series.push(props.options[i][props.optionValue])\n      } else if (isPlainObject(props.optionValue)) {\n        let isi = {}\n        Object.keys(props.optionValue).map((key, index) => {\n          isi[props.optionValue[key]] = props.options[i][key]\n        })\n        series.push(isi)\n      } else if (isArray(props.optionValue)) {\n        let isi = []\n        for (var i2 = 0; i2 < props.optionValue.length; i2++) {\n          isi.push(props.options[i][props.optionValue[i2]])\n        }\n        series.push(isi)\n      }\n    }\n  }\n\n  if (\n    !isUndefined(props.dataLabels) &&\n    !isNull(props.dataLabels) &&\n    isPlainObject(props.dataLabels)\n  ) {\n    options.dataLabels = props.dataLabels\n  }\n\n  let separator = ' '\n\n  if (\n    !isUndefined(props.separator) &&\n    !isNull(props.separator) &&\n    isPlainObject(props.separator)\n  ) {\n    separator = props.separator\n  }\n\n  if (\n    !isUndefined(props.labels) &&\n    !isNull(props.labels) &&\n    isArray(props.labels)\n  ) {\n    options.labels = props.labels\n  } else if (\n    isArray(props.options) &&\n    !isUndefined(props.optionLabel) &&\n    !isNull(props.optionLabel)\n  ) {\n    options.labels = []\n\n    for (var i = 0; i < props.options.length; i++) {\n      if (isString(props.optionLabel)) {\n        options.labels.push(props.options[i][props.optionLabel])\n      } else if (isArray(props.optionLabel)) {\n        let isi = []\n        for (var i2 = 0; i2 < props.optionLabel.length; i2++) {\n          isi.push(props.options[i][props.optionLabel[i2]])\n        }\n        options.labels.push(isi.join(separator))\n      }\n    }\n  }\n\n  if (\n    !isUndefined(props.colors) &&\n    !isNull(props.colors) &&\n    isArray(props.colors)\n  ) {\n    options.colors = props.colors\n  } else if (\n    isArray(props.options) &&\n    !isUndefined(props.optionColor) &&\n    !isNull(props.optionColor) &&\n    isString(props.optionColor)\n  ) {\n    options.colors = []\n\n    for (var i = 0; i < props.options.length; i++) {\n      options.colors.push(props.options[i][props.optionColor])\n    }\n  }\n\n  if (\n    !isUndefined(props.locales) &&\n    !isNull(props.locales) &&\n    isArray(props.locales)\n  ) {\n    options.chart.locales = props.locales\n  }\n\n  if (!isUndefined(props.type) && !isNull(props.type) && isString(props.type)) {\n    options.chart.type = props.type\n  }\n\n  if (\n    !isUndefined(props.animations) &&\n    !isNull(props.animations) &&\n    isPlainObject(props.animations)\n  ) {\n    options.chart.animations = props.animations\n  }\n\n  if (\n    !isUndefined(props.background) &&\n    !isNull(props.background) &&\n    isString(props.background)\n  ) {\n    options.chart.background = props.background\n  }\n\n  if (\n    !isUndefined(props.brush) &&\n    !isNull(props.brush) &&\n    isPlainObject(props.brush)\n  ) {\n    options.chart.brush = props.brush\n  }\n\n  if (\n    !isUndefined(props.defaultLocale) &&\n    !isNull(props.defaultLocale) &&\n    isString(props.defaultLocale)\n  ) {\n    options.chart.defaultLocale = props.defaultLocale\n  }\n\n  if (\n    !isUndefined(props.dropShadow) &&\n    !isNull(props.dropShadow) &&\n    isPlainObject(props.defaultLocale)\n  ) {\n    options.chart.dropShadow = props.dropShadow\n  }\n\n  if (\n    !isUndefined(props.fontFamily) &&\n    !isNull(props.fontFamily) &&\n    isString(props.fontFamily)\n  ) {\n    options.chart.fontFamily = props.fontFamily\n  }\n\n  if (\n    !isUndefined(props.foreColor) &&\n    !isNull(props.foreColor) &&\n    isString(props.foreColor)\n  ) {\n    options.chart.foreColor = props.foreColor\n  }\n\n  if (\n    !isUndefined(props.group) &&\n    !isNull(props.group) &&\n    isString(props.group)\n  ) {\n    options.chart.group = props.group\n  }\n\n  if (\n    !isUndefined(props.events) &&\n    !isNull(props.events) &&\n    isPlainObject(props.events)\n  ) {\n    options.chart.events = props.events\n  }\n\n  if (\n    !isUndefined(props.height) &&\n    !isNull(props.height) &&\n    (isString(props.height) || isNumber(props.height))\n  ) {\n    options.chart.height = props.height\n  }\n\n  if (!isUndefined(props.id) && !isNull(props.id) && isString(props.id)) {\n    options.chart.id = slug(props.id)\n  }\n\n  if (!isUndefined(props.name) && !isNull(props.name) && isString(props.name)) {\n    options.chart.id = slug(props.name)\n  }\n\n  if (\n    !isUndefined(props.offsetX) &&\n    !isNull(props.offsetX) &&\n    isNumber(props.offsetX)\n  ) {\n    options.chart.offsetX = props.offsetX\n  }\n\n  if (\n    !isUndefined(props.offsetY) &&\n    !isNull(props.offsetY) &&\n    isNumber(props.offsetY)\n  ) {\n    options.chart.offsetY = props.offsetY\n  }\n\n  if (\n    !isUndefined(props.parentHeightOffset) &&\n    !isNull(props.parentHeightOffset) &&\n    isNumber(props.parentHeightOffset)\n  ) {\n    options.chart.parentHeightOffset = props.parentHeightOffset\n  }\n\n  if (\n    !isUndefined(props.redrawOnParentResize) &&\n    !isNull(props.redrawOnParentResize) &&\n    isBoolean(props.redrawOnParentResize)\n  ) {\n    options.chart.redrawOnParentResize = props.redrawOnParentResize\n  }\n\n  if (\n    !isUndefined(props.redrawOnWindowResize) &&\n    !isNull(props.redrawOnWindowResize) &&\n    isBoolean(props.redrawOnWindowResize)\n  ) {\n    options.chart.redrawOnWindowResize = props.redrawOnWindowResize\n  }\n\n  if (\n    !isUndefined(props.selection) &&\n    !isNull(props.selection) &&\n    isPlainObject(props.selection)\n  ) {\n    options.chart.selection = props.selection\n  }\n\n  if (\n    !isUndefined(props.sparkline) &&\n    !isNull(props.sparkline) &&\n    isBoolean(props.sparkline)\n  ) {\n    options.chart.sparkline = props.sparkline\n  }\n\n  if (\n    !isUndefined(props.stacked) &&\n    !isNull(props.stacked) &&\n    isBoolean(props.stacked)\n  ) {\n    options.chart.stacked = props.stacked\n  }\n\n  if (\n    !isUndefined(props.stackType) &&\n    !isNull(props.stackType) &&\n    isString(props.stackType)\n  ) {\n    options.chart.stackType = props.stackType\n  }\n\n  if (\n    !isUndefined(props.toolbar) &&\n    !isNull(props.toolbar) &&\n    isPlainObject(props.toolbar)\n  ) {\n    options.chart.toolbar = props.toolbar\n  }\n\n  if (\n    !isUndefined(props.width) &&\n    !isNull(props.width) &&\n    (isString(props.width) || isNumber(props.width))\n  ) {\n    options.chart.width = props.width\n  }\n\n  if (\n    !isUndefined(props.zoom) &&\n    !isNull(props.zoom) &&\n    isPlainObject(props.zoom)\n  ) {\n    options.chart.zoom = props.zoom\n  }\n\n  if (\n    !isUndefined(props.fill) &&\n    !isNull(props.fill) &&\n    isPlainObject(props.fill)\n  ) {\n    options.fill = props.fill\n  }\n\n  if (\n    !isUndefined(props.forecastDataPoints) &&\n    !isNull(props.forecastDataPoints) &&\n    isPlainObject(props.forecastDataPoints)\n  ) {\n    options.forecastDataPoints = props.forecastDataPoints\n  }\n\n  if (\n    !isUndefined(props.grid) &&\n    !isNull(props.grid) &&\n    isPlainObject(props.grid)\n  ) {\n    options.grid = props.grid\n  }\n\n  if (\n    !isUndefined(props.legend) &&\n    !isNull(props.legend) &&\n    isPlainObject(props.legend)\n  ) {\n    options.legend = props.legend\n  }\n\n  if (\n    !isUndefined(props.markers) &&\n    !isNull(props.markers) &&\n    isPlainObject(props.markers)\n  ) {\n    options.markers = props.markers\n  }\n\n  if (\n    !isUndefined(props.noData) &&\n    !isNull(props.noData) &&\n    isPlainObject(props.noData)\n  ) {\n    options.noData = props.noData\n  }\n\n  if (\n    !isUndefined(props.states) &&\n    !isNull(props.states) &&\n    isPlainObject(props.states)\n  ) {\n    options.states = props.states\n  }\n\n  if (\n    !isUndefined(props.stroke) &&\n    !isNull(props.stroke) &&\n    isPlainObject(props.stroke)\n  ) {\n    options.stroke = props.stroke\n  }\n\n  if (\n    !isUndefined(props.subtitle) &&\n    !isNull(props.subtitle) &&\n    isPlainObject(props.subtitle)\n  ) {\n    options.subtitle = props.subtitle\n  }\n\n  if (\n    !isUndefined(props.theme) &&\n    !isNull(props.theme) &&\n    isPlainObject(props.theme)\n  ) {\n    options.theme = props.theme\n  }\n\n  if (\n    !isUndefined(props.title) &&\n    !isNull(props.title) &&\n    isPlainObject(props.title)\n  ) {\n    options.title = props.title\n  }\n\n  if (\n    !isUndefined(props.tooltip) &&\n    !isNull(props.tooltip) &&\n    isPlainObject(props.tooltip)\n  ) {\n    options.tooltip = props.tooltip\n  }\n\n  if (\n    !isUndefined(props.xaxis) &&\n    !isNull(props.xaxis) &&\n    isPlainObject(props.xaxis)\n  ) {\n    options.xaxis = props.xaxis\n  }\n\n  if (\n    !isUndefined(props.yaxis) &&\n    !isNull(props.yaxis) &&\n    isPlainObject(props.yaxis)\n  ) {\n    options.yaxis = props.yaxis\n  }\n\n  if (\n    !isUndefined(props.plotOptions) &&\n    !isNull(props.plotOptions) &&\n    isPlainObject(props.plotOptions)\n  ) {\n    options.plotOptions = { [options.chart.type]: props.plotOptions }\n  }\n\n  // console.log('chart', props, options, series)\n\n  return (\n    <ApexCharts options={options} series={series} type={options.chart.type} />\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartArea(props) {\n  return <Chart {...props} type='area' />\n}\n\nexport default ChartArea\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBar(props) {\n  return <Chart {...props} type='bar' />\n}\n\nexport default ChartBar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBoxPlot(props) {\n  return <Chart {...props} type='boxPlot' />\n}\n\nexport default ChartBoxPlot\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartBubble(props) {\n  return <Chart {...props} type='bubble' />\n}\n\nexport default ChartBubble\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartCandleStick(props) {\n  return <Chart {...props} type='candlestick' />\n}\n\nexport default ChartCandleStick\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartDonut(props) {\n  return <Chart {...props} type='donut' />\n}\n\nexport default ChartDonut\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartHeatMap(props) {\n  return <Chart {...props} type='heatmap' />\n}\n\nexport default ChartHeatMap\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartHistogram(props) {\n  return <Chart {...props} type='histogram' />\n}\n\nexport default ChartHistogram\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartLine(props) {\n  return <Chart {...props} type='line' />\n}\n\nexport default ChartLine\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartPie(props) {\n  return <Chart {...props} type='pie' />\n}\n\nexport default ChartPie\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartPolarArea(props) {\n  return <Chart {...props} type='polarArea' />\n}\n\nexport default ChartPolarArea\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadar(props) {\n  return <Chart {...props} type='radar' />\n}\n\nexport default ChartRadar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadial(props) {\n  return <Chart {...props} type='radialBar' />\n}\n\nexport default ChartRadial\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartRadar(props) {\n  return <Chart {...props} type='rangeBar' />\n}\n\nexport default ChartRadar\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartScatter(props) {\n  return <Chart {...props} type='scatter' />\n}\n\nexport default ChartScatter\n","import React from 'react'\n\nimport Chart from './Chart'\n\nfunction ChartTreeMap(props) {\n  return <Chart {...props} type='treemap' />\n}\n\nexport default ChartTreeMap\n","import React from 'react'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport { isArray } from 'lodash'\n\nfunction Field(props) {\n  let message = []\n\n  if (isArray(props.errorMessage)) {\n    for (let i = 0; i < props.errorMessage.length; i++) {\n      let isi = props.errorMessage[i]\n\n      if (isArray(isi)) {\n        for (let y = 0; y < isi.length; y++) {\n          message.push(isi[y])\n        }\n      } else {\n        message.push(isi)\n      }\n    }\n  } else {\n    message.push(props.errorMessage)\n  }\n\n  return (\n    <Form.Group as={Row}>\n      <Form.Label column md={props.labelSize ? props.labelSize : 3}>\n        {props.label ? props.label : 'Label'}\n        {props.isRequired && <span className='text-danger'>&nbsp;*</span>}\n        {props.hint && (\n          <small className='form-text text-muted'>{props.hint}</small>\n        )}\n      </Form.Label>\n      <Col md={props.inputSize ? props.inputSize : 9}>\n        {props.children}\n        <Form.Text className='text-danger'>\n          {message.length > 0 && message.join(', ')}\n        </Form.Text>\n      </Col>\n    </Form.Group>\n  )\n}\n\nexport default Field\n","import React, { useState, useEffect } from 'react'\n\nimport { isEmpty, isEqual, filter as _filter } from 'lodash'\n\nimport { connect, useDispatch, useSelector } from 'react-redux'\n\nimport LoadingOverlay from './LoadingOverlay'\n\nimport axios from 'axios'\n\nimport moment from 'moment'\n\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\n\nimport InputSelect from './InputSelect'\n\nimport InputText from './InputText'\n\nimport Loading from './Loading'\n\nimport {\n  slug,\n  setAuthHeader,\n  defaultFilterData,\n  secureData,\n  fetchErrorDispatch\n} from 'tcomponent'\n\nimport DataTable from './DataTable'\n\nimport InputFile from './InputFile'\n\nfunction InputWorkflow(props) {\n  let [isDelay, setIsDelay] = useState(false)\n\n  let [listLoading, setListLoading] = useState(false)\n\n  let [submitLoading, setSubmitLoading] = useState(false)\n\n  let [responseLoading, setResponseLoading] = useState(false)\n\n  let auth = useSelector((state) => state.auth) || {}\n\n  let input = useSelector((state) => state.core.input) || {}\n\n  let validation = useSelector((state) => state.core.validation) || []\n\n  let parameter = useSelector((state) => state.core.parameter) || {}\n\n  let filter = useSelector((state) => state.core.filter) || {}\n\n  let dispatch = useDispatch()\n\n  let [list, setList] = useState({})\n\n  let [activity, setActivity] = useState({\n    activity: {},\n    role: '',\n    response: []\n  })\n\n  let {\n    doAfterSubmit,\n    isLoading,\n    doSubmit,\n    doCancel,\n    isReadonly,\n    relation,\n    id,\n    isDelete\n  } = props\n\n  let [readonly, setReadonly] = useState(isReadonly)\n\n  useEffect(() => {\n    setReadonly(isReadonly)\n  }, [isReadonly])\n\n  function submit(event) {\n    if (!input.response_activity || isEmpty(input.response_activity)) {\n      dispatch({\n        type: 'SET_MESSAGE',\n        payload: 'Respon wajib diisi'\n      })\n    } /* else if(!input.response_comment || isEmpty(input.response_comment)){\n\n      dispatch({\n      type: 'SET_MESSAGE',\n      payload: 'Komentar wajib diisi'\n    });\n\n  } */ else {\n      setSubmitLoading(true)\n\n      setIsDelay(true)\n\n      setTimeout(() => setIsDelay(false), 1000)\n\n      doSubmit && doSubmit()\n    }\n  }\n\n  useEffect(() => {\n    reload_response()\n  }, [])\n\n  useEffect(() => {\n    let allowed_role = []\n\n    try {\n      allowed_role = activity.role.split(',')\n    } catch (e) {}\n\n    let user_role = []\n\n    try {\n      user_role = auth.user.role.split(',')\n    } catch (e) {}\n\n    let is_allowed = false\n\n    let is_admin = false\n\n    for (let i = 0; i < user_role.length; i++) {\n      if (\n        !is_admin &&\n        user_role[i] &&\n        isEqual(String(user_role[i]).trim().toLowerCase(), 'admin')\n      ) {\n        is_admin = true\n\n        is_allowed = true\n\n        dispatch({\n          type: 'SET_INPUT',\n          payload: {\n            key: 'response_role',\n            value: String(user_role[i]).trim().toLowerCase()\n          }\n        })\n      }\n    }\n\n    if (!is_admin) {\n      for (let i = 0; i < allowed_role.length; i++) {\n        for (let y = 0; y < user_role.length; y++) {\n          if (\n            allowed_role[i] &&\n            user_role[y] &&\n            String(allowed_role[i]).trim().toLowerCase() ==\n              String(user_role[y]).trim().toLowerCase() &&\n            !is_allowed\n          ) {\n            is_allowed = true\n\n            dispatch({\n              type: 'SET_INPUT',\n              payload: {\n                key: 'response_role',\n                value: String(user_role[y]).trim().toLowerCase()\n              }\n            })\n          }\n        }\n      }\n    }\n\n    let allowed =\n      !isEmpty(activity.activity) && activity.response.length > 0 && is_allowed\n\n    if (allowed && readonly && !isReadonly) {\n      setReadonly(false)\n\n      dispatch({\n        type: 'SET_INPUT',\n        payload: { key: 'activity', value: activity.activity.code }\n      })\n    } else {\n      setReadonly(true)\n    }\n  }, [activity])\n\n  useEffect(() => {\n    if (submitLoading && !isEmpty(validation)) {\n      setSubmitLoading(false)\n    }\n  }, [validation])\n\n  useEffect(() => {\n    if (submitLoading && !isLoading && !isDelay) {\n      setSubmitLoading(false)\n\n      if (isEmpty(validation)) {\n        doAfterSubmit && doAfterSubmit()\n      }\n    }\n  }, [isDelay, validation, isLoading])\n\n  function cancel(event) {\n    doCancel && doCancel()\n  }\n\n  function reload_response() {\n    let url = process.env.REACT_APP_API_URL + '/komentar_respon?'\n\n    let options = {\n      data: secureData({\n        relation,\n        id\n      }),\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url\n    }\n\n    setResponseLoading(true)\n\n    axios(options)\n      .then((response) => {\n        let newactivity = response.data.data || {}\n\n        if (isDelete) {\n          newactivity.response = _filter(newactivity.response, function (o) {\n            return o.code == 'HAPUS'\n          })\n        }\n\n        setActivity(newactivity)\n\n        setResponseLoading(false)\n      })\n      .catch((error) => {\n        fetchErrorDispatch(error, dispatch)\n\n        setResponseLoading(false)\n      })\n  }\n\n  function reload() {\n    let url = process.env.REACT_APP_API_URL + '/komentar?'\n\n    let columns = [\n      'user',\n      'role',\n      'activity',\n      'comment',\n      'due_datetime',\n      'start_datetime',\n      'end_datetime'\n    ]\n\n    let f = {}\n\n    try {\n      f = defaultFilterData(filter, columns, slug(props.relation, '_'))\n    } catch (e) {}\n\n    let isi = {\n      relation,\n      id,\n      ...f\n    }\n\n    let options = {\n      data: secureData(isi),\n      method: 'POST',\n      headers: setAuthHeader(auth),\n      url\n    }\n\n    setListLoading(true)\n\n    axios(options)\n      .then((response) => {\n        setList(response.data.data)\n\n        setListLoading(false)\n      })\n      .catch((error) => {\n        fetchErrorDispatch(error, dispatch)\n\n        setListLoading(false)\n      })\n  }\n\n  if (responseLoading) return <Loading />\n\n  return (\n    <LoadingOverlay isLoading={isLoading || submitLoading}>\n      <Card>\n        <Card.Body>\n          <Card.Title tag='h5'>\n            {activity.activity.name || 'Alur tidak ditemukan'}\n          </Card.Title>\n          <Card.Text>\n            {!readonly && (\n              <Row>\n                <Col lg='6'>\n                  <Form.Group as={Row}>\n                    <Col lg='3'>\n                      <Form.Label>\n                        Respon <span className='text-danger'>*</span>\n                      </Form.Label>\n                    </Col>\n                    <Col lg='9'>\n                      <InputSelect\n                        name='response_activity'\n                        options={activity.response}\n                        separator=' | '\n                        optionLabel={['name']}\n                        optionValue='code'\n                      />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Col lg='3'>\n                      <Form.Label>Lampiran</Form.Label>\n                    </Col>\n\n                    <Col lg='5'>\n                      <InputFile\n                        value={input.attachment}\n                        name='response_attachment'\n                        id='response_attachment'\n                      />\n                    </Col>\n                  </Form.Group>\n                </Col>\n\n                <Col lg='6'>\n                  <Form.Group as={Row}>\n                    <Col lg='3' style={{ marginBottom: 35 }}>\n                      <Form.Label>Komentar</Form.Label>\n                    </Col>\n\n                    <Col lg='9'>\n                      <InputText\n                        type='textarea'\n                        required\n                        name='response_comment'\n                        id='response_comment'\n                        rows='3'\n                      />\n                    </Col>\n                  </Form.Group>\n                </Col>\n              </Row>\n            )}\n\n            <DataTable\n              data={list}\n              isLoading={listLoading}\n              name={slug(props.relation, '_')}\n              primaryKey='id'\n              isSearchable={true}\n              isColumnsSearchable={true}\n              onReload={reload}\n              columns={[\n                {\n                  Header: 'Nama',\n                  id: 'user',\n                  accessor: (d) => d.user\n                },\n                {\n                  Header: 'Jabatan',\n                  id: 'role',\n                  accessor: (d) => d.role\n                },\n                {\n                  Header: 'Aktifitas',\n                  id: 'activity',\n                  accessor: (d) => d.activity\n                },\n                {\n                  Header: 'Respon',\n                  id: 'response',\n                  accessor: (d) => d.response\n                },\n                {\n                  Header: 'Komentar',\n                  id: 'comment',\n                  accessor: (d) => d.comment\n                },\n                {\n                  Header: 'Tenggat',\n                  id: 'due_datetime',\n                  accessor: (d) =>\n                    d.due_datetime &&\n                    moment(d.due_datetime).format('DD-MM-YYYY HH:mm')\n                },\n                {\n                  Header: 'Mulai',\n                  id: 'start_datetime',\n                  accessor: (d) =>\n                    d.start_datetime &&\n                    moment(d.start_datetime).format('DD-MM-YYYY HH:mm')\n                },\n\n                {\n                  Header: 'Selesai',\n                  id: 'end_datetime',\n                  accessor: (d) =>\n                    d.end_datetime &&\n                    moment(d.end_datetime).format('DD-MM-YYYY HH:mm')\n                },\n                {\n                  Header: 'Lampiran',\n                  id: 'attachment',\n                  accessor: (d) => <InputFile value={d.attachment} isReadonly />\n                }\n              ]}\n            />\n          </Card.Text>\n          <Row className='mt-2'>\n            <Col>\n              <Button\n                type='button'\n                className='btn btn-icon btn-primary btn-sm float-left'\n                onClick={cancel}\n              >\n                Kembali\n              </Button>\n              {!readonly && (\n                <Button\n                  type='button'\n                  className='btn btn-icon btn-primary btn-sm float-right'\n                  onClick={submit}\n                >\n                  Proses\n                </Button>\n              )}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </LoadingOverlay>\n  )\n}\n\nexport default InputWorkflow\n"],"names":["WirisEquationEditor","props","_this","handleEquationChange","event","onEquationInput","mathFormat","window","WirisPlugin","Parser","endParse","target","value","equationEditorRef","React","createRef","toolbarRef","componentDidMount","genericIntegrationProperties","this","current","toolbar","genericIntegrationInstance","GenericIntegration","init","listeners","fire","e","render","ref","ContentEditable","suppressContentEditableWarning","className","innerRef","onChange","html","Component","InputText","dispatch","useDispatch","propsName","isUndefined","name","slug","String","useState","placeholder","setPlaceholder","type","open","setOpen","optionsCleave","setOptionsCleave","config","readonly","toolbarButtonSize","input","useSelector","state","core","_state$core","useRef","editorRef","defaultType","findArrayName","handleInputChange","preventDefault","data","replace","maxlength","substring","openModal","closeModal","val","payload","key","useEffect","default_placeholder","options_cleave","toLowerCase","delimiter","blocks","numericOnly","delimiters","disableCopy","disablePaste","disableSelectAll","comb","push","length","Mousetrap","bind","disabled","isReadonly","isEmpty","parse","Cleave","id","options","rows","PhoneInput","international","defaultCountry","Fragment","style","minHeight","onClick","Modal","size","show","onHide","Header","closeButton","Title","Body","JoditEditor","tabIndex","Form","Control","Loading","PuffLoader","color","moment","momentImported","Preview","isEqual","file","maxWidth","src","process","env","REACT_APP_API_URL","Player","autoPlay","width","height","InputFile","acceptedFiles","accept","parameter","setType","setValue","loading","setLoading","auth","fetchInfo","token","isString","url","secureData","token_file","method","headers","setAuthHeader","axios","then","response","success","error","cekValidFile","h","setValid","u","filter","setIsinya","d","split","toggle","openFile","x","cek","t","isArray","i","reloadType","terisi","isMultiple","display","label","reader","files","dataTransfer","FileReader","onload","base64","_data","FormData","_name","append","lastModifiedDate","format","post","_boundary","message","fileUpload","readAsDataURL","onInput","setTimeout","DropzoneComponent","showFiletypeIcon","postUrl","uploadMultiple","maxFiles","eventHandlers","drop","complete","isi","JSON","xhr","o","join","removedfile","djsConfig","params","user","addRemoveLinks","autoProcessQueue","map","index","preview","ButtonGroup","Button","variant","FontAwesomeIcon","icon","faSearch","vendor","location","href","faDownload","onDelete","faTimes","InputChoose","labelGenerate","option","optionLabel","selectedOption","current_val","defaultValue","removed","new_val","optionValue","setInput","onRefresh","debounce","isNull","y","opt","cur","find","setState","componentDidUpdate","prevProps","prevState","isChecked","_this2","includes","Check","inline","checked","isHtml","connect","CustomInput","InputGroup","Text","background","faCalendar","borderLeft","fontFamily","fontSize","InputDate","isValid","handleInputChangeStart","handleInputChangeEnd","checkTglMerah","date","undefined","selected","start_selected","end_selected","isRange","toDate","dateFormat","yearOnly","DatePicker","minDate","maxDate","isClearable","customInput","selectsStart","peekNextMonth","withPortal","showMonthDropdown","showYearDropdown","showYearPicker","todayButton","dayClassName","dropdownMode","readOnly","startDate","endDate","shouldCloseOnSelect","selectsEnd","InputNumber","Number","validate_min_max","min","minValue","max","maxValue","props_name","rawValue","isNaN","parseFloat","setRawValue","input_name","parseInt","lastInputValue","checkType","numeral","numeralPositiveOnly","numeralThousandsGroupStyle","enableNegative","snapshot","onInit","cleave","numberFormat","InputRange","StyledLoader","styled","LoadingOverlay","MyLoadingOvelay","fadeSpeed","active","isLoading","spinner","children","Filter","DefaultColumnFilter","filterValue","column","setData","zIndex","DataTableContainer","columns","renderRowSubComponent","customPageIndex","customPageSize","customPageCount","isColumnsSearchable","primaryKey","customPageTotal","sortBy","k","urut","desc","useTable","defaultColumn","initialState","pageIndex","pageSize","manualPagination","pageCount","manualSortBy","defaultCanSort","isMultiSortEvent","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","gotoPage","setPageSize","useDebounce","sort","mykey","mysort","isSorted","isSortedDesc","localLoading","setLocalLoading","curpage","setCurPage","onChangeInSelect","onChangeInInput","customgotoPage","customcanNextPage","customcanPreviousPage","customnextPage","custompreviousPage","overflow","border","faAngleDoubleLeft","faAngleLeft","faFile","borderRight","minWidth","faBars","faAngleRight","faAngleDoubleRight","Table","margin","responsive","bordered","hover","striped","vcenter","headerGroup","getHeaderGroupProps","padding","borderTop","getHeaderProps","getSortByToggleProps","fontWeight","generateSortingIndicator","row","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","textAlign","DataTable","visible","setVisible","link","setLink","temp","setTemp","meta","setMeta","tooltipOpenEx","setTooltipOpenEx","tooltipOpenIm","setTooltipOpenIm","key_select","checkComponent","Cell","local_input","selectable","original","findIndex","rowInfo","exist","new_input","_filter","uniq","onChecked","nodeRef","isVisible","useIsVisible","col","action","actionComponent","sortable","param","DropdownButton","isOpen","dropdown","openToggle","title","isBoolean","Dropdown","Item","onReload","uniqBy","new_parameter","find_data","syncParameter","useMemo","marginBottom","Row","Col","xs","sm","md","lg","renderFilter","justifyContent","isSearchable","loaded","faSync","spin","exportReload","disabledButton","faArrowAltCircleDown","Tooltip","placement","autohide","importReload","faArrowAltCircleUp","fetchData","total","last_page","per_page","current_page","formatDefault","faClock","InputDateTime","_","timeInputLabel","showTimeInput","IconClock","position","left","top","InputTime","TimePicker","inputIcon","InputTag","tags","suggestions","separator","reactTags","slice","splice","onAddition","tag","concat","onFocus","onValidate","v","ReactTags","minQueryLength","noSuggestionsText","removeButtonText","placeholderText","allowNew","isCreateable","InputSelect","withModal","ModalHeader","ModalBody","Select","isMulti","getOptionLabel","getOptionValue","noOptionsMessage","isDisabled","menuPortalTarget","document","body","menuPosition","styles","menuPortal","base","menu","provided","multiValueRemove","cursor","multiValue","multiValueLabel","clearIndicator","InputYear","override","css","Main","hex","setParameter","right","bottom","SketchPicker","onChangeComplete","marginTop","backgroundColor","ShowData","setVal","defaultFilterData","pkey","keyword","load","resp","isObject","Object","keys","new_input_key","borderRadius","Chart","chart","series","isPlainObject","i2","dataLabels","labels","colors","optionColor","locales","animations","brush","defaultLocale","dropShadow","foreColor","group","events","isNumber","offsetX","offsetY","parentHeightOffset","redrawOnParentResize","redrawOnWindowResize","selection","sparkline","stacked","stackType","zoom","fill","forecastDataPoints","grid","legend","markers","noData","states","stroke","subtitle","theme","tooltip","xaxis","yaxis","plotOptions","ApexCharts","errorMessage","Group","as","Label","labelSize","isRequired","hint","inputSize","listLoading","setListLoading","localParameter","setLocalParameter","setLast","_value","_local_input","accessor","loadOptions","sorted","search","responseJSON","generateInputMultiple","generateInput","_input","_parameter","isi_param","isDelay","setIsDelay","submitLoading","setSubmitLoading","responseLoading","setResponseLoading","validation","list","setList","activity","role","setActivity","doAfterSubmit","doSubmit","doCancel","relation","isDelete","setReadonly","newactivity","code","fetchErrorDispatch","allowed_role","user_role","is_allowed","is_admin","trim","Card","attachment","required","f","comment","due_datetime","start_datetime","end_datetime","response_activity"],"mappings":"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"}